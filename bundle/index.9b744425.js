let e,t,r;var n,i,a,o,s,l,h,u,c=globalThis,d={},p={},f=c.parcelRequirecc35;null==f&&((f=function(e){if(e in d)return d[e].exports;if(e in p){var t=p[e];delete p[e];var r={id:e,exports:{}};return d[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){p[e]=t},c.parcelRequirecc35=f);var m=f.register;m("2haic",function(e,t){var r=f("Gr8vk");e.exports=r("41G56").then(()=>f("kjyEk"))}),m("Gr8vk",function(e,t){e.exports=function(e){return import(f("27Lyk").resolve(e))}});const g="srgb",_="srgb-linear",v="display-p3",y="display-p3-linear",x="linear",E="srgb",M="rec709",S="300 es";class b{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let r=this._listeners[e];if(void 0!==r){let e=r.indexOf(t);-1!==e&&r.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners[e.type];if(void 0!==t){e.target=this;let r=t.slice(0);for(let t=0,n=r.length;t<n;t++)r[t].call(this,e);e.target=null}}}const T=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],w=Math.PI/180,A=180/Math.PI;function R(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(T[255&e]+T[e>>8&255]+T[e>>16&255]+T[e>>24&255]+"-"+T[255&t]+T[t>>8&255]+"-"+T[t>>16&15|64]+T[t>>24&255]+"-"+T[63&r|128]+T[r>>8&255]+"-"+T[r>>16&255]+T[r>>24&255]+T[255&n]+T[n>>8&255]+T[n>>16&255]+T[n>>24&255]).toLowerCase()}function C(e,t,r){return Math.max(t,Math.min(r,e))}function P(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function L(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}class N{constructor(e=0,t=0){N.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(C(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*n+e.x,this.y=i*n+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class U{constructor(e,t,r,n,i,a,o,s,l){U.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,r,n,i,a,o,s,l)}set(e,t,r,n,i,a,o,s,l){let h=this.elements;return h[0]=e,h[1]=n,h[2]=o,h[3]=t,h[4]=i,h[5]=s,h[6]=r,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[3],s=r[6],l=r[1],h=r[4],u=r[7],c=r[2],d=r[5],p=r[8],f=n[0],m=n[3],g=n[6],_=n[1],v=n[4],y=n[7],x=n[2],E=n[5],M=n[8];return i[0]=a*f+o*_+s*x,i[3]=a*m+o*v+s*E,i[6]=a*g+o*y+s*M,i[1]=l*f+h*_+u*x,i[4]=l*m+h*v+u*E,i[7]=l*g+h*y+u*M,i[2]=c*f+d*_+p*x,i[5]=c*m+d*v+p*E,i[8]=c*g+d*y+p*M,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-r*i*h+r*o*s+n*i*l-n*a*s}invert(){let e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8],u=h*a-o*l,c=o*s-h*i,d=l*i-a*s,p=t*u+r*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=u*f,e[1]=(n*l-h*r)*f,e[2]=(o*r-n*a)*f,e[3]=c*f,e[4]=(h*t-n*s)*f,e[5]=(n*i-o*t)*f,e[6]=d*f,e[7]=(r*s-l*t)*f,e[8]=(a*t-r*i)*f,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,n,i,a,o){let s=Math.cos(i),l=Math.sin(i);return this.set(r*s,r*l,-r*(s*a+l*o)+a+e,-n*l,n*s,-n*(-l*a+s*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(I.makeScale(e,t)),this}rotate(e){return this.premultiply(I.makeRotation(-e)),this}translate(e,t){return this.premultiply(I.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,r,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){let r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const I=new U;function D(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function O(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const F={},B=new U().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),z=new U().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),k={[_]:{transfer:x,primaries:M,toReference:e=>e,fromReference:e=>e},[g]:{transfer:E,primaries:M,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[y]:{transfer:x,primaries:"p3",toReference:e=>e.applyMatrix3(z),fromReference:e=>e.applyMatrix3(B)},[v]:{transfer:E,primaries:"p3",toReference:e=>e.convertSRGBToLinear().applyMatrix3(z),fromReference:e=>e.applyMatrix3(B).convertLinearToSRGB()}},H=new Set([_,y]),V={enabled:!0,_workingColorSpace:_,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!H.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(e,t,r){if(!1===this.enabled||t===r||!t||!r)return e;let n=k[t].toReference;return(0,k[r].fromReference)(n(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return k[e].primaries},getTransfer:function(e){return""===e?x:k[e].transfer}};function G(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function W(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class X{static getDataURL(t){let r;if(/^data:/i.test(t.src)||"undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)r=t;else{void 0===e&&(e=O("canvas")),e.width=t.width,e.height=t.height;let n=e.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),r=e}return r.width>2048||r.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),r.toDataURL("image/jpeg",.6)):r.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=O("canvas");t.width=e.width,t.height=e.height;let r=t.getContext("2d");r.drawImage(e,0,0,e.width,e.height);let n=r.getImageData(0,0,e.width,e.height),i=n.data;for(let e=0;e<i.length;e++)i[e]=255*G(i[e]/255);return r.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*G(t[e]/255)):t[e]=G(t[e]);return{data:t,width:e.width,height:e.height}}}}let j=0;class q{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:j++}),this.uuid=R(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let r={uuid:this.uuid,url:""},n=this.data;if(null!==n){let e;if(Array.isArray(n)){e=[];for(let t=0,r=n.length;t<r;t++)n[t].isDataTexture?e.push(Y(n[t].image)):e.push(Y(n[t]))}else e=Y(n);r.url=e}return t||(e.images[this.uuid]=r),r}}function Y(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?X.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let J=0;class $ extends b{constructor(e=$.DEFAULT_IMAGE,t=$.DEFAULT_MAPPING,r=1001,n=1001,i=1006,a=1008,o=1023,s=1009,l=$.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:J++}),this.uuid=R(),this.name="",this.source=new q(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=r,this.wrapT=n,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new N(0,0),this.repeat=new N(1,1),this.center=new N(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new U,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let r={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}$.DEFAULT_IMAGE=null,$.DEFAULT_MAPPING=300,$.DEFAULT_ANISOTROPY=1;class Z{constructor(e=0,t=0,r=0,n=1){Z.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,r=this.y,n=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,n,i;let a=e.elements,o=a[0],s=a[4],l=a[8],h=a[1],u=a[5],c=a[9],d=a[2],p=a[6],f=a[10];if(.01>Math.abs(s-h)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(s+h)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(o+u+f-3))return this.set(1,0,0,0),this;t=Math.PI;let e=(o+1)/2,a=(u+1)/2,m=(f+1)/2,g=(s+h)/4,_=(l+d)/4,v=(c+p)/4;return e>a&&e>m?e<.01?(r=0,n=.707106781,i=.707106781):(n=g/(r=Math.sqrt(e)),i=_/r):a>m?a<.01?(r=.707106781,n=0,i=.707106781):(r=g/(n=Math.sqrt(a)),i=v/n):m<.01?(r=.707106781,n=.707106781,i=0):(r=_/(i=Math.sqrt(m)),n=v/i),this.set(r,n,i,t),this}let m=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(h-s)*(h-s));return .001>Math.abs(m)&&(m=1),this.x=(p-c)/m,this.y=(l-d)/m,this.z=(h-s)/m,this.w=Math.acos((o+u+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class K extends b{constructor(e=1,t=1,r={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Z(0,0,e,t),this.scissorTest=!1,this.viewport=new Z(0,0,e,t);let n=new $({width:e,height:t,depth:1},(r=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},r)).mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.colorSpace);n.flipY=!1,n.generateMipmaps=r.generateMipmaps,n.internalFormat=r.internalFormat,this.textures=[];let i=r.count;for(let e=0;e<i;e++)this.textures[e]=n.clone(),this.textures[e].isRenderTargetTexture=!0;this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,this.depthTexture=r.depthTexture,this.samples=r.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,r=1){if(this.width!==e||this.height!==t||this.depth!==r){this.width=e,this.height=t,this.depth=r;for(let n=0,i=this.textures.length;n<i;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=r;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,r=e.textures.length;t<r;t++)this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new q(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Q extends K{constructor(e=1,t=1,r={}){super(e,t,r),this.isWebGLRenderTarget=!0}}class ee extends ${constructor(e=null,t=1,r=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class et{constructor(e=0,t=0,r=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=n}static slerpFlat(e,t,r,n,i,a,o){let s=r[n+0],l=r[n+1],h=r[n+2],u=r[n+3],c=i[a+0],d=i[a+1],p=i[a+2],f=i[a+3];if(0===o){e[t+0]=s,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===o){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(u!==f||s!==c||l!==d||h!==p){let e=1-o,t=s*c+l*d+h*p+u*f,r=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){let i=Math.sqrt(n),a=Math.atan2(i,t*r);e=Math.sin(e*a)/i,o=Math.sin(o*a)/i}let i=o*r;if(s=s*e+c*i,l=l*e+d*i,h=h*e+p*i,u=u*e+f*i,e===1-o){let e=1/Math.sqrt(s*s+l*l+h*h+u*u);s*=e,l*=e,h*=e,u*=e}}e[t]=s,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,r,n,i,a){let o=r[n],s=r[n+1],l=r[n+2],h=r[n+3],u=i[a],c=i[a+1],d=i[a+2],p=i[a+3];return e[t]=o*p+h*u+s*d-l*c,e[t+1]=s*p+h*c+l*u-o*d,e[t+2]=l*p+h*d+o*c-s*u,e[t+3]=h*p-o*u-s*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){let r=e._x,n=e._y,i=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(r/2),h=o(n/2),u=o(i/2),c=s(r/2),d=s(n/2),p=s(i/2);switch(a){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,r=t[0],n=t[4],i=t[8],a=t[1],o=t[5],s=t[9],l=t[2],h=t[6],u=t[10],c=r+o+u;if(c>0){let e=.5/Math.sqrt(c+1);this._w=.25/e,this._x=(h-s)*e,this._y=(i-l)*e,this._z=(a-n)*e}else if(r>o&&r>u){let e=2*Math.sqrt(1+r-o-u);this._w=(h-s)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(i+l)/e}else if(o>u){let e=2*Math.sqrt(1+o-r-u);this._w=(i-l)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(s+h)/e}else{let e=2*Math.sqrt(1+u-r-o);this._w=(a-n)/e,this._x=(i+l)/e,this._y=(s+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=r,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(C(this.dot(e),-1,1)))}rotateTowards(e,t){let r=this.angleTo(e);return 0===r||this.slerp(e,Math.min(1,t/r)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let r=e._x,n=e._y,i=e._z,a=e._w,o=t._x,s=t._y,l=t._z,h=t._w;return this._x=r*h+a*o+n*l-i*s,this._y=n*h+a*s+i*o-r*l,this._z=i*h+a*l+r*s-n*o,this._w=a*h-r*o-n*s-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let r=this._x,n=this._y,i=this._z,a=this._w,o=a*e._w+r*e._x+n*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=n,this._z=i,this;let s=1-o*o;if(s<=Number.EPSILON){let e=1-t;return this._w=e*a+t*this._w,this._x=e*r+t*this._x,this._y=e*n+t*this._y,this._z=e*i+t*this._z,this.normalize(),this}let l=Math.sqrt(s),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,c=Math.sin(t*h)/l;return this._w=a*u+this._w*c,this._x=r*u+this._x*c,this._y=n*u+this._y*c,this._z=i*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){let e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),r=Math.random(),n=Math.sqrt(1-r),i=Math.sqrt(r);return this.set(n*Math.sin(e),n*Math.cos(e),i*Math.sin(t),i*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class er{constructor(e=0,t=0,r=0){er.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ei.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ei.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,r=this.y,n=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a,this}applyQuaternion(e){let t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,o=e.z,s=e.w,l=2*(a*n-o*r),h=2*(o*t-i*n),u=2*(i*r-a*t);return this.x=t+s*l+a*u-o*h,this.y=r+s*h+o*l-i*u,this.z=n+s*u+i*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let r=e.x,n=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=n*s-i*o,this.y=i*a-r*s,this.z=r*o-n*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return en.copy(this).projectOnVector(e),this.sub(en)}reflect(e){return this.sub(en.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(C(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){let n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=Math.random()*Math.PI*2,t=2*Math.random()-1,r=Math.sqrt(1-t*t);return this.x=r*Math.cos(e),this.y=t,this.z=r*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const en=new er,ei=new et;class ea{constructor(e=new er(1/0,1/0,1/0),t=new er(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t+=3)this.expandByPoint(es.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,r=e.count;t<r;t++)this.expandByPoint(es.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let r=es.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let r=e.geometry;if(void 0!==r){let n=r.getAttribute("position");if(!0===t&&void 0!==n&&!0!==e.isInstancedMesh)for(let t=0,r=n.count;t<r;t++)!0===e.isMesh?e.getVertexPosition(t,es):es.fromBufferAttribute(n,t),es.applyMatrix4(e.matrixWorld),this.expandByPoint(es);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),el.copy(e.boundingBox)):(null===r.boundingBox&&r.computeBoundingBox(),el.copy(r.boundingBox)),el.applyMatrix4(e.matrixWorld),this.union(el)}let n=e.children;for(let e=0,r=n.length;e<r;e++)this.expandByObject(n[e],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,es),es.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(em),eg.subVectors(this.max,em),eh.subVectors(e.a,em),eu.subVectors(e.b,em),ec.subVectors(e.c,em),ed.subVectors(eu,eh),ep.subVectors(ec,eu),ef.subVectors(eh,ec);let t=[0,-ed.z,ed.y,0,-ep.z,ep.y,0,-ef.z,ef.y,ed.z,0,-ed.x,ep.z,0,-ep.x,ef.z,0,-ef.x,-ed.y,ed.x,0,-ep.y,ep.x,0,-ef.y,ef.x,0];return!!(ey(t,eh,eu,ec,eg)&&ey(t=[1,0,0,0,1,0,0,0,1],eh,eu,ec,eg))&&(e_.crossVectors(ed,ep),ey(t=[e_.x,e_.y,e_.z],eh,eu,ec,eg))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,es).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(es).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(eo[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),eo[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),eo[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),eo[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),eo[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),eo[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),eo[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),eo[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(eo)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const eo=[new er,new er,new er,new er,new er,new er,new er,new er],es=new er,el=new ea,eh=new er,eu=new er,ec=new er,ed=new er,ep=new er,ef=new er,em=new er,eg=new er,e_=new er,ev=new er;function ey(e,t,r,n,i){for(let a=0,o=e.length-3;a<=o;a+=3){ev.fromArray(e,a);let o=i.x*Math.abs(ev.x)+i.y*Math.abs(ev.y)+i.z*Math.abs(ev.z),s=t.dot(ev),l=r.dot(ev),h=n.dot(ev);if(Math.max(-Math.max(s,l,h),Math.min(s,l,h))>o)return!1}return!0}const ex=new ea,eE=new er,eM=new er;class eS{constructor(e=new er,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let r=this.center;void 0!==t?r.copy(t):ex.setFromPoints(e).getCenter(r);let n=0;for(let t=0,i=e.length;t<i;t++)n=Math.max(n,r.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;eE.subVectors(e,this.center);let t=eE.lengthSq();if(t>this.radius*this.radius){let e=Math.sqrt(t),r=(e-this.radius)*.5;this.center.addScaledVector(eE,r/e),this.radius+=r}return this}union(e){return e.isEmpty()||(this.isEmpty()?this.copy(e):!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(eM.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(eE.copy(e.center).add(eM)),this.expandByPoint(eE.copy(e.center).sub(eM)))),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const eb=new er,eT=new er,ew=new er,eA=new er,eR=new er,eC=new er,eP=new er;class eL{constructor(e,t,r,n,i,a,o,s,l,h,u,c,d,p,f,m){eL.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,r,n,i,a,o,s,l,h,u,c,d,p,f,m)}set(e,t,r,n,i,a,o,s,l,h,u,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=n,g[1]=i,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new eL().fromArray(this.elements)}copy(e){let t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){let t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,r=e.elements,n=1/eN.setFromMatrixColumn(e,0).length(),i=1/eN.setFromMatrixColumn(e,1).length(),a=1/eN.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,r=e.x,n=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(n),l=Math.sin(n),h=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){let e=a*h,r=a*u,n=o*h,i=o*u;t[0]=s*h,t[4]=-s*u,t[8]=l,t[1]=r+n*l,t[5]=e-i*l,t[9]=-o*s,t[2]=i-e*l,t[6]=n+r*l,t[10]=a*s}else if("YXZ"===e.order){let e=s*h,r=s*u,n=l*h,i=l*u;t[0]=e+i*o,t[4]=n*o-r,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=r*o-n,t[6]=i+e*o,t[10]=a*s}else if("ZXY"===e.order){let e=s*h,r=s*u,n=l*h,i=l*u;t[0]=e-i*o,t[4]=-a*u,t[8]=n+r*o,t[1]=r+n*o,t[5]=a*h,t[9]=i-e*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){let e=a*h,r=a*u,n=o*h,i=o*u;t[0]=s*h,t[4]=n*l-r,t[8]=e*l+i,t[1]=s*u,t[5]=i*l+e,t[9]=r*l-n,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){let e=a*s,r=a*l,n=o*s,i=o*l;t[0]=s*h,t[4]=i-e*u,t[8]=n*u+r,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=r*u+n,t[10]=e-i*u}else if("XZY"===e.order){let e=a*s,r=a*l,n=o*s,i=o*l;t[0]=s*h,t[4]=-u,t[8]=l*h,t[1]=e*u+i,t[5]=a*h,t[9]=r*u-n,t[2]=n*u-r,t[6]=o*h,t[10]=i*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(eI,e,eD)}lookAt(e,t,r){let n=this.elements;return eB.subVectors(e,t),0===eB.lengthSq()&&(eB.z=1),eB.normalize(),eO.crossVectors(r,eB),0===eO.lengthSq()&&(1===Math.abs(r.z)?eB.x+=1e-4:eB.z+=1e-4,eB.normalize(),eO.crossVectors(r,eB)),eO.normalize(),eF.crossVectors(eB,eO),n[0]=eO.x,n[4]=eF.x,n[8]=eB.x,n[1]=eO.y,n[5]=eF.y,n[9]=eB.y,n[2]=eO.z,n[6]=eF.z,n[10]=eB.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let r=e.elements,n=t.elements,i=this.elements,a=r[0],o=r[4],s=r[8],l=r[12],h=r[1],u=r[5],c=r[9],d=r[13],p=r[2],f=r[6],m=r[10],g=r[14],_=r[3],v=r[7],y=r[11],x=r[15],E=n[0],M=n[4],S=n[8],b=n[12],T=n[1],w=n[5],A=n[9],R=n[13],C=n[2],P=n[6],L=n[10],N=n[14],U=n[3],I=n[7],D=n[11],O=n[15];return i[0]=a*E+o*T+s*C+l*U,i[4]=a*M+o*w+s*P+l*I,i[8]=a*S+o*A+s*L+l*D,i[12]=a*b+o*R+s*N+l*O,i[1]=h*E+u*T+c*C+d*U,i[5]=h*M+u*w+c*P+d*I,i[9]=h*S+u*A+c*L+d*D,i[13]=h*b+u*R+c*N+d*O,i[2]=p*E+f*T+m*C+g*U,i[6]=p*M+f*w+m*P+g*I,i[10]=p*S+f*A+m*L+g*D,i[14]=p*b+f*R+m*N+g*O,i[3]=_*E+v*T+y*C+x*U,i[7]=_*M+v*w+y*P+x*I,i[11]=_*S+v*A+y*L+x*D,i[15]=_*b+v*R+y*N+x*O,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],o=e[5],s=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3];return p*(+i*s*u-n*l*u-i*o*c+r*l*c+n*o*d-r*s*d)+e[7]*(+t*s*d-t*l*c+i*a*c-n*a*d+n*l*h-i*s*h)+e[11]*(+t*l*u-t*o*d-i*a*u+r*a*d+i*o*h-r*l*h)+e[15]*(-n*o*h-t*s*u+t*o*c+n*a*u-r*a*c+r*s*h)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,r){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this}invert(){let e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],_=u*m*l-f*c*l+f*s*d-o*m*d-u*s*g+o*c*g,v=p*c*l-h*m*l-p*s*d+a*m*d+h*s*g-a*c*g,y=h*f*l-p*u*l+p*o*d-a*f*d-h*o*g+a*u*g,x=p*u*s-h*f*s-p*o*c+a*f*c+h*o*m-a*u*m,E=t*_+r*v+n*y+i*x;if(0===E)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let M=1/E;return e[0]=_*M,e[1]=(f*c*i-u*m*i-f*n*d+r*m*d+u*n*g-r*c*g)*M,e[2]=(o*m*i-f*s*i+f*n*l-r*m*l-o*n*g+r*s*g)*M,e[3]=(u*s*i-o*c*i-u*n*l+r*c*l+o*n*d-r*s*d)*M,e[4]=v*M,e[5]=(h*m*i-p*c*i+p*n*d-t*m*d-h*n*g+t*c*g)*M,e[6]=(p*s*i-a*m*i-p*n*l+t*m*l+a*n*g-t*s*g)*M,e[7]=(a*c*i-h*s*i+h*n*l-t*c*l-a*n*d+t*s*d)*M,e[8]=y*M,e[9]=(p*u*i-h*f*i-p*r*d+t*f*d+h*r*g-t*u*g)*M,e[10]=(a*f*i-p*o*i+p*r*l-t*f*l-a*r*g+t*o*g)*M,e[11]=(h*o*i-a*u*i-h*r*l+t*u*l+a*r*d-t*o*d)*M,e[12]=x*M,e[13]=(h*f*n-p*u*n+p*r*c-t*f*c-h*r*m+t*u*m)*M,e[14]=(p*o*n-a*f*n-p*r*s+t*f*s+a*r*m-t*o*m)*M,e[15]=(a*u*n-h*o*n+h*r*s-t*u*s-a*r*c+t*o*c)*M,this}scale(e){let t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this}getMaxScaleOnAxis(){let e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,r){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,o=e.y,s=e.z,l=i*a,h=i*o;return this.set(l*a+r,l*o-n*s,l*s+n*o,0,l*o+n*s,h*o+r,h*s-n*a,0,l*s-n*o,h*s+n*a,i*s*s+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,n,i,a){return this.set(1,r,i,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,r){let n=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,l=i+i,h=a+a,u=o+o,c=i*l,d=i*h,p=i*u,f=a*h,m=a*u,g=o*u,_=s*l,v=s*h,y=s*u,x=r.x,E=r.y,M=r.z;return n[0]=(1-(f+g))*x,n[1]=(d+y)*x,n[2]=(p-v)*x,n[3]=0,n[4]=(d-y)*E,n[5]=(1-(c+g))*E,n[6]=(m+_)*E,n[7]=0,n[8]=(p+v)*M,n[9]=(m-_)*M,n[10]=(1-(c+f))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,r){let n=this.elements,i=eN.set(n[0],n[1],n[2]).length(),a=eN.set(n[4],n[5],n[6]).length(),o=eN.set(n[8],n[9],n[10]).length();0>this.determinant()&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],eU.copy(this);let s=1/i,l=1/a,h=1/o;return eU.elements[0]*=s,eU.elements[1]*=s,eU.elements[2]*=s,eU.elements[4]*=l,eU.elements[5]*=l,eU.elements[6]*=l,eU.elements[8]*=h,eU.elements[9]*=h,eU.elements[10]*=h,t.setFromRotationMatrix(eU),r.x=i,r.y=a,r.z=o,this}makePerspective(e,t,r,n,i,a,o=2e3){let s,l;let h=this.elements;if(2e3===o)s=-(a+i)/(a-i),l=-2*a*i/(a-i);else if(2001===o)s=-a/(a-i),l=-a*i/(a-i);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return h[0]=2*i/(t-e),h[4]=0,h[8]=(t+e)/(t-e),h[12]=0,h[1]=0,h[5]=2*i/(r-n),h[9]=(r+n)/(r-n),h[13]=0,h[2]=0,h[6]=0,h[10]=s,h[14]=l,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(e,t,r,n,i,a,o=2e3){let s,l;let h=this.elements,u=1/(t-e),c=1/(r-n),d=1/(a-i);if(2e3===o)s=(a+i)*d,l=-2*d;else if(2001===o)s=i*d,l=-1*d;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-((t+e)*u),h[1]=0,h[5]=2*c,h[9]=0,h[13]=-((r+n)*c),h[2]=0,h[6]=0,h[10]=l,h[14]=-s,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(e){let t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){let r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const eN=new er,eU=new eL,eI=new er(0,0,0),eD=new er(1,1,1),eO=new er,eF=new er,eB=new er,ez=new eL,ek=new et;class eH{constructor(e=0,t=0,r=0,n=eH.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,n=this._order){return this._x=e,this._y=t,this._z=r,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){let n=e.elements,i=n[0],a=n[4],o=n[8],s=n[1],l=n[5],h=n[9],u=n[2],c=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(C(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-C(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(o,d),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(C(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-C(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,d),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(C(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-C(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return ez.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ez,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ek.setFromEuler(this),this.setFromQuaternion(ek,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}eH.DEFAULT_ORDER="XYZ";class eV{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let eG=0;const eW=new er,eX=new et,ej=new eL,eq=new er,eY=new er,eJ=new er,e$=new et,eZ=new er(1,0,0),eK=new er(0,1,0),eQ=new er(0,0,1),e0={type:"added"},e1={type:"removed"},e2={type:"childadded",child:null},e3={type:"childremoved",child:null};class e4 extends b{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eG++}),this.uuid=R(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=e4.DEFAULT_UP.clone();let e=new er,t=new eH,r=new et,n=new er(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new eL},normalMatrix:{value:new U}}),this.matrix=new eL,this.matrixWorld=new eL,this.matrixAutoUpdate=e4.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=e4.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new eV,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return eX.setFromAxisAngle(e,t),this.quaternion.multiply(eX),this}rotateOnWorldAxis(e,t){return eX.setFromAxisAngle(e,t),this.quaternion.premultiply(eX),this}rotateX(e){return this.rotateOnAxis(eZ,e)}rotateY(e){return this.rotateOnAxis(eK,e)}rotateZ(e){return this.rotateOnAxis(eQ,e)}translateOnAxis(e,t){return eW.copy(e).applyQuaternion(this.quaternion),this.position.add(eW.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(eZ,e)}translateY(e){return this.translateOnAxis(eK,e)}translateZ(e){return this.translateOnAxis(eQ,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ej.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?eq.copy(e):eq.set(e,t,r);let n=this.parent;this.updateWorldMatrix(!0,!1),eY.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ej.lookAt(eY,eq,this.up):ej.lookAt(eq,eY,this.up),this.quaternion.setFromRotationMatrix(ej),n&&(ej.extractRotation(n.matrixWorld),eX.setFromRotationMatrix(ej),this.quaternion.premultiply(eX.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(e0),e2.child=e,this.dispatchEvent(e2),e2.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(e1),e3.child=e,this.dispatchEvent(e3),e3.child=null),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ej.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),ej.multiply(e.parent.matrixWorld)),e.applyMatrix4(ej),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(e0),e2.child=e,this.dispatchEvent(e2),e2.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,n=this.children.length;r<n;r++){let n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}}getObjectsByProperty(e,t,r=[]){this[e]===t&&r.push(this);let n=this.children;for(let i=0,a=n.length;i<a;i++)n[i].getObjectsByProperty(e,t,r);return r}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eY,e,eJ),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eY,e$,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let r=0,n=t.length;r<n;r++){let n=t[r];(!0===n.matrixWorldAutoUpdate||!0===e)&&n.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let r=this.parent;if(!0===e&&null!==r&&!0===r.matrixWorldAutoUpdate&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let e=this.children;for(let t=0,r=e.length;t<r;t++){let r=e[t];!0===r.matrixWorldAutoUpdate&&r.updateWorldMatrix(!1,!0)}}}toJSON(e){let t=void 0===e||"string"==typeof e,r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let n={};function i(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(e=>({boxInitialized:e.boxInitialized,boxMin:e.box.min.toArray(),boxMax:e.box.max.toArray(),sphereInitialized:e.sphereInitialized,sphereRadius:e.sphere.radius,sphereCenter:e.sphere.center.toArray()})),n.maxGeometryCount=this._maxGeometryCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),null!==this.boundingSphere&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),null!==this.boundingBox&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=i(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let r=t.shapes;if(Array.isArray(r))for(let t=0,n=r.length;t<n;t++){let n=r[t];i(e.shapes,n)}else i(e.shapes,r)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let t=[];for(let r=0,n=this.material.length;r<n;r++)t.push(i(e.materials,this.material[r]));n.material=t}else n.material=i(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){let r=this.animations[t];n.animations.push(i(e.animations,r))}}if(t){let t=a(e.geometries),n=a(e.materials),i=a(e.textures),o=a(e.images),s=a(e.shapes),l=a(e.skeletons),h=a(e.animations),u=a(e.nodes);t.length>0&&(r.geometries=t),n.length>0&&(r.materials=n),i.length>0&&(r.textures=i),o.length>0&&(r.images=o),s.length>0&&(r.shapes=s),l.length>0&&(r.skeletons=l),h.length>0&&(r.animations=h),u.length>0&&(r.nodes=u)}return r.object=n,r;function a(e){let t=[];for(let r in e){let n=e[r];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let r=e.children[t];this.add(r.clone())}return this}}e4.DEFAULT_UP=new er(0,1,0),e4.DEFAULT_MATRIX_AUTO_UPDATE=!0,e4.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const e5=new er,e6=new er,e8=new er,e7=new er,e9=new er,te=new er,tt=new er,tr=new er,tn=new er,ti=new er;class ta{constructor(e=new er,t=new er,r=new er){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,n){n.subVectors(r,t),e5.subVectors(e,t),n.cross(e5);let i=n.lengthSq();return i>0?n.multiplyScalar(1/Math.sqrt(i)):n.set(0,0,0)}static getBarycoord(e,t,r,n,i){e5.subVectors(n,t),e6.subVectors(r,t),e8.subVectors(e,t);let a=e5.dot(e5),o=e5.dot(e6),s=e5.dot(e8),l=e6.dot(e6),h=e6.dot(e8),u=a*l-o*o;if(0===u)return i.set(0,0,0),null;let c=1/u,d=(l*s-o*h)*c,p=(a*h-o*s)*c;return i.set(1-d-p,p,d)}static containsPoint(e,t,r,n){return null!==this.getBarycoord(e,t,r,n,e7)&&e7.x>=0&&e7.y>=0&&e7.x+e7.y<=1}static getInterpolation(e,t,r,n,i,a,o,s){return null===this.getBarycoord(e,t,r,n,e7)?(s.x=0,s.y=0,"z"in s&&(s.z=0),"w"in s&&(s.w=0),null):(s.setScalar(0),s.addScaledVector(i,e7.x),s.addScaledVector(a,e7.y),s.addScaledVector(o,e7.z),s)}static isFrontFacing(e,t,r,n){return e5.subVectors(r,t),e6.subVectors(e,t),0>e5.cross(e6).dot(n)}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,r,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return e5.subVectors(this.c,this.b),e6.subVectors(this.a,this.b),.5*e5.cross(e6).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ta.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ta.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,r,n,i){return ta.getInterpolation(e,this.a,this.b,this.c,t,r,n,i)}containsPoint(e){return ta.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ta.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let r,n;let i=this.a,a=this.b,o=this.c;e9.subVectors(a,i),te.subVectors(o,i),tr.subVectors(e,i);let s=e9.dot(tr),l=te.dot(tr);if(s<=0&&l<=0)return t.copy(i);tn.subVectors(e,a);let h=e9.dot(tn),u=te.dot(tn);if(h>=0&&u<=h)return t.copy(a);let c=s*u-h*l;if(c<=0&&s>=0&&h<=0)return r=s/(s-h),t.copy(i).addScaledVector(e9,r);ti.subVectors(e,o);let d=e9.dot(ti),p=te.dot(ti);if(p>=0&&d<=p)return t.copy(o);let f=d*l-s*p;if(f<=0&&l>=0&&p<=0)return n=l/(l-p),t.copy(i).addScaledVector(te,n);let m=h*p-d*u;if(m<=0&&u-h>=0&&d-p>=0)return tt.subVectors(o,a),n=(u-h)/(u-h+(d-p)),t.copy(a).addScaledVector(tt,n);let g=1/(m+f+c);return r=f*g,n=c*g,t.copy(i).addScaledVector(e9,r).addScaledVector(te,n)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const to={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ts={h:0,s:0,l:0},tl={h:0,s:0,l:0};function th(e,t,r){return(r<0&&(r+=1),r>1&&(r-=1),r<1/6)?e+(t-e)*6*r:r<.5?t:r<2/3?e+(t-e)*6*(2/3-r):e}class tu{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,r)}set(e,t,r){return void 0===t&&void 0===r?e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e):this.setRGB(e,t,r),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=g){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,V.toWorkingColorSpace(this,t),this}setRGB(e,t,r,n=V.workingColorSpace){return this.r=e,this.g=t,this.b=r,V.toWorkingColorSpace(this,n),this}setHSL(e,t,r,n=V.workingColorSpace){if(e=(e%1+1)%1,t=C(t,0,1),r=C(r,0,1),0===t)this.r=this.g=this.b=r;else{let n=r<=.5?r*(1+t):r+t-r*t,i=2*r-n;this.r=th(i,n,e+1/3),this.g=th(i,n,e),this.b=th(i,n,e-1/3)}return V.toWorkingColorSpace(this,n),this}setStyle(e,t=g){let r;function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;let a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){let n=r[1],i=n.length;if(3===i)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===i)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=g){let r=to[e.toLowerCase()];return void 0!==r?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=G(e.r),this.g=G(e.g),this.b=G(e.b),this}copyLinearToSRGB(e){return this.r=W(e.r),this.g=W(e.g),this.b=W(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=g){return V.fromWorkingColorSpace(tc.copy(this),e),65536*Math.round(C(255*tc.r,0,255))+256*Math.round(C(255*tc.g,0,255))+Math.round(C(255*tc.b,0,255))}getHexString(e=g){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=V.workingColorSpace){let r,n;V.fromWorkingColorSpace(tc.copy(this),t);let i=tc.r,a=tc.g,o=tc.b,s=Math.max(i,a,o),l=Math.min(i,a,o),h=(l+s)/2;if(l===s)r=0,n=0;else{let e=s-l;switch(n=h<=.5?e/(s+l):e/(2-s-l),s){case i:r=(a-o)/e+(a<o?6:0);break;case a:r=(o-i)/e+2;break;case o:r=(i-a)/e+4}r/=6}return e.h=r,e.s=n,e.l=h,e}getRGB(e,t=V.workingColorSpace){return V.fromWorkingColorSpace(tc.copy(this),t),e.r=tc.r,e.g=tc.g,e.b=tc.b,e}getStyle(e=g){V.fromWorkingColorSpace(tc.copy(this),e);let t=tc.r,r=tc.g,n=tc.b;return e!==g?`color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*r)},${Math.round(255*n)})`}offsetHSL(e,t,r){return this.getHSL(ts),this.setHSL(ts.h+e,ts.s+t,ts.l+r)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(ts),e.getHSL(tl);let r=(1-t)*ts.h+t*tl.h,n=(1-t)*ts.s+t*tl.s,i=(1-t)*ts.l+t*tl.l;return this.setHSL(r,n,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,r=this.g,n=this.b,i=e.elements;return this.r=i[0]*t+i[3]*r+i[6]*n,this.g=i[1]*t+i[4]*r+i[7]*n,this.b=i[2]*t+i[5]*r+i[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const tc=new tu;tu.NAMES=to;let td=0;class tp extends b{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:td++}),this.uuid=R(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new tu(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let r=e[t];if(void 0===r){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let n=this[t];if(void 0===n){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[t]=r}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let r={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let r in e){let n=e[r];delete n.metadata,t.push(n)}return t}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),void 0!==this.sheen&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(r.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(r.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(r.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(r.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(r.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(r.combine=this.combine)),void 0!==this.envMapRotation&&(r.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(r.blending=this.blending),0!==this.side&&(r.side=this.side),!0===this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=!0),204!==this.blendSrc&&(r.blendSrc=this.blendSrc),205!==this.blendDst&&(r.blendDst=this.blendDst),100!==this.blendEquation&&(r.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(r.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(r.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(r.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(r.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(r.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(r.depthFunc=this.depthFunc),!1===this.depthTest&&(r.depthTest=this.depthTest),!1===this.depthWrite&&(r.depthWrite=this.depthWrite),!1===this.colorWrite&&(r.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(r.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(r.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(r.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(r.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(r.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(r.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(r.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(r.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.alphaHash&&(r.alphaHash=!0),!0===this.alphaToCoverage&&(r.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=!0),!0===this.forceSinglePass&&(r.forceSinglePass=!0),!0===this.wireframe&&(r.wireframe=!0),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(r.flatShading=!0),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),!1===this.fog&&(r.fog=!1),Object.keys(this.userData).length>0&&(r.userData=this.userData),t){let t=n(e.textures),i=n(e.images);t.length>0&&(r.textures=t),i.length>0&&(r.images=i)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,r=null;if(null!==t){let e=t.length;r=Array(e);for(let n=0;n!==e;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class tf extends tp{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new tu(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new eH,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const tm=function(){let e=new ArrayBuffer(4),t=new Float32Array(e),r=new Uint32Array(e),n=new Uint32Array(512),i=new Uint32Array(512);for(let e=0;e<256;++e){let t=e-127;t<-27?(n[e]=0,n[256|e]=32768,i[e]=24,i[256|e]=24):t<-14?(n[e]=1024>>-t-14,n[256|e]=1024>>-t-14|32768,i[e]=-t-1,i[256|e]=-t-1):t<=15?(n[e]=t+15<<10,n[256|e]=t+15<<10|32768,i[e]=13,i[256|e]=13):t<128?(n[e]=31744,n[256|e]=64512,i[e]=24,i[256|e]=24):(n[e]=31744,n[256|e]=64512,i[e]=13,i[256|e]=13)}let a=new Uint32Array(2048),o=new Uint32Array(64),s=new Uint32Array(64);for(let e=1;e<1024;++e){let t=e<<13,r=0;for(;(8388608&t)==0;)t<<=1,r-=8388608;t&=-8388609,r+=947912704,a[e]=t|r}for(let e=1024;e<2048;++e)a[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)o[e]=e<<23;o[31]=1199570944,o[32]=2147483648;for(let e=33;e<63;++e)o[e]=2147483648+(e-32<<23);o[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(s[e]=1024);return{floatView:t,uint32View:r,baseTable:n,shiftTable:i,mantissaTable:a,exponentTable:o,offsetTable:s}}(),tg={fromHalfFloat:function(e){let t=e>>10;return tm.uint32View[0]=tm.mantissaTable[tm.offsetTable[t]+(1023&e)]+tm.exponentTable[t],tm.floatView[0]}},t_=new er,tv=new N;class ty{constructor(e,t,r=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=r,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}get updateRange(){var e;return(e="THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.")in F||(F[e]=!0,console.warn(e)),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let n=0,i=this.itemSize;n<i;n++)this.array[e+n]=t.array[r+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)tv.fromBufferAttribute(this,t),tv.applyMatrix3(e),this.setXY(t,tv.x,tv.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)t_.fromBufferAttribute(this,t),t_.applyMatrix3(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)t_.fromBufferAttribute(this,t),t_.applyMatrix4(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)t_.fromBufferAttribute(this,t),t_.applyNormalMatrix(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)t_.fromBufferAttribute(this,t),t_.transformDirection(e),this.setXYZ(t,t_.x,t_.y,t_.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let r=this.array[e*this.itemSize+t];return this.normalized&&(r=P(r,this.array)),r}setComponent(e,t,r){return this.normalized&&(r=L(r,this.array)),this.array[e*this.itemSize+t]=r,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=P(t,this.array)),t}setX(e,t){return this.normalized&&(t=L(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=P(t,this.array)),t}setY(e,t){return this.normalized&&(t=L(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=P(t,this.array)),t}setZ(e,t){return this.normalized&&(t=L(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=P(t,this.array)),t}setW(e,t){return this.normalized&&(t=L(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.normalized&&(t=L(t,this.array),r=L(r,this.array)),this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,n){return e*=this.itemSize,this.normalized&&(t=L(t,this.array),r=L(r,this.array),n=L(n,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e*=this.itemSize,this.normalized&&(t=L(t,this.array),r=L(r,this.array),n=L(n,this.array),i=L(i,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),e}}class tx extends ty{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class tE extends ty{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class tM extends ty{constructor(e,t,r){super(new Float32Array(e),t,r)}}let tS=0;const tb=new eL,tT=new e4,tw=new er,tA=new ea,tR=new ea,tC=new er;class tP extends b{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:tS++}),this.uuid=R(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(D(e)?tE:tx)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let r=this.attributes.normal;if(void 0!==r){let t=new U().getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}let n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tb.makeRotationFromQuaternion(e),this.applyMatrix4(tb),this}rotateX(e){return tb.makeRotationX(e),this.applyMatrix4(tb),this}rotateY(e){return tb.makeRotationY(e),this.applyMatrix4(tb),this}rotateZ(e){return tb.makeRotationZ(e),this.applyMatrix4(tb),this}translate(e,t,r){return tb.makeTranslation(e,t,r),this.applyMatrix4(tb),this}scale(e,t,r){return tb.makeScale(e,t,r),this.applyMatrix4(tb),this}lookAt(e){return tT.lookAt(e),tT.updateMatrix(),this.applyMatrix4(tT.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tw).negate(),this.translate(tw.x,tw.y,tw.z),this}setFromPoints(e){let t=[];for(let r=0,n=e.length;r<n;r++){let n=e[r];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new tM(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ea);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new er(-1/0,-1/0,-1/0),new er(1/0,1/0,1/0));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){let r=t[e];tA.setFromBufferAttribute(r),this.morphTargetsRelative?(tC.addVectors(this.boundingBox.min,tA.min),this.boundingBox.expandByPoint(tC),tC.addVectors(this.boundingBox.max,tA.max),this.boundingBox.expandByPoint(tC)):(this.boundingBox.expandByPoint(tA.min),this.boundingBox.expandByPoint(tA.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new eS);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new er,1/0);return}if(e){let r=this.boundingSphere.center;if(tA.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){let r=t[e];tR.setFromBufferAttribute(r),this.morphTargetsRelative?(tC.addVectors(tA.min,tR.min),tA.expandByPoint(tC),tC.addVectors(tA.max,tR.max),tA.expandByPoint(tC)):(tA.expandByPoint(tR.min),tA.expandByPoint(tR.max))}tA.getCenter(r);let n=0;for(let t=0,i=e.count;t<i;t++)tC.fromBufferAttribute(e,t),n=Math.max(n,r.distanceToSquared(tC));if(t)for(let i=0,a=t.length;i<a;i++){let a=t[i],o=this.morphTargetsRelative;for(let t=0,i=a.count;t<i;t++)tC.fromBufferAttribute(a,t),o&&(tw.fromBufferAttribute(e,t),tC.add(tw)),n=Math.max(n,r.distanceToSquared(tC))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let r=t.position,n=t.normal,i=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new ty(new Float32Array(4*r.count),4));let a=this.getAttribute("tangent"),o=[],s=[];for(let e=0;e<r.count;e++)o[e]=new er,s[e]=new er;let l=new er,h=new er,u=new er,c=new N,d=new N,p=new N,f=new er,m=new er,g=this.groups;0===g.length&&(g=[{start:0,count:e.count}]);for(let t=0,n=g.length;t<n;++t){let n=g[t],a=n.start,_=n.count;for(let t=a,n=a+_;t<n;t+=3)!function(e,t,n){l.fromBufferAttribute(r,e),h.fromBufferAttribute(r,t),u.fromBufferAttribute(r,n),c.fromBufferAttribute(i,e),d.fromBufferAttribute(i,t),p.fromBufferAttribute(i,n),h.sub(l),u.sub(l),d.sub(c),p.sub(c);let a=1/(d.x*p.y-p.x*d.y);isFinite(a)&&(f.copy(h).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(a),m.copy(u).multiplyScalar(d.x).addScaledVector(h,-p.x).multiplyScalar(a),o[e].add(f),o[t].add(f),o[n].add(f),s[e].add(m),s[t].add(m),s[n].add(m))}(e.getX(t+0),e.getX(t+1),e.getX(t+2))}let _=new er,v=new er,y=new er,x=new er;function E(e){y.fromBufferAttribute(n,e),x.copy(y);let t=o[e];_.copy(t),_.sub(y.multiplyScalar(y.dot(t))).normalize(),v.crossVectors(x,t);let r=v.dot(s[e]);a.setXYZW(e,_.x,_.y,_.z,r<0?-1:1)}for(let t=0,r=g.length;t<r;++t){let r=g[t],n=r.start,i=r.count;for(let t=n,r=n+i;t<r;t+=3)E(e.getX(t+0)),E(e.getX(t+1)),E(e.getX(t+2))}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let r=this.getAttribute("normal");if(void 0===r)r=new ty(new Float32Array(3*t.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);let n=new er,i=new er,a=new er,o=new er,s=new er,l=new er,h=new er,u=new er;if(e)for(let c=0,d=e.count;c<d;c+=3){let d=e.getX(c+0),p=e.getX(c+1),f=e.getX(c+2);n.fromBufferAttribute(t,d),i.fromBufferAttribute(t,p),a.fromBufferAttribute(t,f),h.subVectors(a,i),u.subVectors(n,i),h.cross(u),o.fromBufferAttribute(r,d),s.fromBufferAttribute(r,p),l.fromBufferAttribute(r,f),o.add(h),s.add(h),l.add(h),r.setXYZ(d,o.x,o.y,o.z),r.setXYZ(p,s.x,s.y,s.z),r.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)n.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),h.subVectors(a,i),u.subVectors(n,i),h.cross(u),r.setXYZ(e+0,h.x,h.y,h.z),r.setXYZ(e+1,h.x,h.y,h.z),r.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),r.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)tC.fromBufferAttribute(e,t),tC.normalize(),e.setXYZ(t,tC.x,tC.y,tC.z)}toNonIndexed(){function e(e,t){let r=e.array,n=e.itemSize,i=e.normalized,a=new r.constructor(t.length*n),o=0,s=0;for(let i=0,l=t.length;i<l;i++){o=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*n;for(let e=0;e<n;e++)a[s++]=r[o++]}return new ty(a,n,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new tP,r=this.index.array,n=this.attributes;for(let i in n){let a=e(n[i],r);t.setAttribute(i,a)}let i=this.morphAttributes;for(let n in i){let a=[],o=i[n];for(let t=0,n=o.length;t<n;t++){let n=e(o[t],r);a.push(n)}t.morphAttributes[n]=a}t.morphTargetsRelative=this.morphTargetsRelative;let a=this.groups;for(let e=0,r=a.length;e<r;e++){let r=a[e];t.addGroup(r.start,r.count,r.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let r=this.attributes;for(let t in r){let n=r[t];e.data.attributes[t]=n.toJSON(e.data)}let n={},i=!1;for(let t in this.morphAttributes){let r=this.morphAttributes[t],a=[];for(let t=0,n=r.length;t<n;t++){let n=r[t];a.push(n.toJSON(e.data))}a.length>0&&(n[t]=a,i=!0)}i&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let r=e.index;null!==r&&this.setIndex(r.clone(t));let n=e.attributes;for(let e in n){let r=n[e];this.setAttribute(e,r.clone(t))}let i=e.morphAttributes;for(let e in i){let r=[],n=i[e];for(let e=0,i=n.length;e<i;e++)r.push(n[e].clone(t));this.morphAttributes[e]=r}this.morphTargetsRelative=e.morphTargetsRelative;let a=e.groups;for(let e=0,t=a.length;e<t;e++){let t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}let o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());let s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const tL=new eL,tN=new class{constructor(e=new er,t=new er(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,eb)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,r)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=eb.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(eb.copy(this.origin).addScaledVector(this.direction,t),eb.distanceToSquared(e))}distanceSqToSegment(e,t,r,n){let i,a,o,s;eT.copy(e).add(t).multiplyScalar(.5),ew.copy(t).sub(e).normalize(),eA.copy(this.origin).sub(eT);let l=.5*e.distanceTo(t),h=-this.direction.dot(ew),u=eA.dot(this.direction),c=-eA.dot(ew),d=eA.lengthSq(),p=Math.abs(1-h*h);if(p>0){if(i=h*c-u,a=h*u-c,s=l*p,i>=0){if(a>=-s){if(a<=s){let e=1/p;i*=e,a*=e,o=i*(i+h*a+2*u)+a*(h*i+a+2*c)+d}else o=-(i=Math.max(0,-(h*(a=l)+u)))*i+a*(a+2*c)+d}else o=-(i=Math.max(0,-(h*(a=-l)+u)))*i+a*(a+2*c)+d}else a<=-s?(a=(i=Math.max(0,-(-h*l+u)))>0?-l:Math.min(Math.max(-l,-c),l),o=-i*i+a*(a+2*c)+d):a<=s?(i=0,o=(a=Math.min(Math.max(-l,-c),l))*(a+2*c)+d):(a=(i=Math.max(0,-(h*l+u)))>0?l:Math.min(Math.max(-l,-c),l),o=-i*i+a*(a+2*c)+d)}else a=h>0?-l:l,o=-(i=Math.max(0,-(h*a+u)))*i+a*(a+2*c)+d;return r&&r.copy(this.origin).addScaledVector(this.direction,i),n&&n.copy(eT).addScaledVector(ew,a),o}intersectSphere(e,t){eb.subVectors(e.center,this.origin);let r=eb.dot(this.direction),n=eb.dot(eb)-r*r,i=e.radius*e.radius;if(n>i)return null;let a=Math.sqrt(i-n),o=r-a,s=r+a;return s<0?null:o<0?this.at(s,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){let r=this.distanceToPlane(e);return null===r?null:this.at(r,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return!!(0===t||e.normal.dot(this.direction)*t<0)}intersectBox(e,t){let r,n,i,a,o,s;let l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(r=(e.min.x-c.x)*l,n=(e.max.x-c.x)*l):(r=(e.max.x-c.x)*l,n=(e.min.x-c.x)*l),h>=0?(i=(e.min.y-c.y)*h,a=(e.max.y-c.y)*h):(i=(e.max.y-c.y)*h,a=(e.min.y-c.y)*h),r>a||i>n)?null:((i>r||isNaN(r))&&(r=i),(a<n||isNaN(n))&&(n=a),u>=0?(o=(e.min.z-c.z)*u,s=(e.max.z-c.z)*u):(o=(e.max.z-c.z)*u,s=(e.min.z-c.z)*u),r>s||o>n)?null:((o>r||r!=r)&&(r=o),(s<n||n!=n)&&(n=s),n<0)?null:this.at(r>=0?r:n,t)}intersectsBox(e){return null!==this.intersectBox(e,eb)}intersectTriangle(e,t,r,n,i){let a;eR.subVectors(t,e),eC.subVectors(r,e),eP.crossVectors(eR,eC);let o=this.direction.dot(eP);if(o>0){if(n)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}eA.subVectors(this.origin,e);let s=a*this.direction.dot(eC.crossVectors(eA,eC));if(s<0)return null;let l=a*this.direction.dot(eR.cross(eA));if(l<0||s+l>o)return null;let h=-a*eA.dot(eP);return h<0?null:this.at(h/o,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},tU=new eS,tI=new er,tD=new er,tO=new er,tF=new er,tB=new er,tz=new er,tk=new N,tH=new N,tV=new N,tG=new er,tW=new er,tX=new er,tj=new er,tq=new er;class tY extends e4{constructor(e=new tP,t=new tf){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let r=e[t[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){let t=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){let r=this.geometry,n=r.attributes.position,i=r.morphAttributes.position,a=r.morphTargetsRelative;t.fromBufferAttribute(n,e);let o=this.morphTargetInfluences;if(i&&o){tz.set(0,0,0);for(let r=0,n=i.length;r<n;r++){let n=o[r],s=i[r];0!==n&&(tB.fromBufferAttribute(s,e),a?tz.addScaledVector(tB,n):tz.addScaledVector(tB.sub(t),n))}t.add(tz)}return t}raycast(e,t){let r=this.geometry,n=this.material,i=this.matrixWorld;if(void 0!==n){if(null===r.boundingSphere&&r.computeBoundingSphere(),tU.copy(r.boundingSphere),tU.applyMatrix4(i),tN.copy(e.ray).recast(e.near),!1===tU.containsPoint(tN.origin)&&(null===tN.intersectSphere(tU,tI)||tN.origin.distanceToSquared(tI)>(e.far-e.near)**2)||(tL.copy(i).invert(),tN.copy(e.ray).applyMatrix4(tL),null!==r.boundingBox&&!1===tN.intersectsBox(r.boundingBox)))return;this._computeIntersections(e,t,tN)}}_computeIntersections(e,t,r){let n;let i=this.geometry,a=this.material,o=i.index,s=i.attributes.position,l=i.attributes.uv,h=i.attributes.uv1,u=i.attributes.normal,c=i.groups,d=i.drawRange;if(null!==o){if(Array.isArray(a))for(let i=0,s=c.length;i<s;i++){let s=c[i],p=a[s.materialIndex],f=Math.max(s.start,d.start),m=Math.min(o.count,Math.min(s.start+s.count,d.start+d.count));for(let i=f;i<m;i+=3)(n=tJ(this,p,e,r,l,h,u,o.getX(i),o.getX(i+1),o.getX(i+2)))&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=s.materialIndex,t.push(n))}else{let i=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);for(let c=i;c<s;c+=3)(n=tJ(this,a,e,r,l,h,u,o.getX(c),o.getX(c+1),o.getX(c+2)))&&(n.faceIndex=Math.floor(c/3),t.push(n))}}else if(void 0!==s){if(Array.isArray(a))for(let i=0,o=c.length;i<o;i++){let o=c[i],p=a[o.materialIndex],f=Math.max(o.start,d.start),m=Math.min(s.count,Math.min(o.start+o.count,d.start+d.count));for(let i=f;i<m;i+=3)(n=tJ(this,p,e,r,l,h,u,i,i+1,i+2))&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=o.materialIndex,t.push(n))}else{let i=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);for(let s=i;s<o;s+=3)(n=tJ(this,a,e,r,l,h,u,s,s+1,s+2))&&(n.faceIndex=Math.floor(s/3),t.push(n))}}}}function tJ(e,t,r,n,i,a,o,s,l,h){e.getVertexPosition(s,tD),e.getVertexPosition(l,tO),e.getVertexPosition(h,tF);let u=function(e,t,r,n,i,a,o,s){if(null===(1===t.side?n.intersectTriangle(o,a,i,!0,s):n.intersectTriangle(i,a,o,0===t.side,s)))return null;tq.copy(s),tq.applyMatrix4(e.matrixWorld);let l=r.ray.origin.distanceTo(tq);return l<r.near||l>r.far?null:{distance:l,point:tq.clone(),object:e}}(e,t,r,n,tD,tO,tF,tj);if(u){i&&(tk.fromBufferAttribute(i,s),tH.fromBufferAttribute(i,l),tV.fromBufferAttribute(i,h),u.uv=ta.getInterpolation(tj,tD,tO,tF,tk,tH,tV,new N)),a&&(tk.fromBufferAttribute(a,s),tH.fromBufferAttribute(a,l),tV.fromBufferAttribute(a,h),u.uv1=ta.getInterpolation(tj,tD,tO,tF,tk,tH,tV,new N)),o&&(tG.fromBufferAttribute(o,s),tW.fromBufferAttribute(o,l),tX.fromBufferAttribute(o,h),u.normal=ta.getInterpolation(tj,tD,tO,tF,tG,tW,tX,new er),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));let e={a:s,b:l,c:h,normal:new er,materialIndex:0};ta.getNormal(tD,tO,tF,e.normal),u.face=e}return u}class t$ extends tP{constructor(e=1,t=1,r=1,n=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};let o=this;n=Math.floor(n),i=Math.floor(i);let s=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,r,n,i,a,p,f,m,g,_){let v=a/m,y=p/g,x=a/2,E=p/2,M=f/2,S=m+1,b=g+1,T=0,w=0,A=new er;for(let a=0;a<b;a++){let o=a*y-E;for(let s=0;s<S;s++){let c=s*v-x;A[e]=c*n,A[t]=o*i,A[r]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[r]=f>0?1:-1,h.push(A.x,A.y,A.z),u.push(s/m),u.push(1-a/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){let r=c+t+S*e,n=c+t+S*(e+1),i=c+(t+1)+S*(e+1),a=c+(t+1)+S*e;s.push(r,n,a),s.push(n,i,a),w+=6}o.addGroup(d,w,_),d+=w,c+=T}p("z","y","x",-1,-1,r,t,e,a=Math.floor(a),i,0),p("z","y","x",1,-1,r,t,-e,a,i,1),p("x","z","y",1,1,e,r,t,n,a,2),p("x","z","y",1,-1,e,r,-t,n,a,3),p("x","y","z",1,-1,e,t,r,n,i,4),p("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(s),this.setAttribute("position",new tM(l,3)),this.setAttribute("normal",new tM(h,3)),this.setAttribute("uv",new tM(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new t$(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function tZ(e){let t={};for(let r in e)for(let n in t[r]={},e[r]){let i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[r][n]=null):t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}return t}function tK(e){let t={};for(let r=0;r<e.length;r++){let n=tZ(e[r]);for(let e in n)t[e]=n[e]}return t}function tQ(e){let t=e.getRenderTarget();return null===t?e.outputColorSpace:!0===t.isXRRenderTarget?t.texture.colorSpace:V.workingColorSpace}const t0={clone:tZ};class t1 extends tp{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tZ(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let r=0;r<e.length;r++)t.push(e[r].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let r in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[r].value;n&&n.isTexture?t.uniforms[r]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[r]={type:"m4",value:n.toArray()}:t.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let r={};for(let e in this.extensions)!0===this.extensions[e]&&(r[e]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}class t2 extends e4{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new eL,this.projectionMatrix=new eL,this.projectionMatrixInverse=new eL,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const t3=new er,t4=new N,t5=new N;class t6 extends t2{constructor(e=50,t=1,r=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*A*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*w*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*A*Math.atan(Math.tan(.5*w*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,r){t3.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(t3.x,t3.y).multiplyScalar(-e/t3.z),t3.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),r.set(t3.x,t3.y).multiplyScalar(-e/t3.z)}getViewSize(e,t){return this.getViewBounds(e,t4,t5),t.subVectors(t5,t4)}setViewOffset(e,t,r,n,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*w*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){let e=a.fullWidth,o=a.fullHeight;i+=a.offsetX*n/e,t-=a.offsetY*r/o,n*=a.width/e,r*=a.height/o}let o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class t8 extends e4{constructor(e,t,r){super(),this.type="CubeCamera",this.renderTarget=r,this.coordinateSystem=null,this.activeMipmapLevel=0;let n=new t6(-90,1,e,t);n.layers=this.layers,this.add(n);let i=new t6(-90,1,e,t);i.layers=this.layers,this.add(i);let a=new t6(-90,1,e,t);a.layers=this.layers,this.add(a);let o=new t6(-90,1,e,t);o.layers=this.layers,this.add(o);let s=new t6(-90,1,e,t);s.layers=this.layers,this.add(s);let l=new t6(-90,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[r,n,i,a,o,s]=t;for(let e of t)this.remove(e);if(2e3===e)r.up.set(0,1,0),r.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),s.up.set(0,1,0),s.lookAt(0,0,-1);else if(2001===e)r.up.set(0,-1,0),r.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),s.up.set(0,-1,0),s.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let{renderTarget:r,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[i,a,o,s,l,h]=this.children,u=e.getRenderTarget(),c=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;let f=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0,n),e.render(t,i),e.setRenderTarget(r,1,n),e.render(t,a),e.setRenderTarget(r,2,n),e.render(t,o),e.setRenderTarget(r,3,n),e.render(t,s),e.setRenderTarget(r,4,n),e.render(t,l),r.texture.generateMipmaps=f,e.setRenderTarget(r,5,n),e.render(t,h),e.setRenderTarget(u,c,d),e.xr.enabled=p,r.texture.needsPMREMUpdate=!0}}class t7 extends ${constructor(e,t,r,n,i,a,o,s,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,r,n,i,a,o,s,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class t9 extends Q{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let r={width:e,height:e,depth:1};this.texture=new t7([r,r,r,r,r,r],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new t$(5,5,5),i=new t1({name:"CubemapFromEquirect",uniforms:tZ(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:1,blending:0});i.uniforms.tEquirect.value=t;let a=new tY(n,i),o=t.minFilter;return 1008===t.minFilter&&(t.minFilter=1006),new t8(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,n){let i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,r,n);e.setRenderTarget(i)}}const re=new er,rt=new er,rr=new U;class rn{constructor(e=new er(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){let n=re.subVectors(r,t).cross(rt.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let r=e.delta(re),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let i=-(e.start.dot(this.normal)+this.constant)/n;return i<0||i>1?null:t.copy(e.start).addScaledVector(r,i)}intersectsLine(e){let t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let r=t||rr.getNormalMatrix(e),n=this.coplanarPoint(re).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ri=new eS,ra=new er;class ro{constructor(e=new rn,t=new rn,r=new rn,n=new rn,i=new rn,a=new rn){this.planes=[e,t,r,n,i,a]}set(e,t,r,n,i,a){let o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(n),o[4].copy(i),o[5].copy(a),this}copy(e){let t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e,t=2e3){let r=this.planes,n=e.elements,i=n[0],a=n[1],o=n[2],s=n[3],l=n[4],h=n[5],u=n[6],c=n[7],d=n[8],p=n[9],f=n[10],m=n[11],g=n[12],_=n[13],v=n[14],y=n[15];if(r[0].setComponents(s-i,c-l,m-d,y-g).normalize(),r[1].setComponents(s+i,c+l,m+d,y+g).normalize(),r[2].setComponents(s+a,c+h,m+p,y+_).normalize(),r[3].setComponents(s-a,c-h,m-p,y-_).normalize(),r[4].setComponents(s-o,c-u,m-f,y-v).normalize(),2e3===t)r[5].setComponents(s+o,c+u,m+f,y+v).normalize();else if(2001===t)r[5].setComponents(o,u,f,v).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),ri.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),ri.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ri)}intersectsSprite(e){return ri.center.set(0,0,0),ri.radius=.7071067811865476,ri.applyMatrix4(e.matrixWorld),this.intersectsSphere(ri)}intersectsSphere(e){let t=this.planes,r=e.center,n=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(r)<n)return!1;return!0}intersectsBox(e){let t=this.planes;for(let r=0;r<6;r++){let n=t[r];if(ra.x=n.normal.x>0?e.max.x:e.min.x,ra.y=n.normal.y>0?e.max.y:e.min.y,ra.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(ra))return!1}return!0}containsPoint(e){let t=this.planes;for(let r=0;r<6;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function rs(){let e=null,t=!1,r=null,n=null;function i(t,a){r(t,a),n=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==r&&(n=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function rl(e){let t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(r){r.isInterleavedBufferAttribute&&(r=r.data);let n=t.get(r);n&&(e.deleteBuffer(n.buffer),t.delete(r))},update:function(r,n){if(r.isGLBufferAttribute){let e=t.get(r);(!e||e.version<r.version)&&t.set(r,{buffer:r.buffer,type:r.type,bytesPerElement:r.elementSize,version:r.version});return}r.isInterleavedBufferAttribute&&(r=r.data);let i=t.get(r);if(void 0===i)t.set(r,function(t,r){let n;let i=t.array,a=t.usage,o=i.byteLength,s=e.createBuffer();if(e.bindBuffer(r,s),e.bufferData(r,i,a),t.onUploadCallback(),i instanceof Float32Array)n=e.FLOAT;else if(i instanceof Uint16Array)n=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(i instanceof Int16Array)n=e.SHORT;else if(i instanceof Uint32Array)n=e.UNSIGNED_INT;else if(i instanceof Int32Array)n=e.INT;else if(i instanceof Int8Array)n=e.BYTE;else if(i instanceof Uint8Array)n=e.UNSIGNED_BYTE;else if(i instanceof Uint8ClampedArray)n=e.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);return{buffer:s,type:n,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version,size:o}}(r,n));else if(i.version<r.version){if(i.size!==r.array.byteLength)throw Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,r,n){let i=r.array,a=r._updateRange,o=r.updateRanges;if(e.bindBuffer(n,t),-1===a.count&&0===o.length&&e.bufferSubData(n,0,i),0!==o.length){for(let t=0,r=o.length;t<r;t++){let r=o[t];e.bufferSubData(n,r.start*i.BYTES_PER_ELEMENT,i,r.start,r.count)}r.clearUpdateRanges()}-1!==a.count&&(e.bufferSubData(n,a.offset*i.BYTES_PER_ELEMENT,i,a.offset,a.count),a.count=-1),r.onUploadCallback()}(i.buffer,r,n),i.version=r.version}}}}class rh extends tP{constructor(e=1,t=1,r=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};let i=e/2,a=t/2,o=Math.floor(r),s=Math.floor(n),l=o+1,h=s+1,u=e/o,c=t/s,d=[],p=[],f=[],m=[];for(let e=0;e<h;e++){let t=e*c-a;for(let r=0;r<l;r++){let n=r*u-i;p.push(n,-t,0),f.push(0,0,1),m.push(r/o),m.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){let r=t+l*e,n=t+l*(e+1),i=t+1+l*(e+1),a=t+1+l*e;d.push(r,n,a),d.push(n,i,a)}this.setIndex(d),this.setAttribute("position",new tM(p,3)),this.setAttribute("normal",new tM(f,3)),this.setAttribute("uv",new tM(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rh(e.width,e.height,e.widthSegments,e.heightSegments)}}const ru={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	#ifdef ALPHA_TO_COVERAGE\n	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n	if ( diffuseColor.a == 0.0 ) discard;\n	#else\n	if ( diffuseColor.a < alphaTest ) discard;\n	#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n	attribute float batchId;\n	uniform highp sampler2D batchingTexture;\n	mat4 getBatchingMatrix( const in float i ) {\n		int size = textureSize( batchingTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n	mat4 batchingMatrix = getBatchingMatrix( batchId );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#ifdef ALPHA_TO_COVERAGE\n		float distanceToPlane, distanceGradient;\n		float clipOpacity = 1.0;\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n			distanceGradient = fwidth( distanceToPlane ) / 2.0;\n			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			if ( clipOpacity == 0.0 ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			float unionClipOpacity = 1.0;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n				distanceGradient = fwidth( distanceToPlane ) / 2.0;\n				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			}\n			#pragma unroll_loop_end\n			clipOpacity *= 1.0 - unionClipOpacity;\n		#endif\n		diffuseColor.a *= clipOpacity;\n		if ( diffuseColor.a == 0.0 ) discard;\n	#else\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			bool clipped = true;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n			}\n			#pragma unroll_loop_end\n			if ( clipped ) discard;\n		#endif\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n	vec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n	mat3 bm = mat3( batchingMatrix );\n	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n	transformedNormal = bm * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = bm * transformedTangent;\n	#endif\n#endif\n#ifdef USE_INSTANCING\n	mat3 im = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n	transformedNormal = im * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = im * transformedTangent;\n	#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n	vec3( 0.8224621, 0.177538, 0.0 ),\n	vec3( 0.0331941, 0.9668058, 0.0 ),\n	vec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n	vec3( 1.2249401, - 0.2249404, 0.0 ),\n	vec3( - 0.0420569, 1.0420571, 0.0 ),\n	vec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform mat3 envMapRotation;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	if( material.anisotropy == 0.0 ) {\n		anisotropyV = vec2( 1.0, 0.0 );\n	} else {\n		anisotropyV /= material.anisotropy;\n		material.anisotropy = saturate( material.anisotropy );\n	}\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	vFragDepth = 1.0 + gl_Position.w;\n	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n	float morphTargetInfluences[MORPHTARGETS_COUNT];\n	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n	}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	#ifndef USE_INSTANCING_MORPH\n		uniform float morphTargetBaseInfluence;\n	#endif\n	#ifdef MORPHTARGETS_TEXTURE\n		#ifndef USE_INSTANCING_MORPH\n			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		#endif\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n	mvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		float shadow = 1.0;\n		vec3 lightToPosition = shadowCoord.xyz;\n		\n		float lightToPositionLength = length( lightToPosition );\n		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;\n			vec3 bd3D = normalize( lightToPosition );\n			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n				shadow = (\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n				) * ( 1.0 / 9.0 );\n			#else\n				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n			#endif\n		}\n		return shadow;\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	mat4 getBoneMatrix( const in float i ) {\n		int size = textureSize( boneTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n	vec3( 1.6605, - 0.1246, - 0.0182 ),\n	vec3( - 0.5876, 1.1329, - 0.1006 ),\n	vec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n	vec3( 0.6274, 0.0691, 0.0164 ),\n	vec3( 0.3293, 0.9195, 0.0880 ),\n	vec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n	vec3 x2 = x * x;\n	vec3 x4 = x2 * x2;\n	return + 15.5 * x4 * x2\n		- 40.14 * x4 * x\n		+ 31.96 * x4\n		- 6.868 * x2 * x\n		+ 0.4298 * x2\n		+ 0.1191 * x\n		- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n	const mat3 AgXInsetMatrix = mat3(\n		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n	);\n	const mat3 AgXOutsetMatrix = mat3(\n		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n	);\n	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;\n	color *= toneMappingExposure;\n	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n	color = AgXInsetMatrix * color;\n	color = max( color, 1e-10 );	color = log2( color );\n	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n	color = clamp( color, 0.0, 1.0 );\n	color = agxDefaultContrastApprox( color );\n	color = AgXOutsetMatrix * color;\n	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n	color = clamp( color, 0.0, 1.0 );\n	return color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n	float startCompression = 0.8 - 0.04;\n	float desaturation = 0.15;\n	color *= toneMappingExposure;\n	float x = min(color.r, min(color.g, color.b));\n	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n	color -= offset;\n	float peak = max(color.r, max(color.g, color.b));\n	if (peak < startCompression) return color;\n	float d = 1. - startCompression;\n	float newPeak = 1. - d * d / (peak + d - startCompression);\n	color *= newPeak / peak;\n	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);\n	return mix(color, newPeak * vec3(1, 1, 1), g);\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_BATCHING\n		worldPosition = batchingMatrix * worldPosition;\n	#endif\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},rc={common:{diffuse:{value:new tu(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new U},alphaMap:{value:null},alphaMapTransform:{value:new U},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new U}},envmap:{envMap:{value:null},envMapRotation:{value:new U},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new U}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new U}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new U},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new U},normalScale:{value:new N(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new U},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new U}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new U}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new U}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tu(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tu(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new U},alphaTest:{value:0},uvTransform:{value:new U}},sprite:{diffuse:{value:new tu(16777215)},opacity:{value:1},center:{value:new N(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new U},alphaMap:{value:null},alphaMapTransform:{value:new U},alphaTest:{value:0}}},rd={basic:{uniforms:tK([rc.common,rc.specularmap,rc.envmap,rc.aomap,rc.lightmap,rc.fog]),vertexShader:ru.meshbasic_vert,fragmentShader:ru.meshbasic_frag},lambert:{uniforms:tK([rc.common,rc.specularmap,rc.envmap,rc.aomap,rc.lightmap,rc.emissivemap,rc.bumpmap,rc.normalmap,rc.displacementmap,rc.fog,rc.lights,{emissive:{value:new tu(0)}}]),vertexShader:ru.meshlambert_vert,fragmentShader:ru.meshlambert_frag},phong:{uniforms:tK([rc.common,rc.specularmap,rc.envmap,rc.aomap,rc.lightmap,rc.emissivemap,rc.bumpmap,rc.normalmap,rc.displacementmap,rc.fog,rc.lights,{emissive:{value:new tu(0)},specular:{value:new tu(1118481)},shininess:{value:30}}]),vertexShader:ru.meshphong_vert,fragmentShader:ru.meshphong_frag},standard:{uniforms:tK([rc.common,rc.envmap,rc.aomap,rc.lightmap,rc.emissivemap,rc.bumpmap,rc.normalmap,rc.displacementmap,rc.roughnessmap,rc.metalnessmap,rc.fog,rc.lights,{emissive:{value:new tu(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ru.meshphysical_vert,fragmentShader:ru.meshphysical_frag},toon:{uniforms:tK([rc.common,rc.aomap,rc.lightmap,rc.emissivemap,rc.bumpmap,rc.normalmap,rc.displacementmap,rc.gradientmap,rc.fog,rc.lights,{emissive:{value:new tu(0)}}]),vertexShader:ru.meshtoon_vert,fragmentShader:ru.meshtoon_frag},matcap:{uniforms:tK([rc.common,rc.bumpmap,rc.normalmap,rc.displacementmap,rc.fog,{matcap:{value:null}}]),vertexShader:ru.meshmatcap_vert,fragmentShader:ru.meshmatcap_frag},points:{uniforms:tK([rc.points,rc.fog]),vertexShader:ru.points_vert,fragmentShader:ru.points_frag},dashed:{uniforms:tK([rc.common,rc.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ru.linedashed_vert,fragmentShader:ru.linedashed_frag},depth:{uniforms:tK([rc.common,rc.displacementmap]),vertexShader:ru.depth_vert,fragmentShader:ru.depth_frag},normal:{uniforms:tK([rc.common,rc.bumpmap,rc.normalmap,rc.displacementmap,{opacity:{value:1}}]),vertexShader:ru.meshnormal_vert,fragmentShader:ru.meshnormal_frag},sprite:{uniforms:tK([rc.sprite,rc.fog]),vertexShader:ru.sprite_vert,fragmentShader:ru.sprite_frag},background:{uniforms:{uvTransform:{value:new U},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ru.background_vert,fragmentShader:ru.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new U}},vertexShader:ru.backgroundCube_vert,fragmentShader:ru.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ru.cube_vert,fragmentShader:ru.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ru.equirect_vert,fragmentShader:ru.equirect_frag},distanceRGBA:{uniforms:tK([rc.common,rc.displacementmap,{referencePosition:{value:new er},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ru.distanceRGBA_vert,fragmentShader:ru.distanceRGBA_frag},shadow:{uniforms:tK([rc.lights,rc.fog,{color:{value:new tu(0)},opacity:{value:1}}]),vertexShader:ru.shadow_vert,fragmentShader:ru.shadow_frag}};rd.physical={uniforms:tK([rd.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new U},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new U},clearcoatNormalScale:{value:new N(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new U},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new U},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new U},sheen:{value:0},sheenColor:{value:new tu(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new U},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new U},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new U},transmissionSamplerSize:{value:new N},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new U},attenuationDistance:{value:0},attenuationColor:{value:new tu(0)},specularColor:{value:new tu(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new U},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new U},anisotropyVector:{value:new N},anisotropyMap:{value:null},anisotropyMapTransform:{value:new U}}]),vertexShader:ru.meshphysical_vert,fragmentShader:ru.meshphysical_frag};const rp={r:0,b:0,g:0},rf=new eH,rm=new eL;function rg(e,t,r,n,i,a,o){let s,l;let h=new tu(0),u=!0===a?0:1,c=null,d=0,p=null;function f(t,r){t.getRGB(rp,tQ(e)),n.buffers.color.setClear(rp.r,rp.g,rp.b,r,o)}return{getClearColor:function(){return h},setClearColor:function(e,t=1){h.set(e),f(h,u=t)},getClearAlpha:function(){return u},setClearAlpha:function(e){f(h,u=e)},render:function(a,m){let g=!1,_=!0===m.isScene?m.background:null;_&&_.isTexture&&(_=(m.backgroundBlurriness>0?r:t).get(_)),null===_?f(h,u):_&&_.isColor&&(f(_,1),g=!0);let v=e.xr.getEnvironmentBlendMode();"additive"===v?n.buffers.color.setClear(0,0,0,1,o):"alpha-blend"===v&&n.buffers.color.setClear(0,0,0,0,o),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),_&&(_.isCubeTexture||306===_.mapping)?(void 0===l&&((l=new tY(new t$(1,1,1),new t1({name:"BackgroundCubeMaterial",uniforms:tZ(rd.backgroundCube.uniforms),vertexShader:rd.backgroundCube.vertexShader,fragmentShader:rd.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),rf.copy(m.backgroundRotation),rf.x*=-1,rf.y*=-1,rf.z*=-1,_.isCubeTexture&&!1===_.isRenderTargetTexture&&(rf.y*=-1,rf.z*=-1),l.material.uniforms.envMap.value=_,l.material.uniforms.flipEnvMap.value=_.isCubeTexture&&!1===_.isRenderTargetTexture?-1:1,l.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,l.material.uniforms.backgroundRotation.value.setFromMatrix4(rm.makeRotationFromEuler(rf)),l.material.toneMapped=V.getTransfer(_.colorSpace)!==E,(c!==_||d!==_.version||p!==e.toneMapping)&&(l.material.needsUpdate=!0,c=_,d=_.version,p=e.toneMapping),l.layers.enableAll(),a.unshift(l,l.geometry,l.material,0,0,null)):_&&_.isTexture&&(void 0===s&&((s=new tY(new rh(2,2),new t1({name:"BackgroundMaterial",uniforms:tZ(rd.background.uniforms),vertexShader:rd.background.vertexShader,fragmentShader:rd.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=_,s.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,s.material.toneMapped=V.getTransfer(_.colorSpace)!==E,!0===_.matrixAutoUpdate&&_.updateMatrix(),s.material.uniforms.uvTransform.value.copy(_.matrix),(c!==_||d!==_.version||p!==e.toneMapping)&&(s.material.needsUpdate=!0,c=_,d=_.version,p=e.toneMapping),s.layers.enableAll(),a.unshift(s,s.geometry,s.material,0,0,null))}}}function r_(e,t){let r=e.getParameter(e.MAX_VERTEX_ATTRIBS),n={},i=h(null),a=i,o=!1;function s(t){return e.bindVertexArray(t)}function l(t){return e.deleteVertexArray(t)}function h(e){let t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function u(){let e=a.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function c(e){d(e,0)}function d(t,r){let n=a.newAttributes,i=a.enabledAttributes,o=a.attributeDivisors;n[t]=1,0===i[t]&&(e.enableVertexAttribArray(t),i[t]=1),o[t]!==r&&(e.vertexAttribDivisor(t,r),o[t]=r)}function p(){let t=a.newAttributes,r=a.enabledAttributes;for(let n=0,i=r.length;n<i;n++)r[n]!==t[n]&&(e.disableVertexAttribArray(n),r[n]=0)}function f(t,r,n,i,a,o,s){!0===s?e.vertexAttribIPointer(t,r,n,a,o):e.vertexAttribPointer(t,r,n,i,a,o)}function m(){g(),o=!0,a!==i&&s((a=i).object)}function g(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(r,i,l,m,g){let _=!1,v=function(t,r,i){let a=!0===i.wireframe,o=n[t.id];void 0===o&&(o={},n[t.id]=o);let s=o[r.id];void 0===s&&(s={},o[r.id]=s);let l=s[a];return void 0===l&&(l=h(e.createVertexArray()),s[a]=l),l}(m,l,i);a!==v&&s((a=v).object),(_=function(e,t,r,n){let i=a.attributes,o=t.attributes,s=0,l=r.getAttributes();for(let t in l)if(l[t].location>=0){let r=i[t],n=o[t];if(void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor)),void 0===r||r.attribute!==n||n&&r.data!==n.data)return!0;s++}return a.attributesNum!==s||a.index!==n}(r,m,l,g))&&function(e,t,r,n){let i={},o=t.attributes,s=0,l=r.getAttributes();for(let t in l)if(l[t].location>=0){let r=o[t];void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor));let n={};n.attribute=r,r&&r.data&&(n.data=r.data),i[t]=n,s++}a.attributes=i,a.attributesNum=s,a.index=n}(r,m,l,g),null!==g&&t.update(g,e.ELEMENT_ARRAY_BUFFER),(_||o)&&(o=!1,function(r,n,i,a){u();let o=a.attributes,s=i.getAttributes(),l=n.defaultAttributeValues;for(let n in s){let i=s[n];if(i.location>=0){let s=o[n];if(void 0===s&&("instanceMatrix"===n&&r.instanceMatrix&&(s=r.instanceMatrix),"instanceColor"===n&&r.instanceColor&&(s=r.instanceColor)),void 0!==s){let n=s.normalized,o=s.itemSize,l=t.get(s);if(void 0===l)continue;let h=l.buffer,u=l.type,p=l.bytesPerElement,m=u===e.INT||u===e.UNSIGNED_INT||1013===s.gpuType;if(s.isInterleavedBufferAttribute){let t=s.data,l=t.stride,g=s.offset;if(t.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++)d(i.location+e,t.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<i.locationSize;e++)c(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<i.locationSize;e++)f(i.location+e,o/i.locationSize,u,n,l*p,(g+o/i.locationSize*e)*p,m)}else{if(s.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++)d(i.location+e,s.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let e=0;e<i.locationSize;e++)c(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<i.locationSize;e++)f(i.location+e,o/i.locationSize,u,n,o*p,o/i.locationSize*e*p,m)}}else if(void 0!==l){let t=l[n];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(i.location,t);break;case 3:e.vertexAttrib3fv(i.location,t);break;case 4:e.vertexAttrib4fv(i.location,t);break;default:e.vertexAttrib1fv(i.location,t)}}}}p()}(r,i,l,m),null!==g&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(g).buffer))},reset:m,resetDefaultState:g,dispose:function(){for(let e in m(),n){let t=n[e];for(let e in t){let r=t[e];for(let e in r)l(r[e].object),delete r[e];delete t[e]}delete n[e]}},releaseStatesOfGeometry:function(e){if(void 0===n[e.id])return;let t=n[e.id];for(let e in t){let r=t[e];for(let e in r)l(r[e].object),delete r[e];delete t[e]}delete n[e.id]},releaseStatesOfProgram:function(e){for(let t in n){let r=n[t];if(void 0===r[e.id])continue;let i=r[e.id];for(let e in i)l(i[e].object),delete i[e];delete r[e.id]}},initAttributes:u,enableAttribute:c,disableUnusedAttributes:p}}function rv(e,t,r){let n;this.setMode=function(e){n=e},this.render=function(t,i){e.drawArrays(n,t,i),r.update(i,n,1)},this.renderInstances=function(t,i,a){0!==a&&(e.drawArraysInstanced(n,t,i,a),r.update(i,n,a))},this.renderMultiDraw=function(e,i,a){if(0===a)return;let o=t.get("WEBGL_multi_draw");if(null===o)for(let t=0;t<a;t++)this.render(e[t],i[t]);else{o.multiDrawArraysWEBGL(n,e,0,i,0,a);let t=0;for(let e=0;e<a;e++)t+=i[e];r.update(t,n,1)}}}function ry(e,t,r){let n;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a=void 0!==r.precision?r.precision:"highp",o=i(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);let s=!0===r.logarithmicDepthBuffer,l=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_TEXTURE_SIZE),c=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),d=e.getParameter(e.MAX_VERTEX_ATTRIBS),p=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){let r=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:i,precision:a,logarithmicDepthBuffer:s,maxTextures:l,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:c,maxAttributes:d,maxVertexUniforms:p,maxVaryings:e.getParameter(e.MAX_VARYING_VECTORS),maxFragmentUniforms:e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:h>0,maxSamples:e.getParameter(e.MAX_SAMPLES)}}function rx(e){let t=this,r=null,n=0,i=!1,a=!1,o=new rn,s=new U,l={value:null,needsUpdate:!1};function h(e,r,n,i){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==i||null===h){let t=n+4*a,i=r.matrixWorldInverse;s.getNormalMatrix(i),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,r=n;t!==a;++t,r+=4)o.copy(e[t]).applyMatrix4(i,s),o.normal.toArray(h,r),h[r+3]=o.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){let r=0!==e.length||t||0!==n||i;return i=t,n=e.length,r},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){r=h(e,t,0)},this.setState=function(o,s,u){let c=o.clippingPlanes,d=o.clipIntersection,p=o.clipShadows,f=e.get(o);if(i&&null!==c&&0!==c.length&&(!a||p)){let e=a?0:n,t=4*e,i=f.clippingState||null;l.value=i,i=h(c,s,t,u);for(let e=0;e!==t;++e)i[e]=r[e];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}else a?h(null):(l.value!==r&&(l.value=r,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0)}}function rE(e){let t=new WeakMap;function r(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function n(e){let r=e.target;r.removeEventListener("dispose",n);let i=t.get(r);void 0!==i&&(t.delete(r),i.dispose())}return{get:function(i){if(i&&i.isTexture){let a=i.mapping;if(303===a||304===a){if(t.has(i))return r(t.get(i).texture,i.mapping);{let a=i.image;if(!a||!(a.height>0))return null;{let o=new t9(a.height);return o.fromEquirectangularTexture(e,i),t.set(i,o),i.addEventListener("dispose",n),r(o.texture,i.mapping)}}}}return i},dispose:function(){t=new WeakMap}}}class rM extends t2{constructor(e=-1,t=1,r=1,n=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2,i=r-e,a=r+e,o=n+t,s=n-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,a=i+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const rS=[.125,.215,.35,.446,.526,.582],rb=new rM,rT=new tu;let rw=null,rA=0,rR=0,rC=!1;const rP=(1+Math.sqrt(5))/2,rL=1/rP,rN=[new er(1,1,1),new er(-1,1,1),new er(1,1,-1),new er(-1,1,-1),new er(0,rP,rL),new er(0,rP,-rL),new er(rL,0,rP),new er(-rL,0,rP),new er(rP,rL,0),new er(-rP,rL,0)];class rU{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,n=100){rw=this._renderer.getRenderTarget(),rA=this._renderer.getActiveCubeFace(),rR=this._renderer.getActiveMipmapLevel(),rC=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);let i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,r,n,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=rF(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=rO(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rw,rA,rR),this._renderer.xr.enabled=rC,e.scissorTest=!1,rD(e,0,0,e.width,e.height)}_fromTexture(e,t){301===e.mapping||302===e.mapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rw=this._renderer.getRenderTarget(),rA=this._renderer.getActiveCubeFace(),rR=this._renderer.getActiveMipmapLevel(),rC=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;let r=t||this._allocateTargets();return this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:_,depthBuffer:!1},n=rI(e,t,r);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=rI(e,t,r);let{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],r=[],n=[],i=e,a=e-4+1+rS.length;for(let o=0;o<a;o++){let a=Math.pow(2,i);r.push(a);let s=1/a;o>e-4?s=rS[o-e+4-1]:0===o&&(s=0),n.push(s);let l=1/(a-2),h=-l,u=1+l,c=[h,h,u,h,u,u,h,h,u,u,h,u],d=new Float32Array(108),p=new Float32Array(72),f=new Float32Array(36);for(let e=0;e<6;e++){let t=e%3*2/3-1,r=e>2?0:-1,n=[t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0];d.set(n,18*e),p.set(c,12*e);let i=[e,e,e,e,e,e];f.set(i,6*e)}let m=new tP;m.setAttribute("position",new ty(d,3)),m.setAttribute("uv",new ty(p,2)),m.setAttribute("faceIndex",new ty(f,1)),t.push(m),i>4&&i--}return{lodPlanes:t,sizeLods:r,sigmas:n}}(n)),this._blurMaterial=new t1({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new er(0,1,0)}},vertexShader:rB(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}return n}_compileMaterial(e){let t=new tY(this._lodPlanes[0],e);this._renderer.compile(t,rb)}_sceneToCubeUV(e,t,r,n){let i=new t6(90,1,t,r),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,h=s.toneMapping;s.getClearColor(rT),s.toneMapping=0,s.autoClear=!1;let u=new tf({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),c=new tY(new t$,u),d=!1,p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,d=!0):(u.color.copy(rT),d=!0);for(let t=0;t<6;t++){let r=t%3;0===r?(i.up.set(0,a[t],0),i.lookAt(o[t],0,0)):1===r?(i.up.set(0,0,a[t]),i.lookAt(0,o[t],0)):(i.up.set(0,a[t],0),i.lookAt(0,0,o[t]));let l=this._cubeSize;rD(n,r*l,t>2?l:0,l,l),s.setRenderTarget(n),d&&s.render(c,i),s.render(e,i)}c.geometry.dispose(),c.material.dispose(),s.toneMapping=h,s.autoClear=l,e.background=p}_textureToCubeUV(e,t){let r=this._renderer,n=301===e.mapping||302===e.mapping;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=rF()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=rO());let i=n?this._cubemapMaterial:this._equirectMaterial,a=new tY(this._lodPlanes[0],i);i.uniforms.envMap.value=e;let o=this._cubeSize;rD(t,0,0,3*o,2*o),r.setRenderTarget(t),r.render(a,rb)}_applyPMREM(e){let t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){let r=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),n=rN[(t-1)%rN.length];this._blur(e,t-1,t,r,n)}t.autoClear=r}_blur(e,t,r,n,i){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,n,"latitudinal",i),this._halfBlur(a,e,r,r,n,"longitudinal",i)}_halfBlur(e,t,r,n,i,a,o){let s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new tY(this._lodPlanes[n],l),u=l.uniforms,c=this._sizeLods[r]-1,d=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let e=0;e<20;++e){let t=e/p,r=Math.exp(-t*t/2);m.push(r),0===e?g+=r:e<f&&(g+=2*r)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===a,o&&(u.poleAxis.value=o);let{_lodMax:_}=this;u.dTheta.value=d,u.mipInt.value=_-r;let v=this._sizeLods[n],y=4*(this._cubeSize-v);rD(t,3*v*(n>_-4?n-_+4:0),y,3*v,2*v),s.setRenderTarget(t),s.render(h,rb)}}function rI(e,t,r){let n=new Q(e,t,r);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function rD(e,t,r,n,i){e.viewport.set(t,r,n,i),e.scissor.set(t,r,n,i)}function rO(){return new t1({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:rB(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function rF(){return new t1({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:rB(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function rB(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function rz(e){let t=new WeakMap,r=null;function n(e){let r=e.target;r.removeEventListener("dispose",n);let i=t.get(r);void 0!==i&&(t.delete(r),i.dispose())}return{get:function(i){if(i&&i.isTexture){let a=i.mapping,o=303===a||304===a,s=301===a||302===a;if(o||s){let a=t.get(i),l=void 0!==a?a.texture.pmremVersion:0;if(i.isRenderTargetTexture&&i.pmremVersion!==l)return null===r&&(r=new rU(e)),(a=o?r.fromEquirectangular(i,a):r.fromCubemap(i,a)).texture.pmremVersion=i.pmremVersion,t.set(i,a),a.texture;if(void 0!==a)return a.texture;{let l=i.image;return o&&l&&l.height>0||s&&l&&function(e){let t=0;for(let r=0;r<6;r++)void 0!==e[r]&&t++;return 6===t}(l)?(null===r&&(r=new rU(e)),(a=o?r.fromEquirectangular(i):r.fromCubemap(i)).texture.pmremVersion=i.pmremVersion,t.set(i,a),i.addEventListener("dispose",n),a.texture):null}}}return i},dispose:function(){t=new WeakMap,null!==r&&(r.dispose(),r=null)}}}function rk(e){let t={};function r(r){let n;if(void 0!==t[r])return t[r];switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}return t[r]=n,n}return{has:function(e){return null!==r(e)},init:function(){r("EXT_color_buffer_float"),r("WEBGL_clip_cull_distance"),r("OES_texture_float_linear"),r("EXT_color_buffer_half_float"),r("WEBGL_multisampled_render_to_texture"),r("WEBGL_render_shared_exponent")},get:function(e){let t=r(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function rH(e,t,r,n){let i={},a=new WeakMap;function o(e){let s=e.target;for(let e in null!==s.index&&t.remove(s.index),s.attributes)t.remove(s.attributes[e]);for(let e in s.morphAttributes){let r=s.morphAttributes[e];for(let e=0,n=r.length;e<n;e++)t.remove(r[e])}s.removeEventListener("dispose",o),delete i[s.id];let l=a.get(s);l&&(t.remove(l),a.delete(s)),n.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,r.memory.geometries--}function s(e){let r=[],n=e.index,i=e.attributes.position,o=0;if(null!==n){let e=n.array;o=n.version;for(let t=0,n=e.length;t<n;t+=3){let n=e[t+0],i=e[t+1],a=e[t+2];r.push(n,i,i,a,a,n)}}else{if(void 0===i)return;let e=i.array;o=i.version;for(let t=0,n=e.length/3-1;t<n;t+=3){let e=t+0,n=t+1,i=t+2;r.push(e,n,n,i,i,e)}}let s=new(D(r)?tE:tx)(r,1);s.version=o;let l=a.get(e);l&&t.remove(l),a.set(e,s)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",o),i[t.id]=!0,r.memory.geometries++),t},update:function(r){let n=r.attributes;for(let r in n)t.update(n[r],e.ARRAY_BUFFER);let i=r.morphAttributes;for(let r in i){let n=i[r];for(let r=0,i=n.length;r<i;r++)t.update(n[r],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let r=e.index;null!==r&&t.version<r.version&&s(e)}else s(e);return a.get(e)}}}function rV(e,t,r){let n,i,a;this.setMode=function(e){n=e},this.setIndex=function(e){i=e.type,a=e.bytesPerElement},this.render=function(t,o){e.drawElements(n,o,i,t*a),r.update(o,n,1)},this.renderInstances=function(t,o,s){0!==s&&(e.drawElementsInstanced(n,o,i,t*a,s),r.update(o,n,s))},this.renderMultiDraw=function(e,o,s){if(0===s)return;let l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<s;t++)this.render(e[t]/a,o[t]);else{l.multiDrawElementsWEBGL(n,o,0,i,e,0,s);let t=0;for(let e=0;e<s;e++)t+=o[e];r.update(t,n,1)}}}function rG(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(r,n,i){switch(t.calls++,n){case e.TRIANGLES:t.triangles+=r/3*i;break;case e.LINES:t.lines+=r/2*i;break;case e.LINE_STRIP:t.lines+=i*(r-1);break;case e.LINE_LOOP:t.lines+=i*r;break;case e.POINTS:t.points+=i*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function rW(e,t,r){let n=new WeakMap,i=new Z;return{update:function(a,o,s){let l=a.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=void 0!==h?h.length:0,c=n.get(o);if(void 0===c||c.count!==u){void 0!==c&&c.texture.dispose();let e=void 0!==o.morphAttributes.position,r=void 0!==o.morphAttributes.normal,a=void 0!==o.morphAttributes.color,s=o.morphAttributes.position||[],l=o.morphAttributes.normal||[],h=o.morphAttributes.color||[],d=0;!0===e&&(d=1),!0===r&&(d=2),!0===a&&(d=3);let p=o.attributes.position.count*d,f=1;p>t.maxTextureSize&&(f=Math.ceil(p/t.maxTextureSize),p=t.maxTextureSize);let m=new Float32Array(p*f*4*u),g=new ee(m,p,f,u);g.type=1015,g.needsUpdate=!0;let _=4*d;for(let t=0;t<u;t++){let n=s[t],o=l[t],u=h[t],c=p*f*4*t;for(let t=0;t<n.count;t++){let s=t*_;!0===e&&(i.fromBufferAttribute(n,t),m[c+s+0]=i.x,m[c+s+1]=i.y,m[c+s+2]=i.z,m[c+s+3]=0),!0===r&&(i.fromBufferAttribute(o,t),m[c+s+4]=i.x,m[c+s+5]=i.y,m[c+s+6]=i.z,m[c+s+7]=0),!0===a&&(i.fromBufferAttribute(u,t),m[c+s+8]=i.x,m[c+s+9]=i.y,m[c+s+10]=i.z,m[c+s+11]=4===u.itemSize?i.w:1)}}c={count:u,texture:g,size:new N(p,f)},n.set(o,c),o.addEventListener("dispose",function e(){g.dispose(),n.delete(o),o.removeEventListener("dispose",e)})}if(!0===a.isInstancedMesh&&null!==a.morphTexture)s.getUniforms().setValue(e,"morphTexture",a.morphTexture,r);else{let t=0;for(let e=0;e<l.length;e++)t+=l[e];let r=o.morphTargetsRelative?1:1-t;s.getUniforms().setValue(e,"morphTargetBaseInfluence",r),s.getUniforms().setValue(e,"morphTargetInfluences",l)}s.getUniforms().setValue(e,"morphTargetsTexture",c.texture,r),s.getUniforms().setValue(e,"morphTargetsTextureSize",c.size)}}}function rX(e,t,r,n){let i=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),r.remove(t.instanceMatrix),null!==t.instanceColor&&r.remove(t.instanceColor)}return{update:function(o){let s=n.render.frame,l=o.geometry,h=t.get(o,l);if(i.get(h)!==s&&(t.update(h),i.set(h,s)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",a)&&o.addEventListener("dispose",a),i.get(o)!==s&&(r.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&r.update(o.instanceColor,e.ARRAY_BUFFER),i.set(o,s))),o.isSkinnedMesh){let e=o.skeleton;i.get(e)!==s&&(e.update(),i.set(e,s))}return h},dispose:function(){i=new WeakMap}}}class rj extends ${constructor(e,t,r,n,i,a,o,s,l,h){if(1026!==(h=void 0!==h?h:1026)&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&1026===h&&(r=1014),void 0===r&&1027===h&&(r=1020),super(null,n,i,a,o,s,h,r,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:1003,this.minFilter=void 0!==s?s:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}const rq=new $,rY=new rj(1,1);rY.compareFunction=515;const rJ=new ee,r$=new class extends ${constructor(e=null,t=1,r=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},rZ=new t7,rK=[],rQ=[],r0=new Float32Array(16),r1=new Float32Array(9),r2=new Float32Array(4);function r3(e,t,r){let n=e[0];if(n<=0||n>0)return e;let i=t*r,a=rK[i];if(void 0===a&&(a=new Float32Array(i),rK[i]=a),0!==t){n.toArray(a,0);for(let n=1,i=0;n!==t;++n)i+=r,e[n].toArray(a,i)}return a}function r4(e,t){if(e.length!==t.length)return!1;for(let r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0}function r5(e,t){for(let r=0,n=t.length;r<n;r++)e[r]=t[r]}function r6(e,t){let r=rQ[t];void 0===r&&(r=new Int32Array(t),rQ[t]=r);for(let n=0;n!==t;++n)r[n]=e.allocateTextureUnit();return r}function r8(e,t){let r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function r7(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(r4(r,t))return;e.uniform2fv(this.addr,t),r5(r,t)}}function r9(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(r4(r,t))return;e.uniform3fv(this.addr,t),r5(r,t)}}function ne(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(r4(r,t))return;e.uniform4fv(this.addr,t),r5(r,t)}}function nt(e,t){let r=this.cache,n=t.elements;if(void 0===n){if(r4(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),r5(r,t)}else{if(r4(r,n))return;r2.set(n),e.uniformMatrix2fv(this.addr,!1,r2),r5(r,n)}}function nr(e,t){let r=this.cache,n=t.elements;if(void 0===n){if(r4(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),r5(r,t)}else{if(r4(r,n))return;r1.set(n),e.uniformMatrix3fv(this.addr,!1,r1),r5(r,n)}}function nn(e,t){let r=this.cache,n=t.elements;if(void 0===n){if(r4(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),r5(r,t)}else{if(r4(r,n))return;r0.set(n),e.uniformMatrix4fv(this.addr,!1,r0),r5(r,n)}}function ni(e,t){let r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function na(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(r4(r,t))return;e.uniform2iv(this.addr,t),r5(r,t)}}function no(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else{if(r4(r,t))return;e.uniform3iv(this.addr,t),r5(r,t)}}function ns(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(r4(r,t))return;e.uniform4iv(this.addr,t),r5(r,t)}}function nl(e,t){let r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function nh(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(r4(r,t))return;e.uniform2uiv(this.addr,t),r5(r,t)}}function nu(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else{if(r4(r,t))return;e.uniform3uiv(this.addr,t),r5(r,t)}}function nc(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(r4(r,t))return;e.uniform4uiv(this.addr,t),r5(r,t)}}function nd(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i);let a=this.type===e.SAMPLER_2D_SHADOW?rY:rq;r.setTexture2D(t||a,i)}function np(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||r$,i)}function nf(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTextureCube(t||rZ,i)}function nm(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||rJ,i)}function ng(e,t){e.uniform1fv(this.addr,t)}function n_(e,t){let r=r3(t,this.size,2);e.uniform2fv(this.addr,r)}function nv(e,t){let r=r3(t,this.size,3);e.uniform3fv(this.addr,r)}function ny(e,t){let r=r3(t,this.size,4);e.uniform4fv(this.addr,r)}function nx(e,t){let r=r3(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function nE(e,t){let r=r3(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function nM(e,t){let r=r3(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function nS(e,t){e.uniform1iv(this.addr,t)}function nb(e,t){e.uniform2iv(this.addr,t)}function nT(e,t){e.uniform3iv(this.addr,t)}function nw(e,t){e.uniform4iv(this.addr,t)}function nA(e,t){e.uniform1uiv(this.addr,t)}function nR(e,t){e.uniform2uiv(this.addr,t)}function nC(e,t){e.uniform3uiv(this.addr,t)}function nP(e,t){e.uniform4uiv(this.addr,t)}function nL(e,t,r){let n=this.cache,i=t.length,a=r6(r,i);r4(n,a)||(e.uniform1iv(this.addr,a),r5(n,a));for(let e=0;e!==i;++e)r.setTexture2D(t[e]||rq,a[e])}function nN(e,t,r){let n=this.cache,i=t.length,a=r6(r,i);r4(n,a)||(e.uniform1iv(this.addr,a),r5(n,a));for(let e=0;e!==i;++e)r.setTexture3D(t[e]||r$,a[e])}function nU(e,t,r){let n=this.cache,i=t.length,a=r6(r,i);r4(n,a)||(e.uniform1iv(this.addr,a),r5(n,a));for(let e=0;e!==i;++e)r.setTextureCube(t[e]||rZ,a[e])}function nI(e,t,r){let n=this.cache,i=t.length,a=r6(r,i);r4(n,a)||(e.uniform1iv(this.addr,a),r5(n,a));for(let e=0;e!==i;++e)r.setTexture2DArray(t[e]||rJ,a[e])}class nD{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return r8;case 35664:return r7;case 35665:return r9;case 35666:return ne;case 35674:return nt;case 35675:return nr;case 35676:return nn;case 5124:case 35670:return ni;case 35667:case 35671:return na;case 35668:case 35672:return no;case 35669:case 35673:return ns;case 5125:return nl;case 36294:return nh;case 36295:return nu;case 36296:return nc;case 35678:case 36198:case 36298:case 36306:case 35682:return nd;case 35679:case 36299:case 36307:return np;case 35680:case 36300:case 36308:case 36293:return nf;case 36289:case 36303:case 36311:case 36292:return nm}}(t.type)}}class nO{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return ng;case 35664:return n_;case 35665:return nv;case 35666:return ny;case 35674:return nx;case 35675:return nE;case 35676:return nM;case 5124:case 35670:return nS;case 35667:case 35671:return nb;case 35668:case 35672:return nT;case 35669:case 35673:return nw;case 5125:return nA;case 36294:return nR;case 36295:return nC;case 36296:return nP;case 35678:case 36198:case 36298:case 36306:case 35682:return nL;case 35679:case 36299:case 36307:return nN;case 35680:case 36300:case 36308:case 36293:return nU;case 36289:case 36303:case 36311:case 36292:return nI}}(t.type)}}class nF{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,r){let n=this.seq;for(let i=0,a=n.length;i!==a;++i){let a=n[i];a.setValue(e,t[a.id],r)}}}const nB=/(\w+)(\])?(\[|\.)?/g;function nz(e,t){e.seq.push(t),e.map[t.id]=t}class nk{constructor(e,t){this.seq=[],this.map={};let r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<r;++n){let r=e.getActiveUniform(t,n),i=e.getUniformLocation(t,r.name);!function(e,t,r){let n=e.name,i=n.length;for(nB.lastIndex=0;;){let a=nB.exec(n),o=nB.lastIndex,s=a[1],l="]"===a[2],h=a[3];if(l&&(s|=0),void 0===h||"["===h&&o+2===i){nz(r,void 0===h?new nD(s,e,t):new nO(s,e,t));break}{let e=r.map[s];void 0===e&&nz(r,e=new nF(s)),r=e}}}(r,i,this)}}setValue(e,t,r,n){let i=this.map[t];void 0!==i&&i.setValue(e,r,n)}setOptional(e,t,r){let n=t[r];void 0!==n&&this.setValue(e,r,n)}static upload(e,t,r,n){for(let i=0,a=t.length;i!==a;++i){let a=t[i],o=r[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,n)}}static seqWithValue(e,t){let r=[];for(let n=0,i=e.length;n!==i;++n){let i=e[n];i.id in t&&r.push(i)}return r}}function nH(e,t,r){let n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),n}let nV=0;function nG(e,t,r){let n=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(n&&""===i)return"";let a=/ERROR: 0:(\d+)/.exec(i);if(!a)return i;{let n=parseInt(a[1]);return r.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){let r=e.split("\n"),n=[],i=Math.max(t-6,0),a=Math.min(t+6,r.length);for(let e=i;e<a;e++){let i=e+1;n.push(`${i===t?">":" "} ${i}: ${r[e]}`)}return n.join("\n")}(e.getShaderSource(t),n)}}function nW(e){return""!==e}function nX(e,t){let r=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,r).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function nj(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const nq=/^[ \t]*#include +<([\w\d./]+)>/gm;function nY(e){return e.replace(nq,n$)}const nJ=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function n$(e,t){let r=ru[t];if(void 0===r){let e=nJ.get(t);if(void 0!==e)r=ru[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e);else throw Error("Can not resolve #include <"+t+">")}return nY(r)}const nZ=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function nK(e){return e.replace(nZ,nQ)}function nQ(e,t,r,n){let i="";for(let e=parseInt(t);e<parseInt(r);e++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function n0(e){let t=`precision ${e.precision} float;
	precision ${e.precision} int;
	precision ${e.precision} sampler2D;
	precision ${e.precision} samplerCube;
	precision ${e.precision} sampler3D;
	precision ${e.precision} sampler2DArray;
	precision ${e.precision} sampler2DShadow;
	precision ${e.precision} samplerCubeShadow;
	precision ${e.precision} sampler2DArrayShadow;
	precision ${e.precision} isampler2D;
	precision ${e.precision} isampler3D;
	precision ${e.precision} isamplerCube;
	precision ${e.precision} isampler2DArray;
	precision ${e.precision} usampler2D;
	precision ${e.precision} usampler3D;
	precision ${e.precision} usamplerCube;
	precision ${e.precision} usampler2DArray;
	`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function n1(e,t,r,n){let i,a,o,s,l,h;let u=e.getContext(),c=r.defines,d=r.vertexShader,p=r.fragmentShader,f=(l="SHADOWMAP_TYPE_BASIC",1===r.shadowMapType?l="SHADOWMAP_TYPE_PCF":2===r.shadowMapType?l="SHADOWMAP_TYPE_PCF_SOFT":3===r.shadowMapType&&(l="SHADOWMAP_TYPE_VSM"),l),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:t="ENVMAP_TYPE_CUBE_UV"}return t}(r),x=(h="ENVMAP_MODE_REFLECTION",r.envMap&&302===r.envMapMode&&(h="ENVMAP_MODE_REFRACTION"),h),E=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(r),b=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let r=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,r),112)),texelHeight:1/t,maxMip:r}}(r),T=[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(nW).join("\n"),w=function(e){let t=[];for(let r in e){let n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(c),A=u.createProgram(),R=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?((i=["#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w].filter(nW).join("\n")).length>0&&(i+="\n"),(a=["#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w].filter(nW).join("\n")).length>0&&(a+="\n")):(i=[n0(r),"#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w,r.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",r.batching?"#define USE_BATCHING":"",r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.instancingMorph?"#define USE_INSTANCING_MORPH":"",r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+x:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",r.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",r.displacementMap?"#define USE_DISPLACEMENTMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.anisotropy?"#define USE_ANISOTROPY":"",r.anisotropyMap?"#define USE_ANISOTROPYMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",r.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaHash?"#define USE_ALPHAHASH":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",r.mapUv?"#define MAP_UV "+r.mapUv:"",r.alphaMapUv?"#define ALPHAMAP_UV "+r.alphaMapUv:"",r.lightMapUv?"#define LIGHTMAP_UV "+r.lightMapUv:"",r.aoMapUv?"#define AOMAP_UV "+r.aoMapUv:"",r.emissiveMapUv?"#define EMISSIVEMAP_UV "+r.emissiveMapUv:"",r.bumpMapUv?"#define BUMPMAP_UV "+r.bumpMapUv:"",r.normalMapUv?"#define NORMALMAP_UV "+r.normalMapUv:"",r.displacementMapUv?"#define DISPLACEMENTMAP_UV "+r.displacementMapUv:"",r.metalnessMapUv?"#define METALNESSMAP_UV "+r.metalnessMapUv:"",r.roughnessMapUv?"#define ROUGHNESSMAP_UV "+r.roughnessMapUv:"",r.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+r.anisotropyMapUv:"",r.clearcoatMapUv?"#define CLEARCOATMAP_UV "+r.clearcoatMapUv:"",r.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+r.clearcoatNormalMapUv:"",r.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+r.clearcoatRoughnessMapUv:"",r.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+r.iridescenceMapUv:"",r.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+r.iridescenceThicknessMapUv:"",r.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+r.sheenColorMapUv:"",r.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+r.sheenRoughnessMapUv:"",r.specularMapUv?"#define SPECULARMAP_UV "+r.specularMapUv:"",r.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+r.specularColorMapUv:"",r.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+r.specularIntensityMapUv:"",r.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+r.transmissionMapUv:"",r.thicknessMapUv?"#define THICKNESSMAP_UV "+r.thicknessMapUv:"",r.vertexTangents&&!1===r.flatShading?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUv1s?"#define USE_UV1":"",r.vertexUv2s?"#define USE_UV2":"",r.vertexUv3s?"#define USE_UV3":"",r.pointsUvs?"#define USE_POINTS_UV":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.morphColors?"#define USE_MORPHCOLORS":"",r.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",r.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+r.morphTextureStride:"",r.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+r.morphTargetsCount:"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+f:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.numLightProbes>0?"#define USE_LIGHT_PROBES":"",r.useLegacyLights?"#define LEGACY_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(nW).join("\n"),a=[n0(r),"#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+m:"",r.envMap?"#define "+x:"",r.envMap?"#define "+E:"",b?"#define CUBEUV_TEXEL_WIDTH "+b.texelWidth:"",b?"#define CUBEUV_TEXEL_HEIGHT "+b.texelHeight:"",b?"#define CUBEUV_MAX_MIP "+b.maxMip+".0":"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",r.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.anisotropy?"#define USE_ANISOTROPY":"",r.anisotropyMap?"#define USE_ANISOTROPYMAP":"",r.clearcoat?"#define USE_CLEARCOAT":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescence?"#define USE_IRIDESCENCE":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",r.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaTest?"#define USE_ALPHATEST":"",r.alphaHash?"#define USE_ALPHAHASH":"",r.sheen?"#define USE_SHEEN":"",r.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents&&!1===r.flatShading?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUv1s?"#define USE_UV1":"",r.vertexUv2s?"#define USE_UV2":"",r.vertexUv3s?"#define USE_UV3":"",r.pointsUvs?"#define USE_POINTS_UV":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+f:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.numLightProbes>0?"#define USE_LIGHT_PROBES":"",r.useLegacyLights?"#define LEGACY_LIGHTS":"",r.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?ru.tonemapping_pars_fragment:"",0!==r.toneMapping?function(e,t){let r;switch(t){case 1:r="Linear";break;case 2:r="Reinhard";break;case 3:r="OptimizedCineon";break;case 4:r="ACESFilmic";break;case 6:r="AgX";break;case 7:r="Neutral";break;case 5:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.opaque?"#define OPAQUE":"",ru.colorspace_pars_fragment,function(e,t){let r=function(e){let t;let r=V.getPrimaries(V.workingColorSpace),n=V.getPrimaries(e);switch(r===n?t="":"p3"===r&&n===M?t="LinearDisplayP3ToLinearSRGB":r===M&&"p3"===n&&(t="LinearSRGBToLinearDisplayP3"),e){case _:case y:return[t,"LinearTransferOETF"];case g:case v:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[t,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${r[0]}( ${r[1]}( value ) ); }`}("linearToOutputTexel",r.outputColorSpace),r.useDepthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(nW).join("\n")),d=nj(d=nX(d=nY(d),r),r),p=nj(p=nX(p=nY(p),r),r),d=nK(d),p=nK(p),!0!==r.isRawShaderMaterial&&(R="#version 300 es\n",i=[T,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+i,a=["#define varying in",r.glslVersion===S?"":"layout(location = 0) out highp vec4 pc_fragColor;",r.glslVersion===S?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let C=R+i+d,P=R+a+p,L=nH(u,u.VERTEX_SHADER,C),N=nH(u,u.FRAGMENT_SHADER,P);function U(t){if(e.debug.checkShaderErrors){let r=u.getProgramInfoLog(A).trim(),n=u.getShaderInfoLog(L).trim(),o=u.getShaderInfoLog(N).trim(),s=!0,l=!0;if(!1===u.getProgramParameter(A,u.LINK_STATUS)){if(s=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(u,A,L,N);else{let e=nG(u,L,"vertex"),n=nG(u,N,"fragment");console.error("THREE.WebGLProgram: Shader Error "+u.getError()+" - VALIDATE_STATUS "+u.getProgramParameter(A,u.VALIDATE_STATUS)+"\n\nMaterial Name: "+t.name+"\nMaterial Type: "+t.type+"\n\nProgram Info Log: "+r+"\n"+e+"\n"+n)}}else""!==r?console.warn("THREE.WebGLProgram: Program Info Log:",r):(""===n||""===o)&&(l=!1);l&&(t.diagnostics={runnable:s,programLog:r,vertexShader:{log:n,prefix:i},fragmentShader:{log:o,prefix:a}})}u.deleteShader(L),u.deleteShader(N),o=new nk(u,A),s=function(e,t){let r={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){let n=e.getActiveAttrib(t,i),a=n.name,o=1;n.type===e.FLOAT_MAT2&&(o=2),n.type===e.FLOAT_MAT3&&(o=3),n.type===e.FLOAT_MAT4&&(o=4),r[a]={type:n.type,location:e.getAttribLocation(t,a),locationSize:o}}return r}(u,A)}u.attachShader(A,L),u.attachShader(A,N),void 0!==r.index0AttributeName?u.bindAttribLocation(A,0,r.index0AttributeName):!0===r.morphTargets&&u.bindAttribLocation(A,0,"position"),u.linkProgram(A),this.getUniforms=function(){return void 0===o&&U(this),o},this.getAttributes=function(){return void 0===s&&U(this),s};let I=!1===r.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===I&&(I=u.getProgramParameter(A,37297)),I},this.destroy=function(){n.releaseStatesOfProgram(this),u.deleteProgram(A),this.program=void 0},this.type=r.shaderType,this.name=r.shaderName,this.id=nV++,this.cacheKey=t,this.usedTimes=1,this.program=A,this.vertexShader=L,this.fragmentShader=N,this}let n2=0;class n3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,r=e.fragmentShader,n=this._getShaderStage(t),i=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return!1===a.has(n)&&(a.add(n),n.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){for(let t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,r=t.get(e);return void 0===r&&(r=new Set,t.set(e,r)),r}_getShaderStage(e){let t=this.shaderCache,r=t.get(e);return void 0===r&&(r=new n4(e),t.set(e,r)),r}}class n4{constructor(e){this.id=n2++,this.code=e,this.usedTimes=0}}function n5(e,t,r,n,i,a,o){let s=new eV,l=new n3,h=new Set,u=[],c=i.logarithmicDepthBuffer,d=i.vertexTextures,p=i.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(e){return(h.add(e),0===e)?"uv":`uv${e}`}return{getParameters:function(a,s,u,g,v){let y,x,M,S;let b=g.fog,T=v.geometry,w=a.isMeshStandardMaterial?g.environment:null,A=(a.isMeshStandardMaterial?r:t).get(a.envMap||w),R=A&&306===A.mapping?A.image.height:null,C=f[a.type];null!==a.precision&&(p=i.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead.");let P=T.morphAttributes.position||T.morphAttributes.normal||T.morphAttributes.color,L=void 0!==P?P.length:0,N=0;if(void 0!==T.morphAttributes.position&&(N=1),void 0!==T.morphAttributes.normal&&(N=2),void 0!==T.morphAttributes.color&&(N=3),C){let e=rd[C];y=e.vertexShader,x=e.fragmentShader}else y=a.vertexShader,x=a.fragmentShader,l.update(a),M=l.getVertexShaderID(a),S=l.getFragmentShaderID(a);let U=e.getRenderTarget(),I=!0===v.isInstancedMesh,D=!0===v.isBatchedMesh,O=!!a.map,F=!!a.matcap,B=!!A,z=!!a.aoMap,k=!!a.lightMap,H=!!a.bumpMap,G=!!a.normalMap,W=!!a.displacementMap,X=!!a.emissiveMap,j=!!a.metalnessMap,q=!!a.roughnessMap,Y=a.anisotropy>0,J=a.clearcoat>0,$=a.iridescence>0,Z=a.sheen>0,K=a.transmission>0,Q=Y&&!!a.anisotropyMap,ee=J&&!!a.clearcoatMap,et=J&&!!a.clearcoatNormalMap,er=J&&!!a.clearcoatRoughnessMap,en=$&&!!a.iridescenceMap,ei=$&&!!a.iridescenceThicknessMap,ea=Z&&!!a.sheenColorMap,eo=Z&&!!a.sheenRoughnessMap,es=!!a.specularMap,el=!!a.specularColorMap,eh=!!a.specularIntensityMap,eu=K&&!!a.transmissionMap,ec=K&&!!a.thicknessMap,ed=!!a.gradientMap,ep=!!a.alphaMap,ef=a.alphaTest>0,em=!!a.alphaHash,eg=!!a.extensions,e_=0;a.toneMapped&&(null===U||!0===U.isXRRenderTarget)&&(e_=e.toneMapping);let ev={shaderID:C,shaderType:a.type,shaderName:a.name,vertexShader:y,fragmentShader:x,defines:a.defines,customVertexShaderID:M,customFragmentShaderID:S,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,batching:D,instancing:I,instancingColor:I&&null!==v.instanceColor,instancingMorph:I&&null!==v.morphTexture,supportsVertexTextures:d,outputColorSpace:null===U?e.outputColorSpace:!0===U.isXRRenderTarget?U.texture.colorSpace:_,alphaToCoverage:!!a.alphaToCoverage,map:O,matcap:F,envMap:B,envMapMode:B&&A.mapping,envMapCubeUVHeight:R,aoMap:z,lightMap:k,bumpMap:H,normalMap:G,displacementMap:d&&W,emissiveMap:X,normalMapObjectSpace:G&&1===a.normalMapType,normalMapTangentSpace:G&&0===a.normalMapType,metalnessMap:j,roughnessMap:q,anisotropy:Y,anisotropyMap:Q,clearcoat:J,clearcoatMap:ee,clearcoatNormalMap:et,clearcoatRoughnessMap:er,iridescence:$,iridescenceMap:en,iridescenceThicknessMap:ei,sheen:Z,sheenColorMap:ea,sheenRoughnessMap:eo,specularMap:es,specularColorMap:el,specularIntensityMap:eh,transmission:K,transmissionMap:eu,thicknessMap:ec,gradientMap:ed,opaque:!1===a.transparent&&1===a.blending&&!1===a.alphaToCoverage,alphaMap:ep,alphaTest:ef,alphaHash:em,combine:a.combine,mapUv:O&&m(a.map.channel),aoMapUv:z&&m(a.aoMap.channel),lightMapUv:k&&m(a.lightMap.channel),bumpMapUv:H&&m(a.bumpMap.channel),normalMapUv:G&&m(a.normalMap.channel),displacementMapUv:W&&m(a.displacementMap.channel),emissiveMapUv:X&&m(a.emissiveMap.channel),metalnessMapUv:j&&m(a.metalnessMap.channel),roughnessMapUv:q&&m(a.roughnessMap.channel),anisotropyMapUv:Q&&m(a.anisotropyMap.channel),clearcoatMapUv:ee&&m(a.clearcoatMap.channel),clearcoatNormalMapUv:et&&m(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:er&&m(a.clearcoatRoughnessMap.channel),iridescenceMapUv:en&&m(a.iridescenceMap.channel),iridescenceThicknessMapUv:ei&&m(a.iridescenceThicknessMap.channel),sheenColorMapUv:ea&&m(a.sheenColorMap.channel),sheenRoughnessMapUv:eo&&m(a.sheenRoughnessMap.channel),specularMapUv:es&&m(a.specularMap.channel),specularColorMapUv:el&&m(a.specularColorMap.channel),specularIntensityMapUv:eh&&m(a.specularIntensityMap.channel),transmissionMapUv:eu&&m(a.transmissionMap.channel),thicknessMapUv:ec&&m(a.thicknessMap.channel),alphaMapUv:ep&&m(a.alphaMap.channel),vertexTangents:!!T.attributes.tangent&&(G||Y),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!T.attributes.color&&4===T.attributes.color.itemSize,pointsUvs:!0===v.isPoints&&!!T.attributes.uv&&(O||ep),fog:!!b,useFog:!0===a.fog,fogExp2:!!b&&b.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==T.morphAttributes.position,morphNormals:void 0!==T.morphAttributes.normal,morphColors:void 0!==T.morphAttributes.color,morphTargetsCount:L,morphTextureStride:N,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numLightProbes:s.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:e_,useLegacyLights:e._useLegacyLights,decodeVideoTexture:O&&!0===a.map.isVideoTexture&&V.getTransfer(a.map.colorSpace)===E,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionClipCullDistance:eg&&!0===a.extensions.clipCullDistance&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:eg&&!0===a.extensions.multiDraw&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return ev.vertexUv1s=h.has(1),ev.vertexUv2s=h.has(2),ev.vertexUv3s=h.has(3),h.clear(),ev},getProgramCacheKey:function(t){let r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.customVertexShaderID),r.push(t.customFragmentShaderID)),void 0!==t.defines)for(let e in t.defines)r.push(e),r.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(r.push(t.precision),r.push(t.outputColorSpace),r.push(t.envMapMode),r.push(t.envMapCubeUVHeight),r.push(t.mapUv),r.push(t.alphaMapUv),r.push(t.lightMapUv),r.push(t.aoMapUv),r.push(t.bumpMapUv),r.push(t.normalMapUv),r.push(t.displacementMapUv),r.push(t.emissiveMapUv),r.push(t.metalnessMapUv),r.push(t.roughnessMapUv),r.push(t.anisotropyMapUv),r.push(t.clearcoatMapUv),r.push(t.clearcoatNormalMapUv),r.push(t.clearcoatRoughnessMapUv),r.push(t.iridescenceMapUv),r.push(t.iridescenceThicknessMapUv),r.push(t.sheenColorMapUv),r.push(t.sheenRoughnessMapUv),r.push(t.specularMapUv),r.push(t.specularColorMapUv),r.push(t.specularIntensityMapUv),r.push(t.transmissionMapUv),r.push(t.thicknessMapUv),r.push(t.combine),r.push(t.fogExp2),r.push(t.sizeAttenuation),r.push(t.morphTargetsCount),r.push(t.morphAttributeCount),r.push(t.numDirLights),r.push(t.numPointLights),r.push(t.numSpotLights),r.push(t.numSpotLightMaps),r.push(t.numHemiLights),r.push(t.numRectAreaLights),r.push(t.numDirLightShadows),r.push(t.numPointLightShadows),r.push(t.numSpotLightShadows),r.push(t.numSpotLightShadowsWithMaps),r.push(t.numLightProbes),r.push(t.shadowMapType),r.push(t.toneMapping),r.push(t.numClippingPlanes),r.push(t.numClipIntersection),r.push(t.depthPacking),s.disableAll(),t.supportsVertexTextures&&s.enable(0),t.instancing&&s.enable(1),t.instancingColor&&s.enable(2),t.instancingMorph&&s.enable(3),t.matcap&&s.enable(4),t.envMap&&s.enable(5),t.normalMapObjectSpace&&s.enable(6),t.normalMapTangentSpace&&s.enable(7),t.clearcoat&&s.enable(8),t.iridescence&&s.enable(9),t.alphaTest&&s.enable(10),t.vertexColors&&s.enable(11),t.vertexAlphas&&s.enable(12),t.vertexUv1s&&s.enable(13),t.vertexUv2s&&s.enable(14),t.vertexUv3s&&s.enable(15),t.vertexTangents&&s.enable(16),t.anisotropy&&s.enable(17),t.alphaHash&&s.enable(18),t.batching&&s.enable(19),r.push(s.mask),s.disableAll(),t.fog&&s.enable(0),t.useFog&&s.enable(1),t.flatShading&&s.enable(2),t.logarithmicDepthBuffer&&s.enable(3),t.skinning&&s.enable(4),t.morphTargets&&s.enable(5),t.morphNormals&&s.enable(6),t.morphColors&&s.enable(7),t.premultipliedAlpha&&s.enable(8),t.shadowMapEnabled&&s.enable(9),t.useLegacyLights&&s.enable(10),t.doubleSided&&s.enable(11),t.flipSided&&s.enable(12),t.useDepthPacking&&s.enable(13),t.dithering&&s.enable(14),t.transmission&&s.enable(15),t.sheen&&s.enable(16),t.opaque&&s.enable(17),t.pointsUvs&&s.enable(18),t.decodeVideoTexture&&s.enable(19),t.alphaToCoverage&&s.enable(20),r.push(s.mask),r.push(e.outputColorSpace)),r.push(t.customProgramCacheKey),r.join()},getUniforms:function(e){let t;let r=f[e.type];if(r){let e=rd[r];t=t0.clone(e.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,r){let n;for(let e=0,t=u.length;e<t;e++){let t=u[e];if(t.cacheKey===r){n=t,++n.usedTimes;break}}return void 0===n&&(n=new n1(e,r,t,a),u.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){let t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function n6(){let e=new WeakMap;return{get:function(t){let r=e.get(t);return void 0===r&&(r={},e.set(t,r)),r},remove:function(t){e.delete(t)},update:function(t,r,n){e.get(t)[r]=n},dispose:function(){e=new WeakMap}}}function n8(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function n7(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function n9(){let e=[],t=0,r=[],n=[],i=[];function a(r,n,i,a,o,s){let l=e[t];return void 0===l?(l={id:r.id,object:r,geometry:n,material:i,groupOrder:a,renderOrder:r.renderOrder,z:o,group:s},e[t]=l):(l.id=r.id,l.object=r,l.geometry=n,l.material=i,l.groupOrder=a,l.renderOrder=r.renderOrder,l.z=o,l.group=s),t++,l}return{opaque:r,transmissive:n,transparent:i,init:function(){t=0,r.length=0,n.length=0,i.length=0},push:function(e,t,o,s,l,h){let u=a(e,t,o,s,l,h);o.transmission>0?n.push(u):!0===o.transparent?i.push(u):r.push(u)},unshift:function(e,t,o,s,l,h){let u=a(e,t,o,s,l,h);o.transmission>0?n.unshift(u):!0===o.transparent?i.unshift(u):r.unshift(u)},finish:function(){for(let r=t,n=e.length;r<n;r++){let t=e[r];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){r.length>1&&r.sort(e||n8),n.length>1&&n.sort(t||n7),i.length>1&&i.sort(t||n7)}}}function ie(){let e=new WeakMap;return{get:function(t,r){let n;let i=e.get(t);return void 0===i?(n=new n9,e.set(t,[n])):r>=i.length?(n=new n9,i.push(n)):n=i[r],n},dispose:function(){e=new WeakMap}}}function it(){let e={};return{get:function(t){let r;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":r={direction:new er,color:new tu};break;case"SpotLight":r={position:new er,direction:new er,color:new tu,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new er,color:new tu,distance:0,decay:0};break;case"HemisphereLight":r={direction:new er,skyColor:new tu,groundColor:new tu};break;case"RectAreaLight":r={color:new tu,position:new er,halfWidth:new er,halfHeight:new er}}return e[t.id]=r,r}}}let ir=0;function ii(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function ia(e){let t=new it,r=function(){let e={};return{get:function(t){let r;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new N};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new N,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=r,r}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)n.probe.push(new er);let i=new er,a=new eL,o=new eL;return{setup:function(i,a){let o=0,s=0,l=0;for(let e=0;e<9;e++)n.probe[e].set(0,0,0);let h=0,u=0,c=0,d=0,p=0,f=0,m=0,g=0,_=0,v=0,y=0;i.sort(ii);let x=!0===a?Math.PI:1;for(let e=0,a=i.length;e<a;e++){let a=i[e],E=a.color,M=a.intensity,S=a.distance,b=a.shadow&&a.shadow.map?a.shadow.map.texture:null;if(a.isAmbientLight)o+=E.r*M*x,s+=E.g*M*x,l+=E.b*M*x;else if(a.isLightProbe){for(let e=0;e<9;e++)n.probe[e].addScaledVector(a.sh.coefficients[e],M);y++}else if(a.isDirectionalLight){let e=t.get(a);if(e.color.copy(a.color).multiplyScalar(a.intensity*x),a.castShadow){let e=a.shadow,t=r.get(a);t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,n.directionalShadow[h]=t,n.directionalShadowMap[h]=b,n.directionalShadowMatrix[h]=a.shadow.matrix,f++}n.directional[h]=e,h++}else if(a.isSpotLight){let e=t.get(a);e.position.setFromMatrixPosition(a.matrixWorld),e.color.copy(E).multiplyScalar(M*x),e.distance=S,e.coneCos=Math.cos(a.angle),e.penumbraCos=Math.cos(a.angle*(1-a.penumbra)),e.decay=a.decay,n.spot[c]=e;let i=a.shadow;if(a.map&&(n.spotLightMap[_]=a.map,_++,i.updateMatrices(a),a.castShadow&&v++),n.spotLightMatrix[c]=i.matrix,a.castShadow){let e=r.get(a);e.shadowBias=i.bias,e.shadowNormalBias=i.normalBias,e.shadowRadius=i.radius,e.shadowMapSize=i.mapSize,n.spotShadow[c]=e,n.spotShadowMap[c]=b,g++}c++}else if(a.isRectAreaLight){let e=t.get(a);e.color.copy(E).multiplyScalar(M),e.halfWidth.set(.5*a.width,0,0),e.halfHeight.set(0,.5*a.height,0),n.rectArea[d]=e,d++}else if(a.isPointLight){let e=t.get(a);if(e.color.copy(a.color).multiplyScalar(a.intensity*x),e.distance=a.distance,e.decay=a.decay,a.castShadow){let e=a.shadow,t=r.get(a);t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,n.pointShadow[u]=t,n.pointShadowMap[u]=b,n.pointShadowMatrix[u]=a.shadow.matrix,m++}n.point[u]=e,u++}else if(a.isHemisphereLight){let e=t.get(a);e.skyColor.copy(a.color).multiplyScalar(M*x),e.groundColor.copy(a.groundColor).multiplyScalar(M*x),n.hemi[p]=e,p++}}d>0&&(!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=rc.LTC_FLOAT_1,n.rectAreaLTC2=rc.LTC_FLOAT_2):(n.rectAreaLTC1=rc.LTC_HALF_1,n.rectAreaLTC2=rc.LTC_HALF_2)),n.ambient[0]=o,n.ambient[1]=s,n.ambient[2]=l;let E=n.hash;(E.directionalLength!==h||E.pointLength!==u||E.spotLength!==c||E.rectAreaLength!==d||E.hemiLength!==p||E.numDirectionalShadows!==f||E.numPointShadows!==m||E.numSpotShadows!==g||E.numSpotMaps!==_||E.numLightProbes!==y)&&(n.directional.length=h,n.spot.length=c,n.rectArea.length=d,n.point.length=u,n.hemi.length=p,n.directionalShadow.length=f,n.directionalShadowMap.length=f,n.pointShadow.length=m,n.pointShadowMap.length=m,n.spotShadow.length=g,n.spotShadowMap.length=g,n.directionalShadowMatrix.length=f,n.pointShadowMatrix.length=m,n.spotLightMatrix.length=g+_-v,n.spotLightMap.length=_,n.numSpotLightShadowsWithMaps=v,n.numLightProbes=y,E.directionalLength=h,E.pointLength=u,E.spotLength=c,E.rectAreaLength=d,E.hemiLength=p,E.numDirectionalShadows=f,E.numPointShadows=m,E.numSpotShadows=g,E.numSpotMaps=_,E.numLightProbes=y,n.version=ir++)},setupView:function(e,t){let r=0,s=0,l=0,h=0,u=0,c=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){let d=e[t];if(d.isDirectionalLight){let e=n.directional[r];e.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(c),r++}else if(d.isSpotLight){let e=n.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),e.direction.setFromMatrixPosition(d.matrixWorld),i.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(i),e.direction.transformDirection(c),l++}else if(d.isRectAreaLight){let e=n.rectArea[h];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),o.identity(),a.copy(d.matrixWorld),a.premultiply(c),o.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),h++}else if(d.isPointLight){let e=n.point[s];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),s++}else if(d.isHemisphereLight){let e=n.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(c),u++}}},state:n}}function io(e){let t=new ia(e),r=[],n=[];return{init:function(){r.length=0,n.length=0},state:{lightsArray:r,shadowsArray:n,lights:t,transmissionRenderTarget:null},setupLights:function(e){t.setup(r,e)},setupLightsView:function(e){t.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){n.push(e)}}}function is(e){let t=new WeakMap;return{get:function(r,n=0){let i;let a=t.get(r);return void 0===a?(i=new io(e),t.set(r,[i])):n>=a.length?(i=new io(e),a.push(i)):i=a[n],i},dispose:function(){t=new WeakMap}}}class il extends tp{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ih extends tp{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function iu(e,t,r){let n=new ro,i=new N,a=new N,o=new Z,s=new il({depthPacking:3201}),l=new ih,h={},u=r.maxTextureSize,c={0:1,1:0,2:2},d=new t1({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new N},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;let f=new tP;f.setAttribute("position",new ty(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let m=new tY(f,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let _=this.type;function v(t,r,n,i){let a=null,o=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==o)a=o;else if(a=!0===n.isPointLight?l:s,e.localClippingEnabled&&!0===r.clipShadows&&Array.isArray(r.clippingPlanes)&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&r.alphaTest>0||r.map&&r.alphaTest>0){let e=a.uuid,t=r.uuid,n=h[e];void 0===n&&(n={},h[e]=n);let i=n[t];void 0===i&&(i=a.clone(),n[t]=i,r.addEventListener("dispose",y)),a=i}return a.visible=r.visible,a.wireframe=r.wireframe,3===i?a.side=null!==r.shadowSide?r.shadowSide:r.side:a.side=null!==r.shadowSide?r.shadowSide:c[r.side],a.alphaMap=r.alphaMap,a.alphaTest=r.alphaTest,a.map=r.map,a.clipShadows=r.clipShadows,a.clippingPlanes=r.clippingPlanes,a.clipIntersection=r.clipIntersection,a.displacementMap=r.displacementMap,a.displacementScale=r.displacementScale,a.displacementBias=r.displacementBias,a.wireframeLinewidth=r.wireframeLinewidth,a.linewidth=r.linewidth,!0===n.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=n),a}function y(e){for(let t in e.target.removeEventListener("dispose",y),h){let r=h[t],n=e.target.uuid;n in r&&(r[n].dispose(),delete r[n])}}this.render=function(r,s,l){if(!1===g.enabled||!1===g.autoUpdate&&!1===g.needsUpdate||0===r.length)return;let h=e.getRenderTarget(),c=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),y=e.state;y.setBlending(0),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1);let x=3!==_&&3===this.type,E=3===_&&3!==this.type;for(let h=0,c=r.length;h<c;h++){let c=r[h],f=c.shadow;if(void 0===f){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===f.autoUpdate&&!1===f.needsUpdate)continue;i.copy(f.mapSize);let g=f.getFrameExtents();if(i.multiply(g),a.copy(f.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(a.x=Math.floor(u/g.x),i.x=a.x*g.x,f.mapSize.x=a.x),i.y>u&&(a.y=Math.floor(u/g.y),i.y=a.y*g.y,f.mapSize.y=a.y)),null===f.map||!0===x||!0===E){let e=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==f.map&&f.map.dispose(),f.map=new Q(i.x,i.y,e),f.map.texture.name=c.name+".shadowMap",f.camera.updateProjectionMatrix()}e.setRenderTarget(f.map),e.clear();let _=f.getViewportCount();for(let r=0;r<_;r++){let i=f.getViewport(r);o.set(a.x*i.x,a.y*i.y,a.x*i.z,a.y*i.w),y.viewport(o),f.updateMatrices(c,r),n=f.getFrustum(),function r(i,a,o,s,l){if(!1===i.visible)return;if(i.layers.test(a.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===l)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,i.matrixWorld);let r=t.update(i),n=i.material;if(Array.isArray(n)){let t=r.groups;for(let h=0,u=t.length;h<u;h++){let u=t[h],c=n[u.materialIndex];if(c&&c.visible){let t=v(i,c,s,l);i.onBeforeShadow(e,i,a,o,r,t,u),e.renderBufferDirect(o,null,r,t,i,u),i.onAfterShadow(e,i,a,o,r,t,u)}}}else if(n.visible){let t=v(i,n,s,l);i.onBeforeShadow(e,i,a,o,r,t,null),e.renderBufferDirect(o,null,r,t,i,null),i.onAfterShadow(e,i,a,o,r,t,null)}}let h=i.children;for(let e=0,t=h.length;e<t;e++)r(h[e],a,o,s,l)}(s,l,f.camera,c,this.type)}!0!==f.isPointLightShadow&&3===this.type&&function(r,n){let a=t.update(m);d.defines.VSM_SAMPLES!==r.blurSamples&&(d.defines.VSM_SAMPLES=r.blurSamples,p.defines.VSM_SAMPLES=r.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===r.mapPass&&(r.mapPass=new Q(i.x,i.y)),d.uniforms.shadow_pass.value=r.map.texture,d.uniforms.resolution.value=r.mapSize,d.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(n,null,a,d,m,null),p.uniforms.shadow_pass.value=r.mapPass.texture,p.uniforms.resolution.value=r.mapSize,p.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(n,null,a,p,m,null)}(f,l),f.needsUpdate=!1}_=this.type,g.needsUpdate=!1,e.setRenderTarget(h,c,f)}}function ic(e){let t=new function(){let t=!1,r=new Z,n=null,i=new Z(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,a,o,s){!0===s&&(t*=o,n*=o,a*=o),r.set(t,n,a,o),!1===i.equals(r)&&(e.clearColor(t,n,a,o),i.copy(r))},reset:function(){t=!1,n=null,i.set(-1,0,0,0)}}},r=new function(){let t=!1,r=null,n=null,i=null;return{setTest:function(t){t?B(e.DEPTH_TEST):z(e.DEPTH_TEST)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}n=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,n=null,i=null}}},n=new function(){let t=!1,r=null,n=null,i=null,a=null,o=null,s=null,l=null,h=null;return{setTest:function(r){t||(r?B(e.STENCIL_TEST):z(e.STENCIL_TEST))},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,o){(n!==t||i!==r||a!==o)&&(e.stencilFunc(t,r,o),n=t,i=r,a=o)},setOp:function(t,r,n){(o!==t||s!==r||l!==n)&&(e.stencilOp(t,r,n),o=t,s=r,l=n)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,r=null,n=null,i=null,a=null,o=null,s=null,l=null,h=null}}},i=new WeakMap,a=new WeakMap,o={},s={},l=new WeakMap,h=[],u=null,c=!1,d=null,p=null,f=null,m=null,g=null,_=null,v=null,y=new tu(0,0,0),x=0,E=!1,M=null,S=null,b=null,T=null,w=null,A=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),R=!1,C=e.getParameter(e.VERSION);-1!==C.indexOf("WebGL")?R=parseFloat(/^WebGL (\d)/.exec(C)[1])>=1:-1!==C.indexOf("OpenGL ES")&&(R=parseFloat(/^OpenGL ES (\d)/.exec(C)[1])>=2);let P=null,L={},N=e.getParameter(e.SCISSOR_BOX),U=e.getParameter(e.VIEWPORT),I=new Z().fromArray(N),D=new Z().fromArray(U);function O(t,r,n,i){let a=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<n;o++)t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY?e.texImage3D(r,0,e.RGBA,1,1,i,0,e.RGBA,e.UNSIGNED_BYTE,a):e.texImage2D(r+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,a);return o}let F={};function B(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function z(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}F[e.TEXTURE_2D]=O(e.TEXTURE_2D,e.TEXTURE_2D,1),F[e.TEXTURE_CUBE_MAP]=O(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),F[e.TEXTURE_2D_ARRAY]=O(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),F[e.TEXTURE_3D]=O(e.TEXTURE_3D,e.TEXTURE_3D,1,1),t.setClear(0,0,0,1),r.setClear(1),n.setClear(0),B(e.DEPTH_TEST),r.setFunc(3),G(!1),W(1),B(e.CULL_FACE),V(0);let k={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};k[103]=e.MIN,k[104]=e.MAX;let H={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA,211:e.CONSTANT_COLOR,212:e.ONE_MINUS_CONSTANT_COLOR,213:e.CONSTANT_ALPHA,214:e.ONE_MINUS_CONSTANT_ALPHA};function V(t,r,n,i,a,o,s,l,h,u){if(0===t){!0===c&&(z(e.BLEND),c=!1);return}if(!1===c&&(B(e.BLEND),c=!0),5!==t){if(t!==d||u!==E){if((100!==p||100!==g)&&(e.blendEquation(e.FUNC_ADD),p=100,g=100),u)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}f=null,m=null,_=null,v=null,y.set(0,0,0),x=0,d=t,E=u}return}a=a||r,o=o||n,s=s||i,(r!==p||a!==g)&&(e.blendEquationSeparate(k[r],k[a]),p=r,g=a),(n!==f||i!==m||o!==_||s!==v)&&(e.blendFuncSeparate(H[n],H[i],H[o],H[s]),f=n,m=i,_=o,v=s),(!1===l.equals(y)||h!==x)&&(e.blendColor(l.r,l.g,l.b,h),y.copy(l),x=h),d=t,E=!1}function G(t){M!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),M=t)}function W(t){0!==t?(B(e.CULL_FACE),t!==S&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):z(e.CULL_FACE),S=t}function X(t,r,n){t?(B(e.POLYGON_OFFSET_FILL),(T!==r||w!==n)&&(e.polygonOffset(r,n),T=r,w=n)):z(e.POLYGON_OFFSET_FILL)}return{buffers:{color:t,depth:r,stencil:n},enable:B,disable:z,bindFramebuffer:function(t,r){return s[t]!==r&&(e.bindFramebuffer(t,r),s[t]=r,t===e.DRAW_FRAMEBUFFER&&(s[e.FRAMEBUFFER]=r),t===e.FRAMEBUFFER&&(s[e.DRAW_FRAMEBUFFER]=r),!0)},drawBuffers:function(t,r){let n=h,i=!1;if(t){void 0===(n=l.get(r))&&(n=[],l.set(r,n));let a=t.textures;if(n.length!==a.length||n[0]!==e.COLOR_ATTACHMENT0){for(let t=0,r=a.length;t<r;t++)n[t]=e.COLOR_ATTACHMENT0+t;n.length=a.length,i=!0}}else n[0]!==e.BACK&&(n[0]=e.BACK,i=!0);i&&e.drawBuffers(n)},useProgram:function(t){return u!==t&&(e.useProgram(t),u=t,!0)},setBlending:V,setMaterial:function(i,a){2===i.side?z(e.CULL_FACE):B(e.CULL_FACE);let o=1===i.side;a&&(o=!o),G(o),1===i.blending&&!1===i.transparent?V(0):V(i.blending,i.blendEquation,i.blendSrc,i.blendDst,i.blendEquationAlpha,i.blendSrcAlpha,i.blendDstAlpha,i.blendColor,i.blendAlpha,i.premultipliedAlpha),r.setFunc(i.depthFunc),r.setTest(i.depthTest),r.setMask(i.depthWrite),t.setMask(i.colorWrite);let s=i.stencilWrite;n.setTest(s),s&&(n.setMask(i.stencilWriteMask),n.setFunc(i.stencilFunc,i.stencilRef,i.stencilFuncMask),n.setOp(i.stencilFail,i.stencilZFail,i.stencilZPass)),X(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),!0===i.alphaToCoverage?B(e.SAMPLE_ALPHA_TO_COVERAGE):z(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:G,setCullFace:W,setLineWidth:function(t){t!==b&&(R&&e.lineWidth(t),b=t)},setPolygonOffset:X,setScissorTest:function(t){t?B(e.SCISSOR_TEST):z(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+A-1),P!==t&&(e.activeTexture(t),P=t)},bindTexture:function(t,r,n){void 0===n&&(n=null===P?e.TEXTURE0+A-1:P);let i=L[n];void 0===i&&(i={type:void 0,texture:void 0},L[n]=i),(i.type!==t||i.texture!==r)&&(P!==n&&(e.activeTexture(n),P=n),e.bindTexture(t,r||F[t]),i.type=t,i.texture=r)},unbindTexture:function(){let t=L[P];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,r){let n=a.get(r);void 0===n&&(n=new WeakMap,a.set(r,n));let i=n.get(t);void 0===i&&(i=e.getUniformBlockIndex(r,t.name),n.set(t,i))},uniformBlockBinding:function(t,r){let n=a.get(r).get(t);i.get(r)!==n&&(e.uniformBlockBinding(r,n,t.__bindingPointIndex),i.set(r,n))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===I.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),I.copy(t))},viewport:function(t){!1===D.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),D.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},P=null,L={},s={},l=new WeakMap,h=[],u=null,c=!1,d=null,p=null,f=null,m=null,g=null,_=null,v=null,y=new tu(0,0,0),x=0,E=!1,M=null,S=null,b=null,T=null,w=null,I.set(0,0,e.canvas.width,e.canvas.height),D.set(0,0,e.canvas.width,e.canvas.height),t.reset(),r.reset(),n.reset()}}}function id(e,t,r,n,i,a,o){let s;let l=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),u=new N,c=new WeakMap,d=new WeakMap,p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function f(e,t){return p?new OffscreenCanvas(e,t):O("canvas")}function m(e,t,r){let n=1,i=G(e);if((i.width>r||i.height>r)&&(n=r/Math.max(i.width,i.height)),n<1){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&e instanceof VideoFrame){let r=Math.floor(n*i.width),a=Math.floor(n*i.height);void 0===s&&(s=f(r,a));let o=t?f(r,a):s;return o.width=r,o.height=a,o.getContext("2d").drawImage(e,0,0,r,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+i.width+"x"+i.height+") to ("+r+"x"+a+")."),o}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+i.width+"x"+i.height+").")}return e}function g(e){return e.generateMipmaps&&1003!==e.minFilter&&1006!==e.minFilter}function v(t){e.generateMipmap(t)}function y(r,n,i,a,o=!1){if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}let s=n;if(n===e.RED&&(i===e.FLOAT&&(s=e.R32F),i===e.HALF_FLOAT&&(s=e.R16F),i===e.UNSIGNED_BYTE&&(s=e.R8)),n===e.RED_INTEGER&&(i===e.UNSIGNED_BYTE&&(s=e.R8UI),i===e.UNSIGNED_SHORT&&(s=e.R16UI),i===e.UNSIGNED_INT&&(s=e.R32UI),i===e.BYTE&&(s=e.R8I),i===e.SHORT&&(s=e.R16I),i===e.INT&&(s=e.R32I)),n===e.RG&&(i===e.FLOAT&&(s=e.RG32F),i===e.HALF_FLOAT&&(s=e.RG16F),i===e.UNSIGNED_BYTE&&(s=e.RG8)),n===e.RG_INTEGER&&(i===e.UNSIGNED_BYTE&&(s=e.RG8UI),i===e.UNSIGNED_SHORT&&(s=e.RG16UI),i===e.UNSIGNED_INT&&(s=e.RG32UI),i===e.BYTE&&(s=e.RG8I),i===e.SHORT&&(s=e.RG16I),i===e.INT&&(s=e.RG32I)),n===e.RGB&&i===e.UNSIGNED_INT_5_9_9_9_REV&&(s=e.RGB9_E5),n===e.RGBA){let t=o?x:V.getTransfer(a);i===e.FLOAT&&(s=e.RGBA32F),i===e.HALF_FLOAT&&(s=e.RGBA16F),i===e.UNSIGNED_BYTE&&(s=t===E?e.SRGB8_ALPHA8:e.RGBA8),i===e.UNSIGNED_SHORT_4_4_4_4&&(s=e.RGBA4),i===e.UNSIGNED_SHORT_5_5_5_1&&(s=e.RGB5_A1)}return(s===e.R16F||s===e.R32F||s===e.RG16F||s===e.RG32F||s===e.RGBA16F||s===e.RGBA32F)&&t.get("EXT_color_buffer_float"),s}function M(e,t){return!0===g(e)||e.isFramebufferTexture&&1003!==e.minFilter&&1006!==e.minFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function S(e){let t=e.target;t.removeEventListener("dispose",S),function(e){let t=n.get(e);if(void 0===t.__webglInit)return;let r=e.source,i=d.get(r);if(i){let n=i[t.__cacheKey];n.usedTimes--,0===n.usedTimes&&T(e),0===Object.keys(i).length&&d.delete(r)}n.remove(e)}(t),t.isVideoTexture&&c.delete(t)}function b(t){let r=t.target;r.removeEventListener("dispose",b),function(t){let r=n.get(t);if(t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(r.__webglFramebuffer[t]))for(let n=0;n<r.__webglFramebuffer[t].length;n++)e.deleteFramebuffer(r.__webglFramebuffer[t][n]);else e.deleteFramebuffer(r.__webglFramebuffer[t]);r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t])}else{if(Array.isArray(r.__webglFramebuffer))for(let t=0;t<r.__webglFramebuffer.length;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer);if(r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let t=0;t<r.__webglColorRenderbuffer.length;t++)r.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[t]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}let i=t.textures;for(let t=0,r=i.length;t<r;t++){let r=n.get(i[t]);r.__webglTexture&&(e.deleteTexture(r.__webglTexture),o.memory.textures--),n.remove(i[t])}n.remove(t)}(r)}function T(t){let r=n.get(t);e.deleteTexture(r.__webglTexture);let i=t.source,a=d.get(i);delete a[r.__cacheKey],o.memory.textures--}let w=0;function A(t,i){let a=n.get(t);if(t.isVideoTexture&&function(e){let t=o.render.frame;c.get(e)!==t&&(c.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){let e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===e.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{I(a,t,i);return}}r.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+i)}let R={1e3:e.REPEAT,1001:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},C={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,1006:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,1008:e.LINEAR_MIPMAP_LINEAR},P={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function L(r,a){if(1015===a.type&&!1===t.has("OES_texture_float_linear")&&(1006===a.magFilter||1007===a.magFilter||1005===a.magFilter||1008===a.magFilter||1006===a.minFilter||1007===a.minFilter||1005===a.minFilter||1008===a.minFilter)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),e.texParameteri(r,e.TEXTURE_WRAP_S,R[a.wrapS]),e.texParameteri(r,e.TEXTURE_WRAP_T,R[a.wrapT]),(r===e.TEXTURE_3D||r===e.TEXTURE_2D_ARRAY)&&e.texParameteri(r,e.TEXTURE_WRAP_R,R[a.wrapR]),e.texParameteri(r,e.TEXTURE_MAG_FILTER,C[a.magFilter]),e.texParameteri(r,e.TEXTURE_MIN_FILTER,C[a.minFilter]),a.compareFunction&&(e.texParameteri(r,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(r,e.TEXTURE_COMPARE_FUNC,P[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")&&1003!==a.magFilter&&(1005===a.minFilter||1008===a.minFilter)&&(1015!==a.type||!1!==t.has("OES_texture_float_linear"))&&(a.anisotropy>1||n.get(a).__currentAnisotropy)){let o=t.get("EXT_texture_filter_anisotropic");e.texParameterf(r,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy}}function U(t,r){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",S));let i=r.source,a=d.get(i);void 0===a&&(a={},d.set(i,a));let s=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(r);if(s!==t.__cacheKey){void 0===a[s]&&(a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,n=!0),a[s].usedTimes++;let i=a[t.__cacheKey];void 0!==i&&(a[t.__cacheKey].usedTimes--,0===i.usedTimes&&T(r)),t.__cacheKey=s,t.__webglTexture=a[s].texture}return n}function I(t,o,s){let l=e.TEXTURE_2D;(o.isDataArrayTexture||o.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),o.isData3DTexture&&(l=e.TEXTURE_3D);let h=U(t,o),u=o.source;r.bindTexture(l,t.__webglTexture,e.TEXTURE0+s);let c=n.get(u);if(u.version!==c.__version||!0===h){let t;r.activeTexture(e.TEXTURE0+s);let n=V.getPrimaries(V.workingColorSpace),d=""===o.colorSpace?null:V.getPrimaries(o.colorSpace),p=""===o.colorSpace||n===d?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,o.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,o.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);let f=m(o.image,!1,i.maxTextureSize);f=H(o,f);let _=a.convert(o.format,o.colorSpace),x=a.convert(o.type),E=y(o.internalFormat,_,x,o.colorSpace,o.isVideoTexture);L(l,o);let S=o.mipmaps,b=!0!==o.isVideoTexture&&36196!==E,T=void 0===c.__version||!0===h,w=u.dataReady,A=M(o,f);if(o.isDepthTexture)E=e.DEPTH_COMPONENT16,1015===o.type?E=e.DEPTH_COMPONENT32F:1014===o.type?E=e.DEPTH_COMPONENT24:1020===o.type&&(E=e.DEPTH24_STENCIL8),T&&(b?r.texStorage2D(e.TEXTURE_2D,1,E,f.width,f.height):r.texImage2D(e.TEXTURE_2D,0,E,f.width,f.height,0,_,x,null));else if(o.isDataTexture){if(S.length>0){b&&T&&r.texStorage2D(e.TEXTURE_2D,A,E,S[0].width,S[0].height);for(let n=0,i=S.length;n<i;n++)t=S[n],b?w&&r.texSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,_,x,t.data):r.texImage2D(e.TEXTURE_2D,n,E,t.width,t.height,0,_,x,t.data);o.generateMipmaps=!1}else b?(T&&r.texStorage2D(e.TEXTURE_2D,A,E,f.width,f.height),w&&r.texSubImage2D(e.TEXTURE_2D,0,0,0,f.width,f.height,_,x,f.data)):r.texImage2D(e.TEXTURE_2D,0,E,f.width,f.height,0,_,x,f.data)}else if(o.isCompressedTexture){if(o.isCompressedArrayTexture){b&&T&&r.texStorage3D(e.TEXTURE_2D_ARRAY,A,E,S[0].width,S[0].height,f.depth);for(let n=0,i=S.length;n<i;n++)t=S[n],1023!==o.format?null!==_?b?w&&r.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,0,t.width,t.height,f.depth,_,t.data,0,0):r.compressedTexImage3D(e.TEXTURE_2D_ARRAY,n,E,t.width,t.height,f.depth,0,t.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?w&&r.texSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,0,t.width,t.height,f.depth,_,x,t.data):r.texImage3D(e.TEXTURE_2D_ARRAY,n,E,t.width,t.height,f.depth,0,_,x,t.data)}else{b&&T&&r.texStorage2D(e.TEXTURE_2D,A,E,S[0].width,S[0].height);for(let n=0,i=S.length;n<i;n++)t=S[n],1023!==o.format?null!==_?b?w&&r.compressedTexSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,_,t.data):r.compressedTexImage2D(e.TEXTURE_2D,n,E,t.width,t.height,0,t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?w&&r.texSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,_,x,t.data):r.texImage2D(e.TEXTURE_2D,n,E,t.width,t.height,0,_,x,t.data)}}else if(o.isDataArrayTexture)b?(T&&r.texStorage3D(e.TEXTURE_2D_ARRAY,A,E,f.width,f.height,f.depth),w&&r.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,f.width,f.height,f.depth,_,x,f.data)):r.texImage3D(e.TEXTURE_2D_ARRAY,0,E,f.width,f.height,f.depth,0,_,x,f.data);else if(o.isData3DTexture)b?(T&&r.texStorage3D(e.TEXTURE_3D,A,E,f.width,f.height,f.depth),w&&r.texSubImage3D(e.TEXTURE_3D,0,0,0,0,f.width,f.height,f.depth,_,x,f.data)):r.texImage3D(e.TEXTURE_3D,0,E,f.width,f.height,f.depth,0,_,x,f.data);else if(o.isFramebufferTexture){if(T){if(b)r.texStorage2D(e.TEXTURE_2D,A,E,f.width,f.height);else{let t=f.width,n=f.height;for(let i=0;i<A;i++)r.texImage2D(e.TEXTURE_2D,i,E,t,n,0,_,x,null),t>>=1,n>>=1}}}else if(S.length>0){if(b&&T){let t=G(S[0]);r.texStorage2D(e.TEXTURE_2D,A,E,t.width,t.height)}for(let n=0,i=S.length;n<i;n++)t=S[n],b?w&&r.texSubImage2D(e.TEXTURE_2D,n,0,0,_,x,t):r.texImage2D(e.TEXTURE_2D,n,E,_,x,t);o.generateMipmaps=!1}else if(b){if(T){let t=G(f);r.texStorage2D(e.TEXTURE_2D,A,E,t.width,t.height)}w&&r.texSubImage2D(e.TEXTURE_2D,0,0,0,_,x,f)}else r.texImage2D(e.TEXTURE_2D,0,E,_,x,f);g(o)&&v(l),c.__version=u.version,o.onUpdate&&o.onUpdate(o)}t.__version=o.version}function D(t,i,o,s,h,u){let c=a.convert(o.format,o.colorSpace),d=a.convert(o.type),p=y(o.internalFormat,c,d,o.colorSpace);if(!n.get(i).__hasExternalTextures){let t=Math.max(1,i.width>>u),n=Math.max(1,i.height>>u);h===e.TEXTURE_3D||h===e.TEXTURE_2D_ARRAY?r.texImage3D(h,u,p,t,n,i.depth,0,c,d,null):r.texImage2D(h,u,p,t,n,0,c,d,null)}r.bindFramebuffer(e.FRAMEBUFFER,t),k(i)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,s,h,n.get(o).__webglTexture,0,z(i)):(h===e.TEXTURE_2D||h>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&h<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,s,h,n.get(o).__webglTexture,u),r.bindFramebuffer(e.FRAMEBUFFER,null)}function F(t,r,n){if(e.bindRenderbuffer(e.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer){let i=e.DEPTH_COMPONENT24;if(n||k(r)){let t=r.depthTexture;t&&t.isDepthTexture&&(1015===t.type?i=e.DEPTH_COMPONENT32F:1014===t.type&&(i=e.DEPTH_COMPONENT24));let n=z(r);k(r)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,n,i,r.width,r.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,n,i,r.width,r.height)}else e.renderbufferStorage(e.RENDERBUFFER,i,r.width,r.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(r.depthBuffer&&r.stencilBuffer){let i=z(r);n&&!1===k(r)?e.renderbufferStorageMultisample(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,r.width,r.height):k(r)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,r.width,r.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{let t=r.textures;for(let i=0;i<t.length;i++){let o=t[i],s=a.convert(o.format,o.colorSpace),h=a.convert(o.type),u=y(o.internalFormat,s,h,o.colorSpace),c=z(r);n&&!1===k(r)?e.renderbufferStorageMultisample(e.RENDERBUFFER,c,u,r.width,r.height):k(r)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,c,u,r.width,r.height):e.renderbufferStorage(e.RENDERBUFFER,u,r.width,r.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function B(t){let i=n.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(r.bindFramebuffer(e.FRAMEBUFFER,t),!(i.depthTexture&&i.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),A(i.depthTexture,0);let a=n.get(i.depthTexture).__webglTexture,o=z(i);if(1026===i.depthTexture.format)k(i)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else if(1027===i.depthTexture.format)k(i)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0);else throw Error("Unknown depthTexture format")}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(let n=0;n<6;n++)r.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer[n]),i.__webglDepthbuffer[n]=e.createRenderbuffer(),F(i.__webglDepthbuffer[n],t,!1)}else r.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),F(i.__webglDepthbuffer,t,!1);r.bindFramebuffer(e.FRAMEBUFFER,null)}function z(e){return Math.min(i.maxSamples,e.samples)}function k(e){let r=n.get(e);return e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==r.__useRenderToTexture}function H(e,t){let r=e.colorSpace,n=e.format,i=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||r!==_&&""!==r&&(V.getTransfer(r)===E?(1023!==n||1009!==i)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",r)),t}function G(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?(u.width=e.naturalWidth||e.width,u.height=e.naturalHeight||e.height):"undefined"!=typeof VideoFrame&&e instanceof VideoFrame?(u.width=e.displayWidth,u.height=e.displayHeight):(u.width=e.width,u.height=e.height),u}this.allocateTextureUnit=function(){let e=w;return e>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+i.maxTextures),w+=1,e},this.resetTextureUnits=function(){w=0},this.setTexture2D=A,this.setTexture2DArray=function(t,i){let a=n.get(t);if(t.version>0&&a.__version!==t.version){I(a,t,i);return}r.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+i)},this.setTexture3D=function(t,i){let a=n.get(t);if(t.version>0&&a.__version!==t.version){I(a,t,i);return}r.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+i)},this.setTextureCube=function(t,o){let s=n.get(t);if(t.version>0&&s.__version!==t.version){(function(t,o,s){if(6!==o.image.length)return;let l=U(t,o),h=o.source;r.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+s);let u=n.get(h);if(h.version!==u.__version||!0===l){let t;r.activeTexture(e.TEXTURE0+s);let n=V.getPrimaries(V.workingColorSpace),c=""===o.colorSpace?null:V.getPrimaries(o.colorSpace),d=""===o.colorSpace||n===c?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,o.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,o.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,o.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=o.isCompressedTexture||o.image[0].isCompressedTexture,f=o.image[0]&&o.image[0].isDataTexture,_=[];for(let e=0;e<6;e++)p||f?_[e]=f?o.image[e].image:o.image[e]:_[e]=m(o.image[e],!0,i.maxCubemapSize),_[e]=H(o,_[e]);let x=_[0],E=a.convert(o.format,o.colorSpace),S=a.convert(o.type),b=y(o.internalFormat,E,S,o.colorSpace),T=!0!==o.isVideoTexture,w=void 0===u.__version||!0===l,A=h.dataReady,R=M(o,x);if(L(e.TEXTURE_CUBE_MAP,o),p){T&&w&&r.texStorage2D(e.TEXTURE_CUBE_MAP,R,b,x.width,x.height);for(let n=0;n<6;n++){t=_[n].mipmaps;for(let i=0;i<t.length;i++){let a=t[i];1023!==o.format?null!==E?T?A&&r.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i,0,0,a.width,a.height,E,a.data):r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i,b,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):T?A&&r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i,0,0,a.width,a.height,E,S,a.data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i,b,a.width,a.height,0,E,S,a.data)}}}else{if(t=o.mipmaps,T&&w){t.length>0&&R++;let n=G(_[0]);r.texStorage2D(e.TEXTURE_CUBE_MAP,R,b,n.width,n.height)}for(let n=0;n<6;n++)if(f){T?A&&r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,_[n].width,_[n].height,E,S,_[n].data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,b,_[n].width,_[n].height,0,E,S,_[n].data);for(let i=0;i<t.length;i++){let a=t[i].image[n].image;T?A&&r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,0,0,a.width,a.height,E,S,a.data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,b,a.width,a.height,0,E,S,a.data)}}else{T?A&&r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,E,S,_[n]):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,b,E,S,_[n]);for(let i=0;i<t.length;i++){let a=t[i];T?A&&r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,0,0,E,S,a.image[n]):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,b,E,S,a.image[n])}}}g(o)&&v(e.TEXTURE_CUBE_MAP),u.__version=h.version,o.onUpdate&&o.onUpdate(o)}t.__version=o.version})(s,t,o);return}r.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture,e.TEXTURE0+o)},this.rebindTextures=function(t,r,i){let a=n.get(t);void 0!==r&&D(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==i&&B(t)},this.setupRenderTarget=function(t){let i=t.texture,s=n.get(t),l=n.get(i);t.addEventListener("dispose",b);let h=t.textures,u=!0===t.isWebGLCubeRenderTarget,c=h.length>1;if(!c&&(void 0===l.__webglTexture&&(l.__webglTexture=e.createTexture()),l.__version=i.version,o.memory.textures++),u){s.__webglFramebuffer=[];for(let t=0;t<6;t++)if(i.mipmaps&&i.mipmaps.length>0){s.__webglFramebuffer[t]=[];for(let r=0;r<i.mipmaps.length;r++)s.__webglFramebuffer[t][r]=e.createFramebuffer()}else s.__webglFramebuffer[t]=e.createFramebuffer()}else{if(i.mipmaps&&i.mipmaps.length>0){s.__webglFramebuffer=[];for(let t=0;t<i.mipmaps.length;t++)s.__webglFramebuffer[t]=e.createFramebuffer()}else s.__webglFramebuffer=e.createFramebuffer();if(c)for(let t=0,r=h.length;t<r;t++){let r=n.get(h[t]);void 0===r.__webglTexture&&(r.__webglTexture=e.createTexture(),o.memory.textures++)}if(t.samples>0&&!1===k(t)){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=[],r.bindFramebuffer(e.FRAMEBUFFER,s.__webglMultisampledFramebuffer);for(let r=0;r<h.length;r++){let n=h[r];s.__webglColorRenderbuffer[r]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,s.__webglColorRenderbuffer[r]);let i=a.convert(n.format,n.colorSpace),o=a.convert(n.type),l=y(n.internalFormat,i,o,n.colorSpace,!0===t.isXRRenderTarget),u=z(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+r,e.RENDERBUFFER,s.__webglColorRenderbuffer[r])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),F(s.__webglDepthRenderbuffer,t,!0)),r.bindFramebuffer(e.FRAMEBUFFER,null)}}if(u){r.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture),L(e.TEXTURE_CUBE_MAP,i);for(let r=0;r<6;r++)if(i.mipmaps&&i.mipmaps.length>0)for(let n=0;n<i.mipmaps.length;n++)D(s.__webglFramebuffer[r][n],t,i,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+r,n);else D(s.__webglFramebuffer[r],t,i,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+r,0);g(i)&&v(e.TEXTURE_CUBE_MAP),r.unbindTexture()}else if(c){for(let i=0,a=h.length;i<a;i++){let a=h[i],o=n.get(a);r.bindTexture(e.TEXTURE_2D,o.__webglTexture),L(e.TEXTURE_2D,a),D(s.__webglFramebuffer,t,a,e.COLOR_ATTACHMENT0+i,e.TEXTURE_2D,0),g(a)&&v(e.TEXTURE_2D)}r.unbindTexture()}else{let n=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(n=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),r.bindTexture(n,l.__webglTexture),L(n,i),i.mipmaps&&i.mipmaps.length>0)for(let r=0;r<i.mipmaps.length;r++)D(s.__webglFramebuffer[r],t,i,e.COLOR_ATTACHMENT0,n,r);else D(s.__webglFramebuffer,t,i,e.COLOR_ATTACHMENT0,n,0);g(i)&&v(n),r.unbindTexture()}t.depthBuffer&&B(t)},this.updateRenderTargetMipmap=function(t){let i=t.textures;for(let a=0,o=i.length;a<o;a++){let o=i[a];if(g(o)){let i=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=n.get(o).__webglTexture;r.bindTexture(i,a),v(i),r.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.samples>0&&!1===k(t)){let i=t.textures,a=t.width,o=t.height,s=e.COLOR_BUFFER_BIT,l=[],u=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,c=n.get(t),d=i.length>1;if(d)for(let t=0;t<i.length;t++)r.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),r.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);r.bindFramebuffer(e.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer),r.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let r=0;r<i.length;r++){l.push(e.COLOR_ATTACHMENT0+r),t.depthBuffer&&l.push(u);let p=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===p&&(t.depthBuffer&&(s|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&!0!==c.__isTransmissionRenderTarget&&(s|=e.STENCIL_BUFFER_BIT)),d&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,c.__webglColorRenderbuffer[r]),!0===p&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[u]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[u])),d){let t=n.get(i[r]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,s,e.NEAREST),h&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}if(r.bindFramebuffer(e.READ_FRAMEBUFFER,null),r.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),d)for(let t=0;t<i.length;t++){r.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,c.__webglColorRenderbuffer[t]);let a=n.get(i[t]).__webglTexture;r.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}r.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=B,this.setupFrameBufferTexture=D,this.useMultisampledRTT=k}function ip(e,t){return{convert:function(r,n=""){let i;let a=V.getTransfer(n);if(1009===r)return e.UNSIGNED_BYTE;if(1017===r)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===r)return e.UNSIGNED_SHORT_5_5_5_1;if(35902===r)return e.UNSIGNED_INT_5_9_9_9_REV;if(1010===r)return e.BYTE;if(1011===r)return e.SHORT;if(1012===r)return e.UNSIGNED_SHORT;if(1013===r)return e.INT;if(1014===r)return e.UNSIGNED_INT;if(1015===r)return e.FLOAT;if(1016===r)return e.HALF_FLOAT;if(1021===r)return e.ALPHA;if(1022===r)return e.RGB;if(1023===r)return e.RGBA;if(1024===r)return e.LUMINANCE;if(1025===r)return e.LUMINANCE_ALPHA;if(1026===r)return e.DEPTH_COMPONENT;if(1027===r)return e.DEPTH_STENCIL;if(1028===r)return e.RED;if(1029===r)return e.RED_INTEGER;if(1030===r)return e.RG;if(1031===r)return e.RG_INTEGER;if(1033===r)return e.RGBA_INTEGER;if(33776===r||33777===r||33778===r||33779===r){if(a===E){if(null===(i=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===r)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===r)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===r)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===r)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(i=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===r)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===r)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===r)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===r)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(35840===r||35841===r||35842===r||35843===r){if(null===(i=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===r)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===r)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===r)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===r)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===r)return null!==(i=t.get("WEBGL_compressed_texture_etc1"))?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===r||37496===r){if(null===(i=t.get("WEBGL_compressed_texture_etc")))return null;if(37492===r)return a===E?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(37496===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(37808===r||37809===r||37810===r||37811===r||37812===r||37813===r||37814===r||37815===r||37816===r||37817===r||37818===r||37819===r||37820===r||37821===r){if(null===(i=t.get("WEBGL_compressed_texture_astc")))return null;if(37808===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===r)return a===E?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===r||36494===r||36495===r){if(null===(i=t.get("EXT_texture_compression_bptc")))return null;if(36492===r)return a===E?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===r)return i.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===r)return i.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===r||36284===r||36285===r||36286===r){if(null===(i=t.get("EXT_texture_compression_rgtc")))return null;if(36492===r)return i.COMPRESSED_RED_RGTC1_EXT;if(36284===r)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===r)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===r)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return 1020===r?e.UNSIGNED_INT_24_8:void 0!==e[r]?e[r]:null}}}class im extends t6{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ig extends e4{constructor(){super(),this.isGroup=!0,this.type="Group"}}const i_={type:"move"};class iv{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ig,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ig,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new er,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new er),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ig,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new er,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new er),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let r of e.hand.values())this._getHandJoint(t,r)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,r){let n=null,i=null,a=null,o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let n of(a=!0,e.hand.values())){let e=t.getJointPose(n,r),i=this._getHandJoint(l,n);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}let n=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],o=n.position.distanceTo(i.position);l.inputState.pinching&&o>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&o<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,r))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1);null!==o&&(null===(n=t.getPose(e.targetRaySpace,r))&&null!==i&&(n=i),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(i_)))}return null!==o&&(o.visible=null!==n),null!==s&&(s.visible=null!==i),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){let r=new ig;r.matrixAutoUpdate=!1,r.visible=!1,e.joints[t.jointName]=r,e.add(r)}return e.joints[t.jointName]}}const iy=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,ix=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class iE{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,r){if(null===this.texture){let n=new $;e.properties.get(n).__webglTexture=t.texture,(t.depthNear!=r.depthNear||t.depthFar!=r.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}render(e,t){if(null!==this.texture){if(null===this.mesh){let e=t.cameras[0].viewport,r=new t1({vertexShader:iy,fragmentShader:ix,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new tY(new rh(20,20),r)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class iM extends b{constructor(e,t){super();let r=this,n=null,i=1,a=null,o="local-floor",s=1,l=null,h=null,u=null,c=null,d=null,p=null,f=new iE,m=t.getContextAttributes(),g=null,_=null,v=[],y=[],x=new N,E=null,M=new t6;M.layers.enable(1),M.viewport=new Z;let S=new t6;S.layers.enable(2),S.viewport=new Z;let b=[M,S],T=new im;T.layers.enable(1),T.layers.enable(2);let w=null,R=null;function C(e){let t=y.indexOf(e.inputSource);if(-1===t)return;let r=v[t];void 0!==r&&(r.update(e.inputSource,e.frame,l||a),r.dispatchEvent({type:e.type,data:e.inputSource}))}function P(){n.removeEventListener("select",C),n.removeEventListener("selectstart",C),n.removeEventListener("selectend",C),n.removeEventListener("squeeze",C),n.removeEventListener("squeezestart",C),n.removeEventListener("squeezeend",C),n.removeEventListener("end",P),n.removeEventListener("inputsourceschange",L);for(let e=0;e<v.length;e++){let t=y[e];null!==t&&(y[e]=null,v[e].disconnect(t))}w=null,R=null,f.reset(),e.setRenderTarget(g),d=null,c=null,u=null,n=null,_=null,F.stop(),r.isPresenting=!1,e.setPixelRatio(E),e.setSize(x.width,x.height,!1),r.dispatchEvent({type:"sessionend"})}function L(e){for(let t=0;t<e.removed.length;t++){let r=e.removed[t],n=y.indexOf(r);n>=0&&(y[n]=null,v[n].disconnect(r))}for(let t=0;t<e.added.length;t++){let r=e.added[t],n=y.indexOf(r);if(-1===n){for(let e=0;e<v.length;e++){if(e>=y.length){y.push(r),n=e;break}if(null===y[e]){y[e]=r,n=e;break}}if(-1===n)break}let i=v[n];i&&i.connect(r)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=v[e];return void 0===t&&(t=new iv,v[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=v[e];return void 0===t&&(t=new iv,v[e]=t),t.getGripSpace()},this.getHand=function(e){let t=v[e];return void 0===t&&(t=new iv,v[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==c?c:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(h){if(null!==(n=h)){if(g=e.getRenderTarget(),n.addEventListener("select",C),n.addEventListener("selectstart",C),n.addEventListener("selectend",C),n.addEventListener("squeeze",C),n.addEventListener("squeezestart",C),n.addEventListener("squeezeend",C),n.addEventListener("end",P),n.addEventListener("inputsourceschange",L),!0!==m.xrCompatible&&await t.makeXRCompatible(),E=e.getPixelRatio(),e.getSize(x),void 0===n.renderState.layers){let r={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(n,t,r),n.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),_=new Q(d.framebufferWidth,d.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let r=null,a=null,o=null;m.depth&&(o=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,r=m.stencil?1027:1026,a=m.stencil?1020:1014);let s={colorFormat:t.RGBA8,depthFormat:o,scaleFactor:i};c=(u=new XRWebGLBinding(n,t)).createProjectionLayer(s),n.updateRenderState({layers:[c]}),e.setPixelRatio(1),e.setSize(c.textureWidth,c.textureHeight,!1),_=new Q(c.textureWidth,c.textureHeight,{format:1023,type:1009,depthTexture:new rj(c.textureWidth,c.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,r),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0}),e.properties.get(_).__ignoreDepthValues=c.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(s),l=null,a=await n.requestReferenceSpace(o),F.setContext(n),F.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==n)return n.environmentBlendMode};let U=new er,I=new er;function D(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===n)return;null!==f.texture&&(e.near=f.depthNear,e.far=f.depthFar),T.near=S.near=M.near=e.near,T.far=S.far=M.far=e.far,(w!==T.near||R!==T.far)&&(n.updateRenderState({depthNear:T.near,depthFar:T.far}),w=T.near,R=T.far,M.near=w,M.far=R,S.near=w,S.far=R,M.updateProjectionMatrix(),S.updateProjectionMatrix(),e.updateProjectionMatrix());let t=e.parent,r=T.cameras;D(T,t);for(let e=0;e<r.length;e++)D(r[e],t);2===r.length?function(e,t,r){U.setFromMatrixPosition(t.matrixWorld),I.setFromMatrixPosition(r.matrixWorld);let n=U.distanceTo(I),i=t.projectionMatrix.elements,a=r.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],h=(i[9]-1)/i[5],u=(i[8]-1)/i[0],c=(a[8]+1)/a[0],d=n/(-u+c),p=-(d*u);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=o+d,m=s+d;e.projectionMatrix.makePerspective(o*u-p,o*c+(n-p),l*s/m*f,h*s/m*f,f,m),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(T,M,S):T.projectionMatrix.copy(M.projectionMatrix),null===t?e.matrix.copy(T.matrixWorld):(e.matrix.copy(t.matrixWorld),e.matrix.invert(),e.matrix.multiply(T.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(T.projectionMatrix),e.projectionMatrixInverse.copy(T.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*A*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)},this.getCamera=function(){return T},this.getFoveation=function(){if(null!==c||null!==d)return s},this.setFoveation=function(e){s=e,null!==c&&(c.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==f.texture};let O=null,F=new rs;F.setAnimationLoop(function(t,i){if(h=i.getViewerPose(l||a),p=i,null!==h){let t=h.views;null!==d&&(e.setRenderTargetFramebuffer(_,d.framebuffer),e.setRenderTarget(_));let r=!1;t.length!==T.cameras.length&&(T.cameras.length=0,r=!0);for(let n=0;n<t.length;n++){let i=t[n],a=null;if(null!==d)a=d.getViewport(i);else{let t=u.getViewSubImage(c,i);a=t.viewport,0===n&&(e.setRenderTargetTextures(_,t.colorTexture,c.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(_))}let o=b[n];void 0===o&&((o=new t6).layers.enable(n),o.viewport=new Z,b[n]=o),o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.quaternion,o.scale),o.projectionMatrix.fromArray(i.projectionMatrix),o.projectionMatrixInverse.copy(o.projectionMatrix).invert(),o.viewport.set(a.x,a.y,a.width,a.height),0===n&&(T.matrix.copy(o.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),!0===r&&T.cameras.push(o)}let i=n.enabledFeatures;if(i&&i.includes("depth-sensing")){let r=u.getDepthInformation(t[0]);r&&r.isValid&&r.texture&&f.init(e,r,n.renderState)}}for(let e=0;e<v.length;e++){let t=y[e],r=v[e];null!==t&&void 0!==r&&r.update(t,i,l||a)}f.render(e,T),O&&O(t,i),i.detectedPlanes&&r.dispatchEvent({type:"planesdetected",data:i}),p=null}),this.setAnimationLoop=function(e){O=e},this.dispose=function(){}}}const iS=new eH,ib=new eL;function iT(e,t){function r(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function n(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map,r(i.map,n.mapTransform)),i.alphaMap&&(n.alphaMap.value=i.alphaMap,r(i.alphaMap,n.alphaMapTransform)),i.bumpMap&&(n.bumpMap.value=i.bumpMap,r(i.bumpMap,n.bumpMapTransform),n.bumpScale.value=i.bumpScale,1===i.side&&(n.bumpScale.value*=-1)),i.normalMap&&(n.normalMap.value=i.normalMap,r(i.normalMap,n.normalMapTransform),n.normalScale.value.copy(i.normalScale),1===i.side&&n.normalScale.value.negate()),i.displacementMap&&(n.displacementMap.value=i.displacementMap,r(i.displacementMap,n.displacementMapTransform),n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap,r(i.emissiveMap,n.emissiveMapTransform)),i.specularMap&&(n.specularMap.value=i.specularMap,r(i.specularMap,n.specularMapTransform)),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);let a=t.get(i),o=a.envMap,s=a.envMapRotation;if(o&&(n.envMap.value=o,iS.copy(s),iS.x*=-1,iS.y*=-1,iS.z*=-1,o.isCubeTexture&&!1===o.isRenderTargetTexture&&(iS.y*=-1,iS.z*=-1),n.envMapRotation.value.setFromMatrix4(ib.makeRotationFromEuler(iS)),n.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap){n.lightMap.value=i.lightMap;let t=!0===e._useLegacyLights?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*t,r(i.lightMap,n.lightMapTransform)}i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity,r(i.aoMap,n.aoMapTransform))}return{refreshFogUniforms:function(t,r){r.color.getRGB(t.fogColor.value,tQ(e)),r.isFog?(t.fogNear.value=r.near,t.fogFar.value=r.far):r.isFogExp2&&(t.fogDensity.value=r.density)},refreshMaterialUniforms:function(e,i,a,o,s){i.isMeshBasicMaterial?n(e,i):i.isMeshLambertMaterial?n(e,i):i.isMeshToonMaterial?(n(e,i),i.gradientMap&&(e.gradientMap.value=i.gradientMap)):i.isMeshPhongMaterial?(n(e,i),e.specular.value.copy(i.specular),e.shininess.value=Math.max(i.shininess,1e-4)):i.isMeshStandardMaterial?(n(e,i),e.metalness.value=i.metalness,i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap,r(i.metalnessMap,e.metalnessMapTransform)),e.roughness.value=i.roughness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap,r(i.roughnessMap,e.roughnessMapTransform)),i.envMap&&(e.envMapIntensity.value=i.envMapIntensity),i.isMeshPhysicalMaterial&&(e.ior.value=i.ior,i.sheen>0&&(e.sheenColor.value.copy(i.sheenColor).multiplyScalar(i.sheen),e.sheenRoughness.value=i.sheenRoughness,i.sheenColorMap&&(e.sheenColorMap.value=i.sheenColorMap,r(i.sheenColorMap,e.sheenColorMapTransform)),i.sheenRoughnessMap&&(e.sheenRoughnessMap.value=i.sheenRoughnessMap,r(i.sheenRoughnessMap,e.sheenRoughnessMapTransform))),i.clearcoat>0&&(e.clearcoat.value=i.clearcoat,e.clearcoatRoughness.value=i.clearcoatRoughness,i.clearcoatMap&&(e.clearcoatMap.value=i.clearcoatMap,r(i.clearcoatMap,e.clearcoatMapTransform)),i.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=i.clearcoatRoughnessMap,r(i.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),i.clearcoatNormalMap&&(e.clearcoatNormalMap.value=i.clearcoatNormalMap,r(i.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),1===i.side&&e.clearcoatNormalScale.value.negate())),i.iridescence>0&&(e.iridescence.value=i.iridescence,e.iridescenceIOR.value=i.iridescenceIOR,e.iridescenceThicknessMinimum.value=i.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=i.iridescenceThicknessRange[1],i.iridescenceMap&&(e.iridescenceMap.value=i.iridescenceMap,r(i.iridescenceMap,e.iridescenceMapTransform)),i.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=i.iridescenceThicknessMap,r(i.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),i.transmission>0&&(e.transmission.value=i.transmission,e.transmissionSamplerMap.value=s.texture,e.transmissionSamplerSize.value.set(s.width,s.height),i.transmissionMap&&(e.transmissionMap.value=i.transmissionMap,r(i.transmissionMap,e.transmissionMapTransform)),e.thickness.value=i.thickness,i.thicknessMap&&(e.thicknessMap.value=i.thicknessMap,r(i.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=i.attenuationDistance,e.attenuationColor.value.copy(i.attenuationColor)),i.anisotropy>0&&(e.anisotropyVector.value.set(i.anisotropy*Math.cos(i.anisotropyRotation),i.anisotropy*Math.sin(i.anisotropyRotation)),i.anisotropyMap&&(e.anisotropyMap.value=i.anisotropyMap,r(i.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=i.specularIntensity,e.specularColor.value.copy(i.specularColor),i.specularColorMap&&(e.specularColorMap.value=i.specularColorMap,r(i.specularColorMap,e.specularColorMapTransform)),i.specularIntensityMap&&(e.specularIntensityMap.value=i.specularIntensityMap,r(i.specularIntensityMap,e.specularIntensityMapTransform)))):i.isMeshMatcapMaterial?(n(e,i),i.matcap&&(e.matcap.value=i.matcap)):i.isMeshDepthMaterial?n(e,i):i.isMeshDistanceMaterial?(n(e,i),function(e,r){let n=t.get(r).light;e.referencePosition.value.setFromMatrixPosition(n.matrixWorld),e.nearDistance.value=n.shadow.camera.near,e.farDistance.value=n.shadow.camera.far}(e,i)):i.isMeshNormalMaterial?n(e,i):i.isLineBasicMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,i.map&&(e.map.value=i.map,r(i.map,e.mapTransform)),i.isLineDashedMaterial&&(e.dashSize.value=i.dashSize,e.totalSize.value=i.dashSize+i.gapSize,e.scale.value=i.scale)):i.isPointsMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,e.size.value=i.size*a,e.scale.value=.5*o,i.map&&(e.map.value=i.map,r(i.map,e.uvTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,r(i.alphaMap,e.alphaMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest)):i.isSpriteMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,e.rotation.value=i.rotation,i.map&&(e.map.value=i.map,r(i.map,e.mapTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,r(i.alphaMap,e.alphaMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest)):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function iw(e,t,r,n){let i={},a={},o=[],s=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function l(e){let t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function h(t){let r=t.target;r.removeEventListener("dispose",h);let n=o.indexOf(r.__bindingPointIndex);o.splice(n,1),e.deleteBuffer(i[r.id]),delete i[r.id],delete a[r.id]}return{bind:function(e,t){let r=t.program;n.uniformBlockBinding(e,r)},update:function(r,u){let c=i[r.id];void 0===c&&(function(e){let t=e.uniforms,r=0;for(let e=0,n=t.length;e<n;e++){let n=Array.isArray(t[e])?t[e]:[t[e]];for(let e=0,t=n.length;e<t;e++){let t=n[e],i=Array.isArray(t.value)?t.value:[t.value];for(let e=0,n=i.length;e<n;e++){let n=l(i[e]),a=r%16;0!==a&&16-a<n.boundary&&(r+=16-a),t.__data=new Float32Array(n.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=r,r+=n.storage}}}let n=r%16;n>0&&(r+=16-n),e.__size=r,e.__cache={}}(r),c=function(t){let r=function(){for(let e=0;e<s;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=r;let n=e.createBuffer(),i=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,n),e.bufferData(e.UNIFORM_BUFFER,i,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,r,n),n}(r),i[r.id]=c,r.addEventListener("dispose",h));let d=u.program;n.updateUBOMapping(r,d);let p=t.render.frame;a[r.id]!==p&&(function(t){let r=i[t.id],n=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,r);for(let t=0,r=n.length;t<r;t++){let r=Array.isArray(n[t])?n[t]:[n[t]];for(let n=0,i=r.length;n<i;n++){let i=r[n];if(!0===function(e,t,r,n){let i=e.value,a=t+"_"+r;if(void 0===n[a])return"number"==typeof i||"boolean"==typeof i?n[a]=i:n[a]=i.clone(),!0;{let e=n[a];if("number"==typeof i||"boolean"==typeof i){if(e!==i)return n[a]=i,!0}else if(!1===e.equals(i))return e.copy(i),!0}return!1}(i,t,n,a)){let t=i.__offset,r=Array.isArray(i.value)?i.value:[i.value],n=0;for(let a=0;a<r.length;a++){let o=r[a],s=l(o);"number"==typeof o||"boolean"==typeof o?(i.__data[0]=o,e.bufferSubData(e.UNIFORM_BUFFER,t+n,i.__data)):o.isMatrix3?(i.__data[0]=o.elements[0],i.__data[1]=o.elements[1],i.__data[2]=o.elements[2],i.__data[3]=0,i.__data[4]=o.elements[3],i.__data[5]=o.elements[4],i.__data[6]=o.elements[5],i.__data[7]=0,i.__data[8]=o.elements[6],i.__data[9]=o.elements[7],i.__data[10]=o.elements[8],i.__data[11]=0):(o.toArray(i.__data,n),n+=s.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,i.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(r),a[r.id]=p)},dispose:function(){for(let t in i)e.deleteBuffer(i[t]);o=[],i={},a={}}}}class iA{constructor(e={}){let t,r,n,i,a,o,s,l,h,u,c,d,p,f,m,v,y,x,E,M,S,b,T,w,A;let{canvas:R=function(){let e=O("canvas");return e.style.display="block",e}(),context:C=null,depth:P=!0,stencil:L=!1,alpha:U=!1,antialias:I=!1,premultipliedAlpha:D=!0,preserveDrawingBuffer:F=!1,powerPreference:B="default",failIfMajorPerformanceCaveat:z=!1}=e;if(this.isWebGLRenderer=!0,null!==C){if("undefined"!=typeof WebGLRenderingContext&&C instanceof WebGLRenderingContext)throw Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");t=C.getContextAttributes().alpha}else t=U;let k=new Uint32Array(4),H=new Int32Array(4),V=null,G=null,W=[],X=[];this.domElement=R,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=g,this._useLegacyLights=!1,this.toneMapping=0,this.toneMappingExposure=1;let j=this,q=!1,Y=0,J=0,$=null,K=-1,ee=null,et=new Z,en=new Z,ei=null,ea=new tu(0),eo=0,es=R.width,el=R.height,eh=1,eu=null,ec=null,ed=new Z(0,0,es,el),ep=new Z(0,0,es,el),ef=!1,em=new ro,eg=!1,e_=!1,ev=new eL,ey=new N,ex=new er,eE={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function eM(){return null===$?eh:1}let eS=C;function eb(e,t){let r=R.getContext(e,t);return null!==r?r:null}try{if("setAttribute"in R&&R.setAttribute("data-engine","three.js r163"),R.addEventListener("webglcontextlost",eA,!1),R.addEventListener("webglcontextrestored",eR,!1),R.addEventListener("webglcontextcreationerror",eC,!1),null===eS){let e="webgl2";if(eS=eb(e,{alpha:!0,depth:P,stencil:L,antialias:I,premultipliedAlpha:D,preserveDrawingBuffer:F,powerPreference:B,failIfMajorPerformanceCaveat:z}),null===eS){if(eb(e))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function eT(){(r=new rk(eS)).init(),n=new ry(eS,r,e),T=new ip(eS,r),i=new ic(eS),a=new rG(eS),o=new n6,s=new id(eS,r,i,o,n,T,a),l=new rE(j),h=new rz(j),u=new rl(eS),w=new r_(eS,u),c=new rH(eS,u,a,w),d=new rX(eS,c,u,a),M=new rW(eS,n,s),y=new rx(o),p=new n5(j,l,h,r,n,w,y),f=new iT(j,o),m=new ie,v=new is(r),E=new rg(j,l,h,i,d,t,D),x=new iu(j,d,n),A=new iw(eS,a,n,i),S=new rv(eS,r,a),b=new rV(eS,r,a),a.programs=p.programs,j.capabilities=n,j.extensions=r,j.properties=o,j.renderLists=m,j.shadowMap=x,j.state=i,j.info=a}eT();let ew=new iM(j,eS);function eA(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),q=!0}function eR(){console.log("THREE.WebGLRenderer: Context Restored."),q=!1;let e=a.autoReset,t=x.enabled,r=x.autoUpdate,n=x.needsUpdate,i=x.type;eT(),a.autoReset=e,x.enabled=t,x.autoUpdate=r,x.needsUpdate=n,x.type=i}function eC(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eP(e){let t=e.target;t.removeEventListener("dispose",eP),function(e){let t=o.get(e).programs;void 0!==t&&(t.forEach(function(e){p.releaseProgram(e)}),e.isShaderMaterial&&p.releaseShaderCache(e))}(t),o.remove(t)}function eN(e,t,r){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,ek(e,t,r),e.side=0,e.needsUpdate=!0,ek(e,t,r),e.side=2):ek(e,t,r)}this.xr=ew,this.getContext=function(){return eS},this.getContextAttributes=function(){return eS.getContextAttributes()},this.forceContextLoss=function(){let e=r.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=r.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return eh},this.setPixelRatio=function(e){void 0!==e&&(eh=e,this.setSize(es,el,!1))},this.getSize=function(e){return e.set(es,el)},this.setSize=function(e,t,r=!0){if(ew.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}es=e,el=t,R.width=Math.floor(e*eh),R.height=Math.floor(t*eh),!0===r&&(R.style.width=e+"px",R.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(es*eh,el*eh).floor()},this.setDrawingBufferSize=function(e,t,r){es=e,el=t,eh=r,R.width=Math.floor(e*r),R.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(et)},this.getViewport=function(e){return e.copy(ed)},this.setViewport=function(e,t,r,n){e.isVector4?ed.set(e.x,e.y,e.z,e.w):ed.set(e,t,r,n),i.viewport(et.copy(ed).multiplyScalar(eh).round())},this.getScissor=function(e){return e.copy(ep)},this.setScissor=function(e,t,r,n){e.isVector4?ep.set(e.x,e.y,e.z,e.w):ep.set(e,t,r,n),i.scissor(en.copy(ep).multiplyScalar(eh).round())},this.getScissorTest=function(){return ef},this.setScissorTest=function(e){i.setScissorTest(ef=e)},this.setOpaqueSort=function(e){eu=e},this.setTransparentSort=function(e){ec=e},this.getClearColor=function(e){return e.copy(E.getClearColor())},this.setClearColor=function(){E.setClearColor.apply(E,arguments)},this.getClearAlpha=function(){return E.getClearAlpha()},this.setClearAlpha=function(){E.setClearAlpha.apply(E,arguments)},this.clear=function(e=!0,t=!0,r=!0){let n=0;if(e){let e=!1;if(null!==$){let t=$.texture.format;e=1033===t||1031===t||1029===t}if(e){let e=$.texture.type,t=E.getClearColor(),r=E.getClearAlpha(),n=t.r,i=t.g,a=t.b;1009===e||1014===e||1012===e||1020===e||1017===e||1018===e?(k[0]=n,k[1]=i,k[2]=a,k[3]=r,eS.clearBufferuiv(eS.COLOR,0,k)):(H[0]=n,H[1]=i,H[2]=a,H[3]=r,eS.clearBufferiv(eS.COLOR,0,H))}else n|=eS.COLOR_BUFFER_BIT}t&&(n|=eS.DEPTH_BUFFER_BIT),r&&(n|=eS.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),eS.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){R.removeEventListener("webglcontextlost",eA,!1),R.removeEventListener("webglcontextrestored",eR,!1),R.removeEventListener("webglcontextcreationerror",eC,!1),m.dispose(),v.dispose(),o.dispose(),l.dispose(),h.dispose(),d.dispose(),w.dispose(),A.dispose(),p.dispose(),ew.dispose(),ew.removeEventListener("sessionstart",eI),ew.removeEventListener("sessionend",eD),eO.stop()},this.renderBufferDirect=function(e,t,r,a,d,p){let m;null===t&&(t=eE);let g=d.isMesh&&0>d.matrixWorld.determinant(),v=function(e,t,r,a,u){var c;!0!==t.isScene&&(t=eE),s.resetTextureUnits();let d=t.fog,p=a.isMeshStandardMaterial?t.environment:null,m=null===$?j.outputColorSpace:!0===$.isXRRenderTarget?$.texture.colorSpace:_,g=(a.isMeshStandardMaterial?h:l).get(a.envMap||p),v=!0===a.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,x=!!r.attributes.tangent&&(!!a.normalMap||a.anisotropy>0),E=!!r.morphAttributes.position,S=!!r.morphAttributes.normal,b=!!r.morphAttributes.color,T=0;a.toneMapped&&(null===$||!0===$.isXRRenderTarget)&&(T=j.toneMapping);let w=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,R=void 0!==w?w.length:0,C=o.get(a),P=G.state.lights;if(!0===eg&&(!0===e_||e!==ee)){let t=e===ee&&a.id===K;y.setState(a,e,t)}let L=!1;a.version===C.__version?C.needsLights&&C.lightsStateVersion!==P.state.version?L=!0:C.outputColorSpace!==m?L=!0:u.isBatchedMesh&&!1===C.batching?L=!0:u.isBatchedMesh||!0!==C.batching?u.isInstancedMesh&&!1===C.instancing?L=!0:u.isInstancedMesh||!0!==C.instancing?u.isSkinnedMesh&&!1===C.skinning?L=!0:u.isSkinnedMesh||!0!==C.skinning?u.isInstancedMesh&&!0===C.instancingColor&&null===u.instanceColor?L=!0:u.isInstancedMesh&&!1===C.instancingColor&&null!==u.instanceColor?L=!0:u.isInstancedMesh&&!0===C.instancingMorph&&null===u.morphTexture?L=!0:u.isInstancedMesh&&!1===C.instancingMorph&&null!==u.morphTexture?L=!0:C.envMap!==g?L=!0:!0===a.fog&&C.fog!==d?L=!0:void 0!==C.numClippingPlanes&&(C.numClippingPlanes!==y.numPlanes||C.numIntersection!==y.numIntersection)?L=!0:C.vertexAlphas!==v?L=!0:C.vertexTangents!==x?L=!0:C.morphTargets!==E?L=!0:C.morphNormals!==S?L=!0:C.morphColors!==b?L=!0:C.toneMapping!==T?L=!0:C.morphTargetsCount!==R&&(L=!0):L=!0:L=!0:L=!0:(L=!0,C.__version=a.version);let N=C.currentProgram;!0===L&&(N=ek(a,t,u));let U=!1,I=!1,D=!1,O=N.getUniforms(),F=C.uniforms;if(i.useProgram(N.program)&&(U=!0,I=!0,D=!0),a.id!==K&&(K=a.id,I=!0),U||ee!==e){O.setValue(eS,"projectionMatrix",e.projectionMatrix),O.setValue(eS,"viewMatrix",e.matrixWorldInverse);let t=O.map.cameraPosition;void 0!==t&&t.setValue(eS,ex.setFromMatrixPosition(e.matrixWorld)),n.logarithmicDepthBuffer&&O.setValue(eS,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&O.setValue(eS,"isOrthographic",!0===e.isOrthographicCamera),ee!==e&&(ee=e,I=!0,D=!0)}if(u.isSkinnedMesh){O.setOptional(eS,u,"bindMatrix"),O.setOptional(eS,u,"bindMatrixInverse");let e=u.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),O.setValue(eS,"boneTexture",e.boneTexture,s))}u.isBatchedMesh&&(O.setOptional(eS,u,"batchingTexture"),O.setValue(eS,"batchingTexture",u._matricesTexture,s));let B=r.morphAttributes;if((void 0!==B.position||void 0!==B.normal||void 0!==B.color)&&M.update(u,r,N),(I||C.receiveShadow!==u.receiveShadow)&&(C.receiveShadow=u.receiveShadow,O.setValue(eS,"receiveShadow",u.receiveShadow)),a.isMeshGouraudMaterial&&null!==a.envMap&&(F.envMap.value=g,F.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1),a.isMeshStandardMaterial&&null===a.envMap&&null!==t.environment&&(F.envMapIntensity.value=t.environmentIntensity),I&&(O.setValue(eS,"toneMappingExposure",j.toneMappingExposure),C.needsLights&&(c=D,F.ambientLightColor.needsUpdate=c,F.lightProbe.needsUpdate=c,F.directionalLights.needsUpdate=c,F.directionalLightShadows.needsUpdate=c,F.pointLights.needsUpdate=c,F.pointLightShadows.needsUpdate=c,F.spotLights.needsUpdate=c,F.spotLightShadows.needsUpdate=c,F.rectAreaLights.needsUpdate=c,F.hemisphereLights.needsUpdate=c),d&&!0===a.fog&&f.refreshFogUniforms(F,d),f.refreshMaterialUniforms(F,a,eh,el,G.state.transmissionRenderTarget),nk.upload(eS,eH(C),F,s)),a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(nk.upload(eS,eH(C),F,s),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&O.setValue(eS,"center",u.center),O.setValue(eS,"modelViewMatrix",u.modelViewMatrix),O.setValue(eS,"normalMatrix",u.normalMatrix),O.setValue(eS,"modelMatrix",u.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){let e=a.uniformsGroups;for(let t=0,r=e.length;t<r;t++){let r=e[t];A.update(r,N),A.bind(r,N)}}return N}(e,t,r,a,d);i.setMaterial(a,g);let x=r.index,E=1;if(!0===a.wireframe){if(void 0===(x=c.getWireframeAttribute(r)))return;E=2}let T=r.drawRange,R=r.attributes.position,C=T.start*E,P=(T.start+T.count)*E;null!==p&&(C=Math.max(C,p.start*E),P=Math.min(P,(p.start+p.count)*E)),null!==x?(C=Math.max(C,0),P=Math.min(P,x.count)):null!=R&&(C=Math.max(C,0),P=Math.min(P,R.count));let L=P-C;if(L<0||L===1/0)return;w.setup(d,a,v,r,x);let N=S;if(null!==x&&(m=u.get(x),(N=b).setIndex(m)),d.isMesh)!0===a.wireframe?(i.setLineWidth(a.wireframeLinewidth*eM()),N.setMode(eS.LINES)):N.setMode(eS.TRIANGLES);else if(d.isLine){let e=a.linewidth;void 0===e&&(e=1),i.setLineWidth(e*eM()),d.isLineSegments?N.setMode(eS.LINES):d.isLineLoop?N.setMode(eS.LINE_LOOP):N.setMode(eS.LINE_STRIP)}else d.isPoints?N.setMode(eS.POINTS):d.isSprite&&N.setMode(eS.TRIANGLES);if(d.isBatchedMesh)N.renderMultiDraw(d._multiDrawStarts,d._multiDrawCounts,d._multiDrawCount);else if(d.isInstancedMesh)N.renderInstances(C,L,d.count);else if(r.isInstancedBufferGeometry){let e=void 0!==r._maxInstanceCount?r._maxInstanceCount:1/0,t=Math.min(r.instanceCount,e);N.renderInstances(C,L,t)}else N.render(C,L)},this.compile=function(e,t,r=null){null===r&&(r=e),(G=v.get(r)).init(),X.push(G),r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(G.pushLight(e),e.castShadow&&G.pushShadow(e))}),e!==r&&e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(G.pushLight(e),e.castShadow&&G.pushShadow(e))}),G.setupLights(j._useLegacyLights);let n=new Set;return e.traverse(function(e){let t=e.material;if(t){if(Array.isArray(t))for(let i=0;i<t.length;i++){let a=t[i];eN(a,r,e),n.add(a)}else eN(t,r,e),n.add(t)}}),X.pop(),G=null,n},this.compileAsync=function(e,t,n=null){let i=this.compile(e,t,n);return new Promise(t=>{function n(){if(i.forEach(function(e){o.get(e).currentProgram.isReady()&&i.delete(e)}),0===i.size){t(e);return}setTimeout(n,10)}null!==r.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let eU=null;function eI(){eO.stop()}function eD(){eO.start()}let eO=new rs;function eF(e,t,n,a){let l=e.opaque,h=e.transmissive,u=e.transparent;G.setupLightsView(n),!0===eg&&y.setGlobalState(j.clippingPlanes,n),h.length>0&&function(e,t,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;null===G.state.transmissionRenderTarget&&(G.state.transmissionRenderTarget=new Q(1,1,{generateMipmaps:!0,type:r.has("EXT_color_buffer_half_float")||r.has("EXT_color_buffer_float")?1016:1009,minFilter:1008,samples:4,stencilBuffer:L}),o.get(G.state.transmissionRenderTarget).__isTransmissionRenderTarget=!0);let a=G.state.transmissionRenderTarget;j.getDrawingBufferSize(ey),a.setSize(ey.x,ey.y);let l=j.getRenderTarget();j.setRenderTarget(a),j.getClearColor(ea),(eo=j.getClearAlpha())<1&&j.setClearColor(16777215,.5),j.clear();let h=j.toneMapping;j.toneMapping=0,eB(e,n,i),s.updateMultisampleRenderTarget(a),s.updateRenderTargetMipmap(a);let u=!1;for(let e=0,r=t.length;e<r;e++){let r=t[e],a=r.object,o=r.geometry,s=r.material,l=r.group;if(2===s.side&&a.layers.test(i.layers)){let e=s.side;s.side=1,s.needsUpdate=!0,ez(a,n,i,o,s,l),s.side=e,s.needsUpdate=!0,u=!0}}!0===u&&(s.updateMultisampleRenderTarget(a),s.updateRenderTargetMipmap(a)),j.setRenderTarget(l),j.setClearColor(ea,eo),j.toneMapping=h}(l,h,t,n),a&&i.viewport(et.copy(a)),l.length>0&&eB(l,t,n),h.length>0&&eB(h,t,n),u.length>0&&eB(u,t,n),i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),i.setPolygonOffset(!1)}function eB(e,t,r){let n=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){let a=e[i],o=a.object,s=a.geometry,l=null===n?a.material:n,h=a.group;o.layers.test(r.layers)&&ez(o,t,r,s,l,h)}}function ez(e,t,r,n,i,a){e.onBeforeRender(j,t,r,n,i,a),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(j,t,r,n,e,a),!0===i.transparent&&2===i.side&&!1===i.forceSinglePass?(i.side=1,i.needsUpdate=!0,j.renderBufferDirect(r,t,n,i,e,a),i.side=0,i.needsUpdate=!0,j.renderBufferDirect(r,t,n,i,e,a),i.side=2):j.renderBufferDirect(r,t,n,i,e,a),e.onAfterRender(j,t,r,n,i,a)}function ek(e,t,r){!0!==t.isScene&&(t=eE);let n=o.get(e),i=G.state.lights,a=G.state.shadowsArray,s=i.state.version,u=p.getParameters(e,i.state,a,t,r),c=p.getProgramCacheKey(u),d=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?h:l).get(e.envMap||n.environment),n.envMapRotation=null!==n.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===d&&(e.addEventListener("dispose",eP),d=new Map,n.programs=d);let f=d.get(c);if(void 0!==f){if(n.currentProgram===f&&n.lightsStateVersion===s)return eV(e,u),f}else u.uniforms=p.getUniforms(e),e.onBuild(r,u,j),e.onBeforeCompile(u,j),f=p.acquireProgram(u,c),d.set(c,f),n.uniforms=u.uniforms;let m=n.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(m.clippingPlanes=y.uniform),eV(e,u),n.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,n.lightsStateVersion=s,n.needsLights&&(m.ambientLightColor.value=i.state.ambient,m.lightProbe.value=i.state.probe,m.directionalLights.value=i.state.directional,m.directionalLightShadows.value=i.state.directionalShadow,m.spotLights.value=i.state.spot,m.spotLightShadows.value=i.state.spotShadow,m.rectAreaLights.value=i.state.rectArea,m.ltc_1.value=i.state.rectAreaLTC1,m.ltc_2.value=i.state.rectAreaLTC2,m.pointLights.value=i.state.point,m.pointLightShadows.value=i.state.pointShadow,m.hemisphereLights.value=i.state.hemi,m.directionalShadowMap.value=i.state.directionalShadowMap,m.directionalShadowMatrix.value=i.state.directionalShadowMatrix,m.spotShadowMap.value=i.state.spotShadowMap,m.spotLightMatrix.value=i.state.spotLightMatrix,m.spotLightMap.value=i.state.spotLightMap,m.pointShadowMap.value=i.state.pointShadowMap,m.pointShadowMatrix.value=i.state.pointShadowMatrix),n.currentProgram=f,n.uniformsList=null,f}function eH(e){if(null===e.uniformsList){let t=e.currentProgram.getUniforms();e.uniformsList=nk.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function eV(e,t){let r=o.get(e);r.outputColorSpace=t.outputColorSpace,r.batching=t.batching,r.instancing=t.instancing,r.instancingColor=t.instancingColor,r.instancingMorph=t.instancingMorph,r.skinning=t.skinning,r.morphTargets=t.morphTargets,r.morphNormals=t.morphNormals,r.morphColors=t.morphColors,r.morphTargetsCount=t.morphTargetsCount,r.numClippingPlanes=t.numClippingPlanes,r.numIntersection=t.numClipIntersection,r.vertexAlphas=t.vertexAlphas,r.vertexTangents=t.vertexTangents,r.toneMapping=t.toneMapping}eO.setAnimationLoop(function(e){eU&&eU(e)}),"undefined"!=typeof self&&eO.setContext(self),this.setAnimationLoop=function(e){eU=e,ew.setAnimationLoop(e),null===e?eO.stop():eO.start()},ew.addEventListener("sessionstart",eI),ew.addEventListener("sessionend",eD),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===q)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===ew.enabled&&!0===ew.isPresenting&&(!0===ew.cameraAutoUpdate&&ew.updateCamera(t),t=ew.getCamera()),!0===e.isScene&&e.onBeforeRender(j,e,t,$),(G=v.get(e,X.length)).init(),X.push(G),ev.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),em.setFromProjectionMatrix(ev),e_=this.localClippingEnabled,eg=y.init(this.clippingPlanes,e_),(V=m.get(e,W.length)).init(),W.push(V),function e(t,r,n,i){if(!1===t.visible)return;if(t.layers.test(r.layers)){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(r);else if(t.isLight)G.pushLight(t),t.castShadow&&G.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||em.intersectsSprite(t)){i&&ex.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ev);let e=d.update(t),r=t.material;r.visible&&V.push(t,e,r,n,ex.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||em.intersectsObject(t))){let e=d.update(t),r=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),ex.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),ex.copy(e.boundingSphere.center)),ex.applyMatrix4(t.matrixWorld).applyMatrix4(ev)),Array.isArray(r)){let i=e.groups;for(let a=0,o=i.length;a<o;a++){let o=i[a],s=r[o.materialIndex];s&&s.visible&&V.push(t,e,s,n,ex.z,o)}}else r.visible&&V.push(t,e,r,n,ex.z,null)}}let a=t.children;for(let t=0,o=a.length;t<o;t++)e(a[t],r,n,i)}(e,t,0,j.sortObjects),V.finish(),!0===j.sortObjects&&V.sort(eu,ec),this.info.render.frame++,!0===eg&&y.beginShadows();let r=G.state.shadowsArray;if(x.render(r,e,t),!0===eg&&y.endShadows(),!0===this.info.autoReset&&this.info.reset(),(!1===ew.enabled||!1===ew.isPresenting||!1===ew.hasDepthSensing())&&E.render(V,e),G.setupLights(j._useLegacyLights),t.isArrayCamera){let r=t.cameras;for(let t=0,n=r.length;t<n;t++){let n=r[t];eF(V,e,n,n.viewport)}}else eF(V,e,t);null!==$&&(s.updateMultisampleRenderTarget($),s.updateRenderTargetMipmap($)),!0===e.isScene&&e.onAfterRender(j,e,t),w.resetDefaultState(),K=-1,ee=null,X.pop(),G=X.length>0?X[X.length-1]:null,W.pop(),V=W.length>0?W[W.length-1]:null},this.getActiveCubeFace=function(){return Y},this.getActiveMipmapLevel=function(){return J},this.getRenderTarget=function(){return $},this.setRenderTargetTextures=function(e,t,n){o.get(e.texture).__webglTexture=t,o.get(e.depthTexture).__webglTexture=n;let i=o.get(e);i.__hasExternalTextures=!0,i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0!==r.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(e,t){let r=o.get(e);r.__webglFramebuffer=t,r.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,r=0){$=e,Y=t,J=r;let n=!0,a=null,l=!1,h=!1;if(e){let u=o.get(e);void 0!==u.__useDefaultFramebuffer?(i.bindFramebuffer(eS.FRAMEBUFFER,null),n=!1):void 0===u.__webglFramebuffer?s.setupRenderTarget(e):u.__hasExternalTextures&&s.rebindTextures(e,o.get(e.texture).__webglTexture,o.get(e.depthTexture).__webglTexture);let c=e.texture;(c.isData3DTexture||c.isDataArrayTexture||c.isCompressedArrayTexture)&&(h=!0);let d=o.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=Array.isArray(d[t])?d[t][r]:d[t],l=!0):a=e.samples>0&&!1===s.useMultisampledRTT(e)?o.get(e).__webglMultisampledFramebuffer:Array.isArray(d)?d[r]:d,et.copy(e.viewport),en.copy(e.scissor),ei=e.scissorTest}else et.copy(ed).multiplyScalar(eh).floor(),en.copy(ep).multiplyScalar(eh).floor(),ei=ef;if(i.bindFramebuffer(eS.FRAMEBUFFER,a)&&n&&i.drawBuffers(e,a),i.viewport(et),i.scissor(en),i.setScissorTest(ei),l){let n=o.get(e.texture);eS.framebufferTexture2D(eS.FRAMEBUFFER,eS.COLOR_ATTACHMENT0,eS.TEXTURE_CUBE_MAP_POSITIVE_X+t,n.__webglTexture,r)}else if(h){let n=o.get(e.texture);eS.framebufferTextureLayer(eS.FRAMEBUFFER,eS.COLOR_ATTACHMENT0,n.__webglTexture,r||0,t||0)}K=-1},this.readRenderTargetPixels=function(e,t,n,a,s,l,h){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let u=o.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(u=u[h]),u){i.bindFramebuffer(eS.FRAMEBUFFER,u);try{let i=e.texture,o=i.format,h=i.type;if(1023!==o&&T.convert(o)!==eS.getParameter(eS.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let u=1016===h&&(r.has("EXT_color_buffer_half_float")||r.has("EXT_color_buffer_float"));if(1009!==h&&T.convert(h)!==eS.getParameter(eS.IMPLEMENTATION_COLOR_READ_TYPE)&&1015!==h&&!u){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-a&&n>=0&&n<=e.height-s&&eS.readPixels(t,n,a,s,T.convert(o),T.convert(h),l)}finally{let e=null!==$?o.get($).__webglFramebuffer:null;i.bindFramebuffer(eS.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,r=0){let n=Math.pow(2,-r),a=Math.floor(t.image.width*n),o=Math.floor(t.image.height*n);s.setTexture2D(t,0),eS.copyTexSubImage2D(eS.TEXTURE_2D,r,0,0,e.x,e.y,a,o),i.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n=0){let a=t.image.width,o=t.image.height,l=T.convert(r.format),h=T.convert(r.type);s.setTexture2D(r,0),eS.pixelStorei(eS.UNPACK_FLIP_Y_WEBGL,r.flipY),eS.pixelStorei(eS.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),eS.pixelStorei(eS.UNPACK_ALIGNMENT,r.unpackAlignment),t.isDataTexture?eS.texSubImage2D(eS.TEXTURE_2D,n,e.x,e.y,a,o,l,h,t.image.data):t.isCompressedTexture?eS.compressedTexSubImage2D(eS.TEXTURE_2D,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,l,t.mipmaps[0].data):eS.texSubImage2D(eS.TEXTURE_2D,n,e.x,e.y,l,h,t.image),0===n&&r.generateMipmaps&&eS.generateMipmap(eS.TEXTURE_2D),i.unbindTexture()},this.copyTextureToTexture3D=function(e,t,r,n,a=0){let o;let l=Math.round(e.max.x-e.min.x),h=Math.round(e.max.y-e.min.y),u=e.max.z-e.min.z+1,c=T.convert(n.format),d=T.convert(n.type);if(n.isData3DTexture)s.setTexture3D(n,0),o=eS.TEXTURE_3D;else if(n.isDataArrayTexture||n.isCompressedArrayTexture)s.setTexture2DArray(n,0),o=eS.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}eS.pixelStorei(eS.UNPACK_FLIP_Y_WEBGL,n.flipY),eS.pixelStorei(eS.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),eS.pixelStorei(eS.UNPACK_ALIGNMENT,n.unpackAlignment);let p=eS.getParameter(eS.UNPACK_ROW_LENGTH),f=eS.getParameter(eS.UNPACK_IMAGE_HEIGHT),m=eS.getParameter(eS.UNPACK_SKIP_PIXELS),g=eS.getParameter(eS.UNPACK_SKIP_ROWS),_=eS.getParameter(eS.UNPACK_SKIP_IMAGES),v=r.isCompressedTexture?r.mipmaps[a]:r.image;eS.pixelStorei(eS.UNPACK_ROW_LENGTH,v.width),eS.pixelStorei(eS.UNPACK_IMAGE_HEIGHT,v.height),eS.pixelStorei(eS.UNPACK_SKIP_PIXELS,e.min.x),eS.pixelStorei(eS.UNPACK_SKIP_ROWS,e.min.y),eS.pixelStorei(eS.UNPACK_SKIP_IMAGES,e.min.z),r.isDataTexture||r.isData3DTexture?eS.texSubImage3D(o,a,t.x,t.y,t.z,l,h,u,c,d,v.data):n.isCompressedArrayTexture?eS.compressedTexSubImage3D(o,a,t.x,t.y,t.z,l,h,u,c,v.data):eS.texSubImage3D(o,a,t.x,t.y,t.z,l,h,u,c,d,v),eS.pixelStorei(eS.UNPACK_ROW_LENGTH,p),eS.pixelStorei(eS.UNPACK_IMAGE_HEIGHT,f),eS.pixelStorei(eS.UNPACK_SKIP_PIXELS,m),eS.pixelStorei(eS.UNPACK_SKIP_ROWS,g),eS.pixelStorei(eS.UNPACK_SKIP_IMAGES,_),0===a&&n.generateMipmaps&&eS.generateMipmap(o),i.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?s.setTextureCube(e,0):e.isData3DTexture?s.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?s.setTexture2DArray(e,0):s.setTexture2D(e,0),i.unbindTexture()},this.resetState=function(){Y=0,J=0,$=null,i.reset(),w.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;let t=this.getContext();t.drawingBufferColorSpace=e===v?"display-p3":"srgb",t.unpackColorSpace=V.workingColorSpace===y?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class iR extends e4{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new eH,this.environmentIntensity=1,this.environmentRotation=new eH,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class iC extends ${constructor(e=null,t=1,r=1,n,i,a,o,s,l=1003,h=1003,u,c){super(null,a,o,s,l,h,n,i,u,c),this.isDataTexture=!0,this.image={data:e,width:t,height:r},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class iP{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let r=this.getUtoTmapping(e);return this.getPoint(r,t)}getPoints(e=5){let t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t}getSpacedPoints(e=5){let t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],r,n=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)t.push(i+=(r=this.getPoint(a/e)).distanceTo(n)),n=r;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let r;let n=this.getLengths(),i=0,a=n.length;r=t||e*n[a-1];let o=0,s=a-1,l;for(;o<=s;)if((l=n[i=Math.floor(o+(s-o)/2)]-r)<0)o=i+1;else if(l>0)s=i-1;else{s=i;break}if(n[i=s]===r)return i/(a-1);let h=n[i],u=n[i+1];return(i+(r-h)/(u-h))/(a-1)}getTangent(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),n>1&&(n=1);let i=this.getPoint(r),a=this.getPoint(n),o=t||(i.isVector2?new N:new er);return o.copy(a).sub(i).normalize(),o}getTangentAt(e,t){let r=this.getUtoTmapping(e);return this.getTangent(r,t)}computeFrenetFrames(e,t){let r=new er,n=[],i=[],a=[],o=new er,s=new eL;for(let t=0;t<=e;t++){let r=t/e;n[t]=this.getTangentAt(r,new er)}i[0]=new er,a[0]=new er;let l=Number.MAX_VALUE,h=Math.abs(n[0].x),u=Math.abs(n[0].y),c=Math.abs(n[0].z);h<=l&&(l=h,r.set(1,0,0)),u<=l&&(l=u,r.set(0,1,0)),c<=l&&r.set(0,0,1),o.crossVectors(n[0],r).normalize(),i[0].crossVectors(n[0],o),a[0].crossVectors(n[0],i[0]);for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),a[t]=a[t-1].clone(),o.crossVectors(n[t-1],n[t]),o.length()>Number.EPSILON){o.normalize();let e=Math.acos(C(n[t-1].dot(n[t]),-1,1));i[t].applyMatrix4(s.makeRotationAxis(o,e))}a[t].crossVectors(n[t],i[t])}if(!0===t){let t=Math.acos(C(i[0].dot(i[e]),-1,1));t/=e,n[0].dot(o.crossVectors(i[0],i[e]))>0&&(t=-t);for(let r=1;r<=e;r++)i[r].applyMatrix4(s.makeRotationAxis(n[r],t*r)),a[r].crossVectors(n[r],i[r])}return{tangents:n,normals:i,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class iL extends iP{constructor(e=0,t=0,r=1,n=1,i=0,a=2*Math.PI,o=!1,s=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=n,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s}getPoint(e,t=new N){let r=2*Math.PI,n=this.aEndAngle-this.aStartAngle,i=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=r;for(;n>r;)n-=r;n<Number.EPSILON&&(n=i?0:r),!0!==this.aClockwise||i||(n===r?n=-r:n-=r);let a=this.aStartAngle+e*n,o=this.aX+this.xRadius*Math.cos(a),s=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),r=o-this.aX,n=s-this.aY;o=r*e-n*t+this.aX,s=r*t+n*e+this.aY}return t.set(o,s)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}function iN(){let e=0,t=0,r=0,n=0;function i(i,a,o,s){e=i,t=o,r=-3*i+3*a-2*o-s,n=2*i-2*a+o+s}return{initCatmullRom:function(e,t,r,n,a){i(t,r,a*(r-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,a,o,s){let l=(t-e)/a-(r-e)/(a+o)+(r-t)/o,h=(r-t)/o-(n-t)/(o+s)+(n-r)/s;i(t,r,l*=o,h*=o)},calc:function(i){let a=i*i;return e+t*i+r*a+a*i*n}}}const iU=new er,iI=new iN,iD=new iN,iO=new iN;function iF(e,t,r,n,i){let a=(n-t)*.5,o=(i-r)*.5,s=e*e;return e*s*(2*r-2*n+a+o)+(-3*r+3*n-2*a-o)*s+a*e+r}function iB(e,t,r,n){return function(e,t){let r=1-e;return r*r*t}(e,t)+2*(1-e)*e*r+e*e*n}function iz(e,t,r,n,i){return function(e,t){let r=1-e;return r*r*r*t}(e,t)+function(e,t){let r=1-e;return 3*r*r*e*t}(e,r)+3*(1-e)*e*e*n+e*e*e*i}class ik extends iP{constructor(e=new N,t=new N,r=new N,n=new N){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new N){let r=this.v0,n=this.v1,i=this.v2,a=this.v3;return t.set(iz(e,r.x,n.x,i.x,a.x),iz(e,r.y,n.y,i.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class iH extends iP{constructor(e=new N,t=new N){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new N){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new N){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iV extends iP{constructor(e=new N,t=new N,r=new N){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new N){let r=this.v0,n=this.v1,i=this.v2;return t.set(iB(e,r.x,n.x,i.x),iB(e,r.y,n.y,i.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iG extends iP{constructor(e=new er,t=new er,r=new er){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new er){let r=this.v0,n=this.v1,i=this.v2;return t.set(iB(e,r.x,n.x,i.x),iB(e,r.y,n.y,i.y),iB(e,r.z,n.z,i.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iW extends iP{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new N){let r=this.points,n=(r.length-1)*e,i=Math.floor(n),a=n-i,o=r[0===i?i:i-1],s=r[i],l=r[i>r.length-2?r.length-1:i+1],h=r[i>r.length-3?r.length-1:i+2];return t.set(iF(a,o.x,s.x,l.x,h.x),iF(a,o.y,s.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){let r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(new N().fromArray(r))}return this}}var iX=Object.freeze({__proto__:null,ArcCurve:class extends iL{constructor(e,t,r,n,i,a){super(e,t,r,r,n,i,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends iP{constructor(e=[],t=!1,r="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=n}getPoint(e,t=new er){let r,n;let i=this.points,a=i.length,o=(a-(this.closed?0:1))*e,s=Math.floor(o),l=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/a)+1)*a:0===l&&s===a-1&&(s=a-2,l=1),this.closed||s>0?r=i[(s-1)%a]:(iU.subVectors(i[0],i[1]).add(i[0]),r=iU);let h=i[s%a],u=i[(s+1)%a];if(this.closed||s+2<a?n=i[(s+2)%a]:(iU.subVectors(i[a-1],i[a-2]).add(i[a-1]),n=iU),"centripetal"===this.curveType||"chordal"===this.curveType){let e="chordal"===this.curveType?.5:.25,t=Math.pow(r.distanceToSquared(h),e),i=Math.pow(h.distanceToSquared(u),e),a=Math.pow(u.distanceToSquared(n),e);i<1e-4&&(i=1),t<1e-4&&(t=i),a<1e-4&&(a=i),iI.initNonuniformCatmullRom(r.x,h.x,u.x,n.x,t,i,a),iD.initNonuniformCatmullRom(r.y,h.y,u.y,n.y,t,i,a),iO.initNonuniformCatmullRom(r.z,h.z,u.z,n.z,t,i,a)}else"catmullrom"===this.curveType&&(iI.initCatmullRom(r.x,h.x,u.x,n.x,this.tension),iD.initCatmullRom(r.y,h.y,u.y,n.y,this.tension),iO.initCatmullRom(r.z,h.z,u.z,n.z,this.tension));return t.set(iI.calc(l),iD.calc(l),iO.calc(l)),t}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){let r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(new er().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},CubicBezierCurve:ik,CubicBezierCurve3:class extends iP{constructor(e=new er,t=new er,r=new er,n=new er){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new er){let r=this.v0,n=this.v1,i=this.v2,a=this.v3;return t.set(iz(e,r.x,n.x,i.x,a.x),iz(e,r.y,n.y,i.y,a.y),iz(e,r.z,n.z,i.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},EllipseCurve:iL,LineCurve:iH,LineCurve3:class extends iP{constructor(e=new er,t=new er){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new er){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new er){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:iV,QuadraticBezierCurve3:iG,SplineCurve:iW});class ij extends iP{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){let r=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new iX[r](t,e))}return this}getPoint(e,t){let r=e*this.getLength(),n=this.getCurveLengths(),i=0;for(;i<n.length;){if(n[i]>=r){let e=n[i]-r,a=this.curves[i],o=a.getLength(),s=0===o?0:1-e/o;return a.getPointAt(s,t)}i++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let r=0,n=this.curves.length;r<n;r++)e.push(t+=this.curves[r].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let r=[];for(let n=0,i=this.curves;n<i.length;n++){let a=i[n],o=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o);for(let e=0;e<s.length;e++){let n=s[e];t&&t.equals(n)||(r.push(n),t=n)}}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(e){super.copy(e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){let r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){let r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){let r=e.curves[t];this.curves.push(new iX[r.type]().fromJSON(r))}return this}}class iq extends ij{constructor(e){super(),this.type="Path",this.currentPoint=new N,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let r=new iH(this.currentPoint.clone(),new N(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,n){let i=new iV(this.currentPoint.clone(),new N(e,t),new N(r,n));return this.curves.push(i),this.currentPoint.set(r,n),this}bezierCurveTo(e,t,r,n,i,a){let o=new ik(this.currentPoint.clone(),new N(e,t),new N(r,n),new N(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this}splineThru(e){let t=new iW([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,n,i,a){let o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,r,n,i,a),this}absarc(e,t,r,n,i,a){return this.absellipse(e,t,r,r,n,i,a),this}ellipse(e,t,r,n,i,a,o,s){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,r,n,i,a,o,s),this}absellipse(e,t,r,n,i,a,o,s){let l=new iL(e,t,r,n,i,a,o,s);if(this.curves.length>0){let e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class iY extends tP{constructor(e=[new N(0,-.5),new N(.5,0),new N(0,.5)],t=12,r=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t),n=C(n,0,2*Math.PI);let i=[],a=[],o=[],s=[],l=[],h=1/t,u=new er,c=new N,d=new er,p=new er,f=new er,m=0,g=0;for(let t=0;t<=e.length-1;t++)switch(t){case 0:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),s.push(d.x,d.y,d.z);break;case e.length-1:s.push(f.x,f.y,f.z);break;default:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),s.push(d.x,d.y,d.z),f.copy(p)}for(let i=0;i<=t;i++){let d=r+i*h*n,p=Math.sin(d),f=Math.cos(d);for(let r=0;r<=e.length-1;r++){u.x=e[r].x*p,u.y=e[r].y,u.z=e[r].x*f,a.push(u.x,u.y,u.z),c.x=i/t,c.y=r/(e.length-1),o.push(c.x,c.y);let n=s[3*r+0]*p,h=s[3*r+1],d=s[3*r+0]*f;l.push(n,h,d)}}for(let r=0;r<t;r++)for(let t=0;t<e.length-1;t++){let n=t+r*e.length,a=n+e.length,o=n+e.length+1,s=n+1;i.push(n,a,s),i.push(o,s,a)}this.setIndex(i),this.setAttribute("position",new tM(a,3)),this.setAttribute("uv",new tM(o,2)),this.setAttribute("normal",new tM(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new iY(e.points,e.segments,e.phiStart,e.phiLength)}}class iJ extends iY{constructor(e=1,t=1,r=4,n=8){let i=new iq;i.absarc(0,-t/2,e,1.5*Math.PI,0),i.absarc(0,t/2,e,0,.5*Math.PI),super(i.getPoints(r),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:r,radialSegments:n}}static fromJSON(e){return new iJ(e.radius,e.length,e.capSegments,e.radialSegments)}}class i$ extends tP{constructor(e=1,t=32,r=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},t=Math.max(3,t);let i=[],a=[],o=[],s=[],l=new er,h=new N;a.push(0,0,0),o.push(0,0,1),s.push(.5,.5);for(let i=0,u=3;i<=t;i++,u+=3){let c=r+i/t*n;l.x=e*Math.cos(c),l.y=e*Math.sin(c),a.push(l.x,l.y,l.z),o.push(0,0,1),h.x=(a[u]/e+1)/2,h.y=(a[u+1]/e+1)/2,s.push(h.x,h.y)}for(let e=1;e<=t;e++)i.push(e,e+1,0);this.setIndex(i),this.setAttribute("position",new tM(a,3)),this.setAttribute("normal",new tM(o,3)),this.setAttribute("uv",new tM(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new i$(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class iZ extends tP{constructor(e=1,t=1,r=1,n=32,i=1,a=!1,o=0,s=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};let l=this;n=Math.floor(n),i=Math.floor(i);let h=[],u=[],c=[],d=[],p=0,f=[],m=r/2,g=0;function _(r){let i=p,a=new N,f=new er,_=0,v=!0===r?e:t,y=!0===r?1:-1;for(let e=1;e<=n;e++)u.push(0,m*y,0),c.push(0,y,0),d.push(.5,.5),p++;let x=p;for(let e=0;e<=n;e++){let t=e/n*s+o,r=Math.cos(t),i=Math.sin(t);f.x=v*i,f.y=m*y,f.z=v*r,u.push(f.x,f.y,f.z),c.push(0,y,0),a.x=.5*r+.5,a.y=.5*i*y+.5,d.push(a.x,a.y),p++}for(let e=0;e<n;e++){let t=i+e,n=x+e;!0===r?h.push(n,n+1,t):h.push(n+1,n,t),_+=3}l.addGroup(g,_,!0===r?1:2),g+=_}(function(){let a=new er,_=new er,v=0,y=(t-e)/r;for(let l=0;l<=i;l++){let h=[],g=l/i,v=g*(t-e)+e;for(let e=0;e<=n;e++){let t=e/n,i=t*s+o,l=Math.sin(i),f=Math.cos(i);_.x=v*l,_.y=-g*r+m,_.z=v*f,u.push(_.x,_.y,_.z),a.set(l,y,f).normalize(),c.push(a.x,a.y,a.z),d.push(t,1-g),h.push(p++)}f.push(h)}for(let e=0;e<n;e++)for(let t=0;t<i;t++){let r=f[t][e],n=f[t+1][e],i=f[t+1][e+1],a=f[t][e+1];h.push(r,n,a),h.push(n,i,a),v+=6}l.addGroup(g,v,0),g+=v})(),!1===a&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new tM(u,3)),this.setAttribute("normal",new tM(c,3)),this.setAttribute("uv",new tM(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new iZ(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class iK extends iZ{constructor(e=1,t=1,r=32,n=1,i=!1,a=0,o=2*Math.PI){super(0,e,t,r,n,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}}static fromJSON(e){return new iK(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class iQ extends tP{constructor(e=[],t=[],r=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n};let i=[],a=[];function o(e){i.push(e.x,e.y,e.z)}function s(t,r){let n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function l(e,t,r,n){n<0&&1===e.x&&(a[t]=e.x-1),0===r.x&&0===r.z&&(a[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}(function(e){let r=new er,n=new er,i=new er;for(let a=0;a<t.length;a+=3)s(t[a+0],r),s(t[a+1],n),s(t[a+2],i),function(e,t,r,n){let i=n+1,a=[];for(let n=0;n<=i;n++){a[n]=[];let o=e.clone().lerp(r,n/i),s=t.clone().lerp(r,n/i),l=i-n;for(let e=0;e<=l;e++)0===e&&n===i?a[n][e]=o:a[n][e]=o.clone().lerp(s,e/l)}for(let e=0;e<i;e++)for(let t=0;t<2*(i-e)-1;t++){let r=Math.floor(t/2);t%2==0?(o(a[e][r+1]),o(a[e+1][r]),o(a[e][r])):(o(a[e][r+1]),o(a[e+1][r+1]),o(a[e+1][r]))}}(r,n,i,e)})(n),function(e){let t=new er;for(let r=0;r<i.length;r+=3)t.x=i[r+0],t.y=i[r+1],t.z=i[r+2],t.normalize().multiplyScalar(e),i[r+0]=t.x,i[r+1]=t.y,i[r+2]=t.z}(r),function(){let e=new er;for(let t=0;t<i.length;t+=3){e.x=i[t+0],e.y=i[t+1],e.z=i[t+2];let r=h(e)/2/Math.PI+.5,n=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;a.push(r,1-n)}(function(){let e=new er,t=new er,r=new er,n=new er,o=new N,s=new N,u=new N;for(let c=0,d=0;c<i.length;c+=9,d+=6){e.set(i[c+0],i[c+1],i[c+2]),t.set(i[c+3],i[c+4],i[c+5]),r.set(i[c+6],i[c+7],i[c+8]),o.set(a[d+0],a[d+1]),s.set(a[d+2],a[d+3]),u.set(a[d+4],a[d+5]),n.copy(e).add(t).add(r).divideScalar(3);let p=h(n);l(o,d+0,e,p),l(s,d+2,t,p),l(u,d+4,r,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],r=a[e+2],n=a[e+4],i=Math.max(t,r,n),o=Math.min(t,r,n);i>.9&&o<.1&&(t<.2&&(a[e+0]+=1),r<.2&&(a[e+2]+=1),n<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new tM(i,3)),this.setAttribute("normal",new tM(i.slice(),3)),this.setAttribute("uv",new tM(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new iQ(e.vertices,e.indices,e.radius,e.details)}}class i0 extends iQ{constructor(e=1,t=0){let r=(1+Math.sqrt(5))/2,n=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new i0(e.radius,e.detail)}}class i1 extends iq{constructor(e){super(e),this.uuid=R(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let r=0,n=this.holes.length;r<n;r++)t[r]=this.holes[r].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){let r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){let r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){let r=e.holes[t];this.holes.push(new iq().fromJSON(r))}return this}}const i2=function(e,t,r=2){let n,i,a,o,s,l,h;let u=t&&t.length,c=u?t[0]*r:e.length,d=i3(e,0,c,r,!0),p=[];if(!d||d.next===d.prev)return p;if(u&&(d=function(e,t,r,n){let i,a,o,s,l;let h=[];for(i=0,a=t.length;i<a;i++)o=t[i]*n,s=i<a-1?t[i+1]*n:e.length,(l=i3(e,o,s,n,!1))===l.next&&(l.steiner=!0),h.push(function(e){let t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e)return r}(l));for(h.sort(i5),i=0;i<h.length;i++)r=function(e,t){let r=function(e,t){let r=t,n=-1/0,i,a=e.x,o=e.y;do{if(o<=r.y&&o>=r.next.y&&r.next.y!==r.y){let e=r.x+(o-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(e<=a&&e>n&&(n=e,i=r.x<r.next.x?r:r.next,e===a))return i}r=r.next}while(r!==t)if(!i)return null;let s=i,l=i.x,h=i.y,u=1/0,c;r=i;do{var d,p;a>=r.x&&r.x>=l&&a!==r.x&&i8(o<h?a:n,o,l,h,o<h?n:a,o,r.x,r.y)&&(c=Math.abs(o-r.y)/(a-r.x),an(r,e)&&(c<u||c===u&&(r.x>i.x||r.x===i.x&&(d=i,p=r,0>i7(d.prev,d,p.prev)&&0>i7(p.next,d,d.next))))&&(i=r,u=c)),r=r.next}while(r!==s)return i}(e,t);if(!r)return t;let n=ai(r,e);return i4(n,n.next),i4(r,r.next)}(h[i],r);return r}(e,t,d,r)),e.length>80*r){n=a=e[0],i=o=e[1];for(let t=r;t<c;t+=r)s=e[t],l=e[t+1],s<n&&(n=s),l<i&&(i=l),s>a&&(a=s),l>o&&(o=l);h=0!==(h=Math.max(a-n,o-i))?32767/h:0}return function e(t,r,n,i,a,o,s){if(!t)return;!s&&o&&function(e,t,r,n){let i=e;do 0===i.z&&(i.z=i6(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e)i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,r,n,i,a,o,s,l,h=1;do{for(r=e,e=null,a=null,o=0;r;){for(o++,n=r,s=0,t=0;t<h&&(s++,n=n.nextZ);t++);for(l=h;s>0||l>0&&n;)0!==s&&(0===l||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;r=n}a.nextZ=null,h*=2}while(o>1)}(i)}(t,i,a,o);let l=t,h,u;for(;t.prev!==t.next;){if(h=t.prev,u=t.next,o?function(e,t,r,n){let i=e.prev,a=e.next;if(i7(i,e,a)>=0)return!1;let o=i.x,s=e.x,l=a.x,h=i.y,u=e.y,c=a.y,d=o<s?o<l?o:l:s<l?s:l,p=h<u?h<c?h:c:u<c?u:c,f=o>s?o>l?o:l:s>l?s:l,m=h>u?h>c?h:c:u>c?u:c,g=i6(d,p,t,r,n),_=i6(f,m,t,r,n),v=e.prevZ,y=e.nextZ;for(;v&&v.z>=g&&y&&y.z<=_;){if(v.x>=d&&v.x<=f&&v.y>=p&&v.y<=m&&v!==i&&v!==a&&i8(o,h,s,u,l,c,v.x,v.y)&&i7(v.prev,v,v.next)>=0||(v=v.prevZ,y.x>=d&&y.x<=f&&y.y>=p&&y.y<=m&&y!==i&&y!==a&&i8(o,h,s,u,l,c,y.x,y.y)&&i7(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;v&&v.z>=g;){if(v.x>=d&&v.x<=f&&v.y>=p&&v.y<=m&&v!==i&&v!==a&&i8(o,h,s,u,l,c,v.x,v.y)&&i7(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;y&&y.z<=_;){if(y.x>=d&&y.x<=f&&y.y>=p&&y.y<=m&&y!==i&&y!==a&&i8(o,h,s,u,l,c,y.x,y.y)&&i7(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}(t,i,a,o):function(e){let t=e.prev,r=e.next;if(i7(t,e,r)>=0)return!1;let n=t.x,i=e.x,a=r.x,o=t.y,s=e.y,l=r.y,h=n<i?n<a?n:a:i<a?i:a,u=o<s?o<l?o:l:s<l?s:l,c=n>i?n>a?n:a:i>a?i:a,d=o>s?o>l?o:l:s>l?s:l,p=r.next;for(;p!==t;){if(p.x>=h&&p.x<=c&&p.y>=u&&p.y<=d&&i8(n,o,i,s,a,l,p.x,p.y)&&i7(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}(t)){r.push(h.i/n|0),r.push(t.i/n|0),r.push(u.i/n|0),ao(t),t=u.next,l=u.next;continue}if((t=u)===l){s?1===s?e(t=function(e,t,r){let n=e;do{let i=n.prev,a=n.next.next;!i9(i,a)&&ae(i,n,n.next,a)&&an(i,a)&&an(a,i)&&(t.push(i.i/r|0),t.push(n.i/r|0),t.push(a.i/r|0),ao(n),ao(n.next),n=e=a),n=n.next}while(n!==e)return i4(n)}(i4(t),r,n),r,n,i,a,o,2):2===s&&function(t,r,n,i,a,o){let s=t;do{let t=s.next.next;for(;t!==s.prev;){var l,h;if(s.i!==t.i&&(l=s,h=t,l.next.i!==h.i&&l.prev.i!==h.i&&!function(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&ae(r,r.next,e,t))return!0;r=r.next}while(r!==e)return!1}(l,h)&&(an(l,h)&&an(h,l)&&function(e,t){let r=e,n=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next;while(r!==e)return n}(l,h)&&(i7(l.prev,l,h.prev)||i7(l,h.prev,h))||i9(l,h)&&i7(l.prev,l,l.next)>0&&i7(h.prev,h,h.next)>0))){let l=ai(s,t);s=i4(s,s.next),l=i4(l,l.next),e(s,r,n,i,a,o,0),e(l,r,n,i,a,o,0);return}t=t.next}s=s.next}while(s!==t)}(t,r,n,i,a,o):e(i4(t),r,n,i,a,o,1);break}}}(d,p,r,n,i,h,0),p};function i3(e,t,r,n,i){let a,o;if(i===function(e,t,r,n){let i=0;for(let a=t,o=r-n;a<r;a+=n)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}(e,t,r,n)>0)for(a=t;a<r;a+=n)o=aa(a,e[a],e[a+1],o);else for(a=r-n;a>=t;a-=n)o=aa(a,e[a],e[a+1],o);return o&&i9(o,o.next)&&(ao(o),o=o.next),o}function i4(e,t){if(!e)return e;t||(t=e);let r=e,n;do if(n=!1,!r.steiner&&(i9(r,r.next)||0===i7(r.prev,r,r.next))){if(ao(r),(r=t=r.prev)===r.next)break;n=!0}else r=r.next;while(n||r!==t)return t}function i5(e,t){return e.x-t.x}function i6(e,t,r,n,i){return(e=((e=((e=((e=((e=(e-r)*i|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=(t-n)*i|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function i8(e,t,r,n,i,a,o,s){return(i-o)*(t-s)>=(e-o)*(a-s)&&(e-o)*(n-s)>=(r-o)*(t-s)&&(r-o)*(a-s)>=(i-o)*(n-s)}function i7(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function i9(e,t){return e.x===t.x&&e.y===t.y}function ae(e,t,r,n){let i=ar(i7(e,t,r)),a=ar(i7(e,t,n)),o=ar(i7(r,n,e)),s=ar(i7(r,n,t));return!!(i!==a&&o!==s||0===i&&at(e,r,t)||0===a&&at(e,n,t)||0===o&&at(r,e,n)||0===s&&at(r,t,n))}function at(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function ar(e){return e>0?1:e<0?-1:0}function an(e,t){return 0>i7(e.prev,e,e.next)?i7(e,t,e.next)>=0&&i7(e,e.prev,t)>=0:0>i7(e,t,e.prev)||0>i7(e,e.next,t)}function ai(e,t){let r=new as(e.i,e.x,e.y),n=new as(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function aa(e,t,r,n){let i=new as(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ao(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function as(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class al{static area(e){let t=e.length,r=0;for(let n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return .5*r}static isClockWise(e){return 0>al.area(e)}static triangulateShape(e,t){let r=[],n=[],i=[];ah(e),au(r,e);let a=e.length;t.forEach(ah);for(let e=0;e<t.length;e++)n.push(a),a+=t[e].length,au(r,t[e]);let o=i2(r,n);for(let e=0;e<o.length;e+=3)i.push(o.slice(e,e+3));return i}}function ah(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function au(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}class ac extends tP{constructor(e=new i1([new N(.5,.5),new N(-.5,.5),new N(-.5,-.5),new N(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let r=this,n=[],i=[];for(let a=0,o=e.length;a<o;a++)!function(e){let a,o,s,l;let h=[],u=void 0!==t.curveSegments?t.curveSegments:12,c=void 0!==t.steps?t.steps:1,d=void 0!==t.depth?t.depth:1,p=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:.2,m=void 0!==t.bevelSize?t.bevelSize:f-.1,g=void 0!==t.bevelOffset?t.bevelOffset:0,_=void 0!==t.bevelSegments?t.bevelSegments:3,v=t.extrudePath,y=void 0!==t.UVGenerator?t.UVGenerator:ad,x,E=!1;v&&(x=v.getSpacedPoints(c),E=!0,p=!1,a=v.computeFrenetFrames(c,!1),o=new er,s=new er,l=new er),p||(_=0,f=0,m=0,g=0);let M=e.extractPoints(u),S=M.shape,b=M.holes;if(!al.isClockWise(S)){S=S.reverse();for(let e=0,t=b.length;e<t;e++){let t=b[e];al.isClockWise(t)&&(b[e]=t.reverse())}}let T=al.triangulateShape(S,b),w=S;for(let e=0,t=b.length;e<t;e++){let t=b[e];S=S.concat(t)}function A(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,r)}let R=S.length,C=T.length;function P(e,t,r){let n,i,a;let o=e.x-t.x,s=e.y-t.y,l=r.x-e.x,h=r.y-e.y,u=o*o+s*s;if(Math.abs(o*h-s*l)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=t.x-s/c,f=t.y+o/c,m=((r.x-h/d-p)*h-(r.y+l/d-f)*l)/(o*h-s*l),g=(n=p+o*m-e.x)*n+(i=f+s*m-e.y)*i;if(g<=2)return new N(n,i);a=Math.sqrt(g/2)}else{let e=!1;o>Number.EPSILON?l>Number.EPSILON&&(e=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(s)===Math.sign(h)&&(e=!0),e?(n=-s,i=o,a=Math.sqrt(u)):(n=o,i=s,a=Math.sqrt(u/2))}return new N(n/a,i/a)}let L=[];for(let e=0,t=w.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),L[e]=P(w[e],w[r],w[n]);let U=[],I,D=L.concat();for(let e=0,t=b.length;e<t;e++){let t=b[e];I=[];for(let e=0,r=t.length,n=r-1,i=e+1;e<r;e++,n++,i++)n===r&&(n=0),i===r&&(i=0),I[e]=P(t[e],t[n],t[i]);U.push(I),D=D.concat(I)}for(let e=0;e<_;e++){let t=e/_,r=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=w.length;e<t;e++){let t=A(w[e],L[e],n);B(t.x,t.y,-r)}for(let e=0,t=b.length;e<t;e++){let t=b[e];I=U[e];for(let e=0,i=t.length;e<i;e++){let i=A(t[e],I[e],n);B(i.x,i.y,-r)}}}let O=m+g;for(let e=0;e<R;e++){let t=p?A(S[e],D[e],O):S[e];E?(s.copy(a.normals[0]).multiplyScalar(t.x),o.copy(a.binormals[0]).multiplyScalar(t.y),l.copy(x[0]).add(s).add(o),B(l.x,l.y,l.z)):B(t.x,t.y,0)}for(let e=1;e<=c;e++)for(let t=0;t<R;t++){let r=p?A(S[t],D[t],O):S[t];E?(s.copy(a.normals[e]).multiplyScalar(r.x),o.copy(a.binormals[e]).multiplyScalar(r.y),l.copy(x[e]).add(s).add(o),B(l.x,l.y,l.z)):B(r.x,r.y,d/c*e)}for(let e=_-1;e>=0;e--){let t=e/_,r=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=w.length;e<t;e++){let t=A(w[e],L[e],n);B(t.x,t.y,d+r)}for(let e=0,t=b.length;e<t;e++){let t=b[e];I=U[e];for(let e=0,i=t.length;e<i;e++){let i=A(t[e],I[e],n);E?B(i.x,i.y+x[c-1].y,x[c-1].x+r):B(i.x,i.y,d+r)}}}function F(e,t){let i=e.length;for(;--i>=0;){let a=i,o=i-1;o<0&&(o=e.length-1);for(let e=0,i=c+2*_;e<i;e++){let i=R*e,s=R*(e+1);!function(e,t,i,a){k(e),k(t),k(a),k(t),k(i),k(a);let o=n.length/3,s=y.generateSideWallUV(r,n,o-6,o-3,o-2,o-1);H(s[0]),H(s[1]),H(s[3]),H(s[1]),H(s[2]),H(s[3])}(t+a+i,t+o+i,t+o+s,t+a+s)}}}function B(e,t,r){h.push(e),h.push(t),h.push(r)}function z(e,t,i){k(e),k(t),k(i);let a=n.length/3,o=y.generateTopUV(r,n,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[2])}function k(e){n.push(h[3*e+0]),n.push(h[3*e+1]),n.push(h[3*e+2])}function H(e){i.push(e.x),i.push(e.y)}(function(){let e=n.length/3;if(p){let e=0*R;for(let t=0;t<C;t++){let r=T[t];z(r[2]+e,r[1]+e,r[0]+e)}e=R*(c+2*_);for(let t=0;t<C;t++){let r=T[t];z(r[0]+e,r[1]+e,r[2]+e)}}else{for(let e=0;e<C;e++){let t=T[e];z(t[2],t[1],t[0])}for(let e=0;e<C;e++){let t=T[e];z(t[0]+R*c,t[1]+R*c,t[2]+R*c)}}r.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;F(w,0),t+=w.length;for(let e=0,r=b.length;e<r;e++){let r=b[e];F(r,t),t+=r.length}r.addGroup(e,n.length/3-e,1)}()}(e[a]);this.setAttribute("position",new tM(n,3)),this.setAttribute("uv",new tM(i,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){let n=e[t];r.shapes.push(n.uuid)}else r.shapes.push(e.uuid);return r.options=Object.assign({},t),void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){let r=[];for(let n=0,i=e.shapes.length;n<i;n++){let i=t[e.shapes[n]];r.push(i)}let n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=new iX[n.type]().fromJSON(n)),new ac(r,e.options)}}const ad={generateTopUV:function(e,t,r,n,i){let a=t[3*r],o=t[3*r+1],s=t[3*n],l=t[3*n+1],h=t[3*i],u=t[3*i+1];return[new N(a,o),new N(s,l),new N(h,u)]},generateSideWallUV:function(e,t,r,n,i,a){let o=t[3*r],s=t[3*r+1],l=t[3*r+2],h=t[3*n],u=t[3*n+1],c=t[3*n+2],d=t[3*i],p=t[3*i+1],f=t[3*i+2],m=t[3*a],g=t[3*a+1],_=t[3*a+2];return Math.abs(s-u)<Math.abs(o-h)?[new N(o,1-l),new N(h,1-c),new N(d,1-f),new N(m,1-_)]:[new N(s,1-l),new N(u,1-c),new N(p,1-f),new N(g,1-_)]}};class ap extends iQ{constructor(e=1,t=0){let r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ap(e.radius,e.detail)}}class af extends iQ{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new af(e.radius,e.detail)}}class am extends tP{constructor(e=.5,t=1,r=32,n=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},r=Math.max(3,r);let o=[],s=[],l=[],h=[],u=e,c=(t-e)/(n=Math.max(1,n)),d=new er,p=new N;for(let e=0;e<=n;e++){for(let e=0;e<=r;e++){let n=i+e/r*a;d.x=u*Math.cos(n),d.y=u*Math.sin(n),s.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=c}for(let e=0;e<n;e++){let t=e*(r+1);for(let e=0;e<r;e++){let n=e+t,i=n+r+1,a=n+r+2,s=n+1;o.push(n,i,s),o.push(i,a,s)}}this.setIndex(o),this.setAttribute("position",new tM(s,3)),this.setAttribute("normal",new tM(l,3)),this.setAttribute("uv",new tM(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new am(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ag extends tP{constructor(e=new i1([new N(0,.5),new N(-.5,-.5),new N(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let r=[],n=[],i=[],a=[],o=0,s=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(o,s,t),o+=s,s=0;function l(e){let o=n.length/3,l=e.extractPoints(t),h=l.shape,u=l.holes;!1===al.isClockWise(h)&&(h=h.reverse());for(let e=0,t=u.length;e<t;e++){let t=u[e];!0===al.isClockWise(t)&&(u[e]=t.reverse())}let c=al.triangulateShape(h,u);for(let e=0,t=u.length;e<t;e++){let t=u[e];h=h.concat(t)}for(let e=0,t=h.length;e<t;e++){let t=h[e];n.push(t.x,t.y,0),i.push(0,0,1),a.push(t.x,t.y)}for(let e=0,t=c.length;e<t;e++){let t=c[e],n=t[0]+o,i=t[1]+o,a=t[2]+o;r.push(n,i,a),s+=3}}this.setIndex(r),this.setAttribute("position",new tM(n,3)),this.setAttribute("normal",new tM(i,3)),this.setAttribute("uv",new tM(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,n=e.length;r<n;r++){let n=e[r];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){let r=[];for(let n=0,i=e.shapes.length;n<i;n++){let i=t[e.shapes[n]];r.push(i)}return new ag(r,e.curveSegments)}}class a_ extends tP{constructor(e=1,t=32,r=16,n=0,i=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),r=Math.max(2,Math.floor(r));let s=Math.min(a+o,Math.PI),l=0,h=[],u=new er,c=new er,d=[],p=[],f=[],m=[];for(let d=0;d<=r;d++){let g=[],_=d/r,v=0;0===d&&0===a?v=.5/t:d===r&&s===Math.PI&&(v=-.5/t);for(let r=0;r<=t;r++){let s=r/t;u.x=-e*Math.cos(n+s*i)*Math.sin(a+_*o),u.y=e*Math.cos(a+_*o),u.z=e*Math.sin(n+s*i)*Math.sin(a+_*o),p.push(u.x,u.y,u.z),c.copy(u).normalize(),f.push(c.x,c.y,c.z),m.push(s+v,1-_),g.push(l++)}h.push(g)}for(let e=0;e<r;e++)for(let n=0;n<t;n++){let t=h[e][n+1],i=h[e][n],o=h[e+1][n],l=h[e+1][n+1];(0!==e||a>0)&&d.push(t,i,l),(e!==r-1||s<Math.PI)&&d.push(i,o,l)}this.setIndex(d),this.setAttribute("position",new tM(p,3)),this.setAttribute("normal",new tM(f,3)),this.setAttribute("uv",new tM(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a_(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class av extends iQ{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new av(e.radius,e.detail)}}class ay extends tP{constructor(e=1,t=.4,r=12,n=48,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},r=Math.floor(r),n=Math.floor(n);let a=[],o=[],s=[],l=[],h=new er,u=new er,c=new er;for(let a=0;a<=r;a++)for(let d=0;d<=n;d++){let p=d/n*i,f=a/r*Math.PI*2;u.x=(e+t*Math.cos(f))*Math.cos(p),u.y=(e+t*Math.cos(f))*Math.sin(p),u.z=t*Math.sin(f),o.push(u.x,u.y,u.z),h.x=e*Math.cos(p),h.y=e*Math.sin(p),c.subVectors(u,h).normalize(),s.push(c.x,c.y,c.z),l.push(d/n),l.push(a/r)}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){let r=(n+1)*e+t-1,i=(n+1)*(e-1)+t-1,o=(n+1)*(e-1)+t,s=(n+1)*e+t;a.push(r,i,s),a.push(i,o,s)}this.setIndex(a),this.setAttribute("position",new tM(o,3)),this.setAttribute("normal",new tM(s,3)),this.setAttribute("uv",new tM(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ay(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class ax extends tP{constructor(e=1,t=.4,r=64,n=8,i=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a},r=Math.floor(r),n=Math.floor(n);let o=[],s=[],l=[],h=[],u=new er,c=new er,d=new er,p=new er,f=new er,m=new er,g=new er;for(let o=0;o<=r;++o){let v=o/r*i*Math.PI*2;_(v,i,a,e,d),_(v+.01,i,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let e=0;e<=n;++e){let i=e/n*Math.PI*2,a=-t*Math.cos(i),p=t*Math.sin(i);u.x=d.x+(a*g.x+p*f.x),u.y=d.y+(a*g.y+p*f.y),u.z=d.z+(a*g.z+p*f.z),s.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),l.push(c.x,c.y,c.z),h.push(o/r),h.push(e/n)}}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){let r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),a=(n+1)*e+t,s=(n+1)*(e-1)+t;o.push(r,i,s),o.push(i,a,s)}function _(e,t,r,n,i){let a=r/t*e,o=Math.cos(a);i.x=n*(2+o)*.5*Math.cos(e),i.y=n*(2+o)*Math.sin(e)*.5,i.z=n*Math.sin(a)*.5}this.setIndex(o),this.setAttribute("position",new tM(s,3)),this.setAttribute("normal",new tM(l,3)),this.setAttribute("uv",new tM(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ax(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class aE extends tP{constructor(e=new iG(new er(-1,-1,0),new er(-1,1,0),new er(1,1,0)),t=64,r=1,n=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i};let a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let o=new er,s=new er,l=new N,h=new er,u=[],c=[],d=[],p=[];function f(i){h=e.getPointAt(i/t,h);let l=a.normals[i],d=a.binormals[i];for(let e=0;e<=n;e++){let t=e/n*Math.PI*2,i=Math.sin(t),a=-Math.cos(t);s.x=a*l.x+i*d.x,s.y=a*l.y+i*d.y,s.z=a*l.z+i*d.z,s.normalize(),c.push(s.x,s.y,s.z),o.x=h.x+r*s.x,o.y=h.y+r*s.y,o.z=h.z+r*s.z,u.push(o.x,o.y,o.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===i?t:0),function(){for(let e=0;e<=t;e++)for(let r=0;r<=n;r++)l.x=e/t,l.y=r/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){let r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),a=(n+1)*e+t,o=(n+1)*(e-1)+t;p.push(r,i,o),p.push(i,a,o)}}()})(),this.setIndex(p),this.setAttribute("position",new tM(u,3)),this.setAttribute("normal",new tM(c,3)),this.setAttribute("uv",new tM(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new aE(new iX[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}function aM(e,t,r){return e&&(r||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}class aS{constructor(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{let a;r:{n:if(!(e<n)){for(let a=r+2;;){if(void 0===n){if(e<i)break n;return r=t.length,this._cachedIndex=r,this.copySampleValue_(r-1)}if(r===a)break;if(i=n,e<(n=t[++r]))break t}a=t.length;break r}if(!(e>=i)){let o=t[1];e<o&&(r=2,i=o);for(let a=r-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(r===a)break;if(n=i,e>=(i=t[--r-1]))break t}a=r,r=0;break r}break e}for(;r<a;){let n=r+a>>>1;e<t[n]?a=n:r=n+1}if(n=t[r],void 0===(i=t[r-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return r=t.length,this._cachedIndex=r,this.copySampleValue_(r-1)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let e=0;e!==n;++e)t[e]=r[i+e];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class ab extends aS{constructor(e,t,r,n){super(e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,r){let n=this.parameterPositions,i=e-2,a=e+1,o=n[i],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:i=e,o=2*t-r;break;case 2402:i=n.length-2,o=t+n[i]-n[i+1];break;default:i=e,o=r}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=e,s=2*r-t;break;case 2402:a=1,s=r+n[1]-n[0];break;default:a=e-1,s=t}let l=(r-t)*.5,h=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-r),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(e,t,r,n){let i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(r-t)/(n-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,_=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,v=(-1-d)*m+(1.5+d)*f+.5*p,y=d*m-d*f;for(let e=0;e!==o;++e)i[e]=g*a[h+e]+_*a[l+e]+v*a[s+e]+y*a[u+e];return i}}class aT extends aS{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){let i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,h=(r-t)/(n-t),u=1-h;for(let e=0;e!==o;++e)i[e]=a[l+e]*u+a[s+e]*h;return i}}class aw extends aS{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class aA{constructor(e,t,r,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=aM(t,this.TimeBufferType),this.values=aM(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t;let r=e.constructor;if(r.toJSON!==this.toJSON)t=r.toJSON(e);else{t={name:e.name,times:aM(e.times,Array),values:aM(e.values,Array)};let r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new aw(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new aT(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ab(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]*=e}return this}trim(e,t){let r=this.times,n=r.length,i=0,a=n-1;for(;i!==n&&r[i]<e;)++i;for(;-1!==a&&r[a]>t;)--a;if(++a,0!==i||a!==n){i>=a&&(i=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=r.slice(i,a),this.values=this.values.slice(i*e,a*e)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let r=this.times,n=this.values,i=r.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==i;t++){let n=r[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==a&&a>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,a),e=!1;break}a=n}if(void 0!==n&&ArrayBuffer.isView(n)&&!(n instanceof DataView))for(let t=0,r=n.length;t!==r;++t){let r=n[t];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,r),e=!1;break}}return e}optimize(){let e=this.times.slice(),t=this.values.slice(),r=this.getValueSize(),n=2302===this.getInterpolation(),i=e.length-1,a=1;for(let o=1;o<i;++o){let i=!1,s=e[o];if(s!==e[o+1]&&(1!==o||s!==e[0])){if(n)i=!0;else{let e=o*r,n=e-r,a=e+r;for(let o=0;o!==r;++o){let r=t[e+o];if(r!==t[n+o]||r!==t[a+o]){i=!0;break}}}}if(i){if(o!==a){e[a]=e[o];let n=o*r,i=a*r;for(let e=0;e!==r;++e)t[i+e]=t[n+e]}++a}}if(i>0){e[a]=e[i];for(let e=i*r,n=a*r,o=0;o!==r;++o)t[n+o]=t[e+o];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*r)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),r=new this.constructor(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}aA.prototype.TimeBufferType=Float32Array,aA.prototype.ValueBufferType=Float32Array,aA.prototype.DefaultInterpolation=2301;class aR extends aA{}aR.prototype.ValueTypeName="bool",aR.prototype.ValueBufferType=Array,aR.prototype.DefaultInterpolation=2300,aR.prototype.InterpolantFactoryMethodLinear=void 0,aR.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends aA{}).prototype.ValueTypeName="color",(class extends aA{}).prototype.ValueTypeName="number";class aC extends aS{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){let i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(r-t)/(n-t),l=e*o;for(let e=l+o;l!==e;l+=4)et.slerpFlat(i,0,a,l-o,a,l,s);return i}}class aP extends aA{InterpolantFactoryMethodLinear(e){return new aC(this.times,this.values,this.getValueSize(),e)}}aP.prototype.ValueTypeName="quaternion",aP.prototype.DefaultInterpolation=2301,aP.prototype.InterpolantFactoryMethodSmooth=void 0;class aL extends aA{}aL.prototype.ValueTypeName="string",aL.prototype.ValueBufferType=Array,aL.prototype.DefaultInterpolation=2300,aL.prototype.InterpolantFactoryMethodLinear=void 0,aL.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends aA{}).prototype.ValueTypeName="vector";const aN=new class{constructor(e,t,r){let n;let i=this,a=!1,o=0,s=0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){s++,!1===a&&void 0!==i.onStart&&i.onStart(e,o,s),a=!0},this.itemEnd=function(e){o++,void 0!==i.onProgress&&i.onProgress(e,o,s),o===s&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return n?n(e):e},this.setURLModifier=function(e){return n=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,r=l.length;t<r;t+=2){let r=l[t],n=l[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return n}return null}}},aU="\\[\\]\\.:\\/",aI=RegExp("["+aU+"]","g"),aD="[^"+aU+"]",aO="[^"+aU.replace("\\.","")+"]",aF=/((?:WC+[\/:])*)/.source.replace("WC",aD),aB=RegExp("^"+aF+/(WCOD+)?/.source.replace("WCOD",aO)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",aD)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",aD)+"$"),az=["material","materials","bones","map"];class ak{constructor(e,t,r){this.path=t,this.parsedPath=r||ak.parseTrackName(t),this.node=ak.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return e&&e.isAnimationObjectGroup?new ak.Composite(e,t,r):new ak(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(aI,"")}static parseTrackName(e){let t=aB.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let e=r.nodeName.substring(n+1);-1!==az.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){let r=function(e){for(let n=0;n<e.length;n++){let i=e[n];if(i.name===t||i.uuid===t)return i;let a=r(i.children);if(a)return a}return null},n=r(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)e[t++]=r[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,r=t.objectName,n=t.propertyName,i=t.propertyIndex;if(e||(e=ak.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(r){let n=t.objectIndex;switch(r){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[r]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[r]}if(void 0!==n){if(void 0===e[n]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[n]}}let a=e[n];if(void 0===a){console.error("THREE.PropertyBinding: Trying to update property for track: "+t.nodeName+"."+n+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}function aH(e,t){let r=e[t];for(;;){let n=e[++t];if(r+=n,"'"===n){if("'"===e[t+1])r+="'",t++;else break}}return{token:r,index:t}}function aV(e){let t=[],r="";for(let n=0,i=e.length;n<i;n++){let i=e[n];if("="===i||" "===i)""!==r.trim()&&t.push(r),r="";else if("'"===i){let{token:t,index:i}=aH(e,n);n=i,r+=t}else if("("===i){let{token:t,index:i}=function(e,t){let r=e[t];for(;;){let n=e[++t];if("'"===n){let n=aH(e,t);r+=n.token,t=n.index}else if(")"===n){r+=n;break}else r+=n}return{token:r,index:t}}(e,n);n=i,r+=t}else r+=i}""!==r.trim()&&t.push(r);let n=[];for(let e=0,r=t.length;e<r;e+=2){let r=t[e].trim(),i=function e(t){return"("===(t=t.trim())[0]?t.replace(/[()]/g,"").split(/,/g).map(t=>e(t)):"'"===t[0]?t.substring(1,t.length-1).replace(/''/g,"'"):Number(t)}(t[e+1].trim());n.push({name:r,value:i})}return n}function aG(e,t,r){let n="";for(let i=t;i<r;i++){let t=String.fromCharCode(e[i]);if("\0"===t)break;n+=t}return n}function aW(e,t,r){let n="";for(let i=t;i<e.length;i++){let t=String.fromCharCode(e[i]);if(r(t))break;n+=t}return n}function aX(e,t,r){let n=e.find(e=>e.name===t);return n?n.value:r}ak.Composite=class{constructor(e,t,r){let n=r||ak.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)}setValue(e,t){let r=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}},ak.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ak.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ak.prototype.GetterByBindingType=[ak.prototype._getValue_direct,ak.prototype._getValue_array,ak.prototype._getValue_arrayElement,ak.prototype._getValue_toArray],ak.prototype.SetterByBindingTypeAndVersioning=[[ak.prototype._setValue_direct,ak.prototype._setValue_direct_setNeedsUpdate,ak.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ak.prototype._setValue_array,ak.prototype._setValue_array_setNeedsUpdate,ak.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ak.prototype._setValue_arrayElement,ak.prototype._setValue_arrayElement_setNeedsUpdate,ak.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ak.prototype._setValue_fromArray,ak.prototype._setValue_fromArray_setNeedsUpdate,ak.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"163"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="163");class aj{constructor(){this.fetchOptions={credentials:"same-origin"}}load(e){return fetch(e,this.fetchOptions).then(t=>{if(!t.ok)throw Error(`VicarLoader: Failed to load file "${e}" with status ${t.status} : ${t.statusText}`);return t.arrayBuffer()}).then(e=>this.parse(e))}parse(e){let t,r,n,i,a,o,s;e instanceof Uint8Array?e=(t=e).buffer:t=new Uint8Array(e);let l=parseInt(aW(t,0,e=>/\s/.test(e)).split("=")[1]);if(Number.isNaN(l))throw Error("VicarLoader: Label size not provided.");let h=aV(aG(t,0,l)),u=aX(h,"LBLSIZE"),c=aX(h,"RECSIZE"),d=aX(h,"ORG"),p=aX(h,"NS"),f=aX(h,"NL"),m=aX(h,"NB"),g=aX(h,"FORMAT"),_=aX(h,"EOL",0),v=aX(h,"INTFMT","LOW"),y=aX(h,"REALFMT","VAX"),x=aX(h,"NLB",0),E=aX(h,"NBB",0);switch(d){case"BSQ":if(r=aX(h,"N1",p),n=aX(h,"N2",f),i=aX(h,"N3",m),r!==p||n!==f||i!==m)throw Error(`VicarLoader: N1, N2, N3 labels do not match NS, NL, NB in BSQ order: ${r}, ${n}, ${n} != ${p}, ${f}, ${m}`);break;case"BIL":if(r=aX(h,"N1",p),n=aX(h,"N2",m),i=aX(h,"N3",f),r!==p||n!==m||i!==f)throw Error(`VicarLoader: N1, N2, N3 labels do not match NS, NB, NL in BSQ order: ${r}, ${n}, ${n} != ${p}, ${m}, ${f}`);break;case"BIP":if(r=aX(h,"N1",m),n=aX(h,"N2",p),i=aX(h,"N3",f),r!==p||n!==m||i!==f)throw Error(`VicarLoader: N1, N2, N3 labels do not match NB, NS, NL in BSQ order: ${r}, ${n}, ${n} != ${m}, ${p}, ${f}`)}let M=c*(n*i+x);if(1===_){let e=u+M,r=parseInt(aW(t,e,e=>/\s/.test(e)).split("=")[1]),n=aV(aG(t,e,e+r));h.push(...n)}let S=!1;switch(g){case"BYTE":a=Uint8Array,o="getUint8",s="LOW"===v;break;case"WORD":case"HALF":a=Int16Array,o="getInt16",s="LOW"===v;break;case"LONG":case"FULL":a=Int32Array,o="getInt32",s="LOW"===v;break;case"REAL":if(a=Float32Array,o="getFloat32",s="RIEEE"===y,"VAX"===h.REALFMT)throw Error("VicarLoader: VAX REALFMT not supported.");break;case"DOUB":if(a=Float64Array,o="getFloat64",s="RIEEE"===y,"VAX"===y)throw Error("VicarLoader: VAX REALFMT not supported.");break;case"COMPLEX":case"COMP":if(S=!0,a=Float32Array,o="getFloat32",s="RIEEE"===y,"VAX"===y)throw Error("VicarLoader: VAX REALFMT not supported.")}let b=new DataView(e,t.byteOffset+(u+x*c),M-x*c),T=new a(r*n*i),w=new Uint8Array(E*n*i),A=a.BYTES_PER_ELEMENT;for(let e=0,t=i;e<t;e++)for(let t=0,i=n;t<i;t++){let n=e*i+t,a=n*c;for(let e=0,t=r;e<t;e++){let r=a+E+e*A,i=n*t+e;T[i]=b[o](r,s),S&&(T[i+1]=b[o](r+4,s))}for(let e=0;e<E;e++){let t=a+e;w[n*E+e]=b.getUint8(t)}}return 0!==x&&console.warn("VicarLoader: NLB Data is present but is not being procesed."),{labels:h,data:T,width:p,height:f,depth:m,prefixData:w,prefixWidth:E,complex:S}}}function aq(e,t,r){let n=t.split(/\./g),i=e.find(e=>e.name===n[0]);if(!i)return r;for(let e=1;e<n.length;e++){let t=i.value;if(!i.isLabelGroup)return r;i=t.find(t=>t.name===n[e])}return i?i.value:r}class aY{constructor(){this.fetchOptions={credentials:"same-origin"},this.parsers={VICAR2:e=>new aj().parse(e)}}load(e){return fetch(e,this.fetchOptions).then(t=>{if(!t.ok)throw Error(`PDSLoader: Failed to load file "${e}" with status ${t.status} : ${t.statusText}`);return t.arrayBuffer()}).then(e=>this.parse(e))}parse(e){let t;e instanceof Uint8Array?t=e:t=new Uint8Array(e);let r=function(e){let t=(e=(e=e.replace(/\/\*.*[\n\r]/g,"\n")).replace(/[\s\n\r]*=[\s\n\r]*/g," = ")).split(/\n/g).filter(e=>!!e.trim()),r=[];for(let e=0,n=t.length;e<n;e++){let n=t[e];if(/=/.test(n)){let i=n.split(/=/),a=i[0],o=i[1];if(/^"/.test(o.trim())){let r=/"$/;for(;1===o.trim().length||!r.test(o.trim());)o+="\n"+t[++e]}else if(/^\(/.test(o.trim()))for(;!/\)$/.test(o.trim());)o+=t[++e];r.push(a.trim(),o.trim())}else r.push(n.trim(),null)}let n=[];return!function e(t,r,n=0,i=null){for(let a=n,o=t.length;a<o;a+=2){let n=t[a].trim();if("END"===n)return t.length-1;let o=t[a+1];switch(n){case"END_GROUP":case"END_OBJECT":if(!o||o===i)return a;throw Error(`PDSLoader: Didn't find matching group end label for "${i}".`);case"GROUP":case"OBJECT":{let n=[];a=e(t,n,a+2,o),o in r&&console.warn(`PDSLoader: Found group with duplicate name "${o}".`),r.push({isLabelGroup:!0,name:o,value:n});break}default:o=null===o?null:function e(t,r){return"("===t[0]?t.replace(/[()]/g,"").split(/,/g).map(t=>e(t.trim(),r)):'"'===t[0]?t.substring(1,t.length-1).replace(/""/g,'"'):isNaN(t)?(/^\w+$/.test(t)&&console.warn(`PDSLoader: Found enumeration ${t} for label "${r}" but returning as a string.`),t):Number(t)}(o,n),r.push({name:n,value:o})}}if(null===i)throw Error("PDSLoader: Didn't find END token when parsing labels.");throw Error(`PDSLoader: Didn't find matching group end label for group "${i}".`)}(r,n),n}(function(e){let t=/[\r\n]\s*END[\r\n]$/,r="";for(let n=0,i=e.length;n<i&&!t.test(r+=String.fromCharCode(e[n]));n++);if(t.test(r)||t.test(r.trim()+"\n"))return r;throw Error("PDSLoader: END not found to terminate header.")}(t)),n=aq(r,"LABEL_RECORDS",1),i=aq(r,"RECORD_BYTES");if("FIXED_LENGTH"!==aq(r,"RECORD_TYPE"))return console.warn("PDSLoader: Non FIXED_LENGTH record types not supported"),Promise.resolve(null);let a=[];for(let e in r){let{name:t,value:n}=r[e];if(/^\^/.test(t)){if(Array.isArray(n)){let[e,t]=n}else("number"==typeof n||/<BYTES>/.test(n))&&/<BYTES>/.test(n)&&n.replace(/<BYTES>/,"");a.push({name:t.replace(/^\^/,""),value:null})}}let o={};o.labels=r,o.product=null,o.products=null;let s=0===a.length,l=2===a.length&&void 0!==aq(a,"IMAGE")&&void 0!==aq(a,"IMAGE_HEADER")&&"number"==typeof aq(r,"^IMAGE")&&"number"==typeof aq(r,"^IMAGE_HEADER")&&"VICAR2"===aq(r,"IMAGE_HEADER.HEADER_TYPE");if(s||l){let e=aq(r,"IMAGE_HEADER.HEADER_TYPE"),a=this.parsers[e];if(a){if("VICAR2"===e){let e=new Uint8Array(t.buffer,t.byteOffset+n*i);o.product=a(e)}else console.warn("PDSLoader: Could not parse PDS product.")}else console.warn(`PDSLoader: No parser available for embedded format "${e}".`)}else o.products=a,console.warn("PDSLoader: File contains product pointers which are not yet supported beyond IMAGE and IMAGE_HEADER for Vicar files.");return Promise.resolve(o)}}class aJ extends aj{constructor(e=aN){super(),this.manager=e}load(e,t=new iC){let r=this.manager;return r.itemStart(e),super.load(e).then(e=>this.parse(e,t)).catch(t=>{throw r.itemError(e,t),t}).finally(t=>{r.itemEnd(e)})}parse(e,t=new iC){let r=e;(e instanceof ArrayBuffer||e instanceof Uint8Array)&&(r=super.parse(e));let n=-1/0,i=r.width*r.height;for(let e=0;e<i;e++){let t=r.data[0*i+e],a=r.data[1*i+e],o=r.data[2*i+e];t&&(n=Math.max(n,t)),a&&(n=Math.max(n,a)),o&&(n=Math.max(n,o))}let a=n;r.data instanceof Float32Array||r.data instanceof Float64Array?r.data instanceof Uint8Array&&(a=255):a=2**Math.ceil(Math.log(n)/Math.LN2);let o=new Float32Array(4*i);for(let e=0;e<i;e++){let t,n;let s=r.data[0*i+e]/a;1===r.depth?(t=s,n=s):2===r.depth?(t=r.data[1*i+e]/a,n=0):(t=r.data[1*i+e]/a,n=r.data[2*i+e]/a),o[4*e+0]=1*s,o[4*e+1]=1*t,o[4*e+2]=1*n,o[4*e+3]=1}return t.image.width=r.width,t.image.height=r.height,t.image.data=o,t.minFilter=1008,t.magFilter=1006,t.format=1023,t.type=1015,t.flipY=!0,t.generateMipmaps=!0,t.colorSpace=_,t.needsUpdate=!0,r.texture=t,r}}const a$=new rM(-1,1,1,-1,0,1),aZ=new class extends tP{constructor(){super(),this.setAttribute("position",new tM([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new tM([0,2,0,0,2,0],2))}};class aK{constructor(e){this._mesh=new tY(aZ,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,a$)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}const aQ=async(e,t,r)=>{if("undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas)return e.convertToBlob({type:t,quality:r||.9});if(e instanceof HTMLCanvasElement)return new Promise((n,i)=>{e.toBlob(e=>{e?n(e):i(Error("Failed to convert canvas to blob"))},t,r||.9)});throw Error("Unsupported canvas element")},a0=async e=>{let t,r;if("undefined"==typeof createImageBitmap)throw Error("createImageBitmap() not supported.");let{source:n,mimeType:i,quality:a,flipY:o}=e;if((n instanceof Uint8Array||n instanceof Uint8ClampedArray)&&"sourceMimeType"in e)t=new Blob([n],{type:e.sourceMimeType});else if(n instanceof ImageData)t=n;else throw Error("Invalid source image");let s=await createImageBitmap(t),l=s.width,h=s.height;"undefined"!=typeof OffscreenCanvas?r=new OffscreenCanvas(l,h):((r=document.createElement("canvas")).width=l,r.height=h);let u=r.getContext("2d");if(!u)throw Error("Failed to create canvas Context");!0===o&&(u.translate(0,h),u.scale(1,-1)),u.drawImage(s,0,0,l,h);let c=await aQ(r,i,a||.9);return{data:new Uint8Array(await c.arrayBuffer()),mimeType:i,width:l,height:h}},a1=(e,t,r)=>{let n;switch(e){case 1009:n=new Uint8ClampedArray(t*r*4);break;case 1016:n=new Uint16Array(t*r*4);break;case 1014:n=new Uint32Array(t*r*4);break;case 1010:n=new Int8Array(t*r*4);break;case 1011:n=new Int16Array(t*r*4);break;case 1013:n=new Int32Array(t*r*4);break;case 1015:n=new Float32Array(t*r*4);break;default:throw Error("Unsupported data type")}return n},a2=(e,r,n,i)=>{if(void 0!==t)return t;let a=new Q(1,1,i);r.setRenderTarget(a);let o=new tY(new rh,new tf({color:16777215}));r.render(o,n),r.setRenderTarget(null);let s=a1(e,a.width,a.height);return r.readRenderTargetPixels(a,0,0,a.width,a.height,s),a.dispose(),o.geometry.dispose(),o.material.dispose(),t=0!==s[0]};class a3{constructor(e){var t,r,n,i,a,o,s,l,h,u,c,d,p,f,m,g;this._rendererIsDisposable=!1,this._supportsReadPixels=!0,this.render=()=>{this._renderer.setRenderTarget(this._renderTarget);try{this._renderer.render(this._scene,this._camera)}catch(e){throw this._renderer.setRenderTarget(null),e}this._renderer.setRenderTarget(null)},this._width=e.width,this._height=e.height,this._type=e.type,this._colorSpace=e.colorSpace;let _={format:1023,depthBuffer:!1,stencilBuffer:!1,type:this._type,colorSpace:this._colorSpace,anisotropy:(null===(t=e.renderTargetOptions)||void 0===t?void 0:t.anisotropy)!==void 0?null===(r=e.renderTargetOptions)||void 0===r?void 0:r.anisotropy:1,generateMipmaps:(null===(n=e.renderTargetOptions)||void 0===n?void 0:n.generateMipmaps)!==void 0&&(null===(i=e.renderTargetOptions)||void 0===i?void 0:i.generateMipmaps),magFilter:(null===(a=e.renderTargetOptions)||void 0===a?void 0:a.magFilter)!==void 0?null===(o=e.renderTargetOptions)||void 0===o?void 0:o.magFilter:1006,minFilter:(null===(s=e.renderTargetOptions)||void 0===s?void 0:s.minFilter)!==void 0?null===(l=e.renderTargetOptions)||void 0===l?void 0:l.minFilter:1006,samples:(null===(h=e.renderTargetOptions)||void 0===h?void 0:h.samples)!==void 0?null===(u=e.renderTargetOptions)||void 0===u?void 0:u.samples:void 0,wrapS:(null===(c=e.renderTargetOptions)||void 0===c?void 0:c.wrapS)!==void 0?null===(d=e.renderTargetOptions)||void 0===d?void 0:d.wrapS:1001,wrapT:(null===(p=e.renderTargetOptions)||void 0===p?void 0:p.wrapT)!==void 0?null===(f=e.renderTargetOptions)||void 0===f?void 0:f.wrapT:1001};if(this._material=e.material,e.renderer?this._renderer=e.renderer:(this._renderer=a3.instantiateRenderer(),this._rendererIsDisposable=!0),this._scene=new iR,this._camera=new rM,this._camera.position.set(0,0,10),this._camera.left=-.5,this._camera.right=.5,this._camera.top=.5,this._camera.bottom=-.5,this._camera.updateProjectionMatrix(),!a2(this._type,this._renderer,this._camera,_)){let e;1016===this._type&&(e=this._renderer.extensions.has("EXT_color_buffer_float")?1015:void 0),void 0!==e?(console.warn(`This browser does not support reading pixels from ${this._type} RenderTargets, switching to 1015`),this._type=e):(this._supportsReadPixels=!1,console.warn("This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown"))}this._quad=new tY(new rh,this._material),this._quad.geometry.computeBoundingBox(),this._scene.add(this._quad),this._renderTarget=new Q(this.width,this.height,_),this._renderTarget.texture.mapping=(null===(m=e.renderTargetOptions)||void 0===m?void 0:m.mapping)!==void 0?null===(g=e.renderTargetOptions)||void 0===g?void 0:g.mapping:300}static instantiateRenderer(){let e=new iA;return e.setSize(128,128),e}toArray(){if(!this._supportsReadPixels)throw Error("Can't read pixels in this browser");let e=a1(this._type,this._width,this._height);return this._renderer.readRenderTargetPixels(this._renderTarget,0,0,this._width,this._height,e),e}toDataTexture(e){let t=new iC(this.toArray(),this.width,this.height,1023,this._type,(null==e?void 0:e.mapping)||300,(null==e?void 0:e.wrapS)||1001,(null==e?void 0:e.wrapT)||1001,(null==e?void 0:e.magFilter)||1006,(null==e?void 0:e.minFilter)||1006,(null==e?void 0:e.anisotropy)||1,_);return t.generateMipmaps=(null==e?void 0:e.generateMipmaps)!==void 0&&(null==e?void 0:e.generateMipmaps),t}disposeOnDemandRenderer(){this._renderer.setRenderTarget(null),this._rendererIsDisposable&&(this._renderer.dispose(),this._renderer.forceContextLoss())}dispose(e){this.disposeOnDemandRenderer(),e&&this.renderTarget.dispose(),this.material instanceof t1&&Object.values(this.material.uniforms).forEach(e=>{e.value instanceof $&&e.value.dispose()}),Object.values(this.material).forEach(e=>{e instanceof $&&e.dispose()}),this.material.dispose(),this._quad.geometry.dispose()}get width(){return this._width}set width(e){this._width=e,this._renderTarget.setSize(this._width,this._height)}get height(){return this._height}set height(e){this._height=e,this._renderTarget.setSize(this._width,this._height)}get renderer(){return this._renderer}get renderTarget(){return this._renderTarget}set renderTarget(e){this._renderTarget=e,this._width=e.width,this._height=e.height}get material(){return this._material}get type(){return this._type}get colorSpace(){return this._colorSpace}}const a4=e=>{let t;if(e instanceof iC){if(!(e.image.data instanceof Uint16Array)&&!(e.image.data instanceof Float32Array))throw Error("Provided image is not HDR");t=e}else t=new iC(e.data,e.width,e.height,"format"in e?e.format:1023,e.type,300,1e3,1e3,1006,1006,1,"colorSpace"in e&&"srgb"===e.colorSpace?e.colorSpace:_),"header"in e&&"gamma"in e&&(t.flipY=!0),t.needsUpdate=!0;return t},a5=`
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,a6=`
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform sampler2D sdr;
uniform sampler2D hdr;
uniform vec3 gamma;
uniform vec3 offsetSdr;
uniform vec3 offsetHdr;
uniform float minLog2;
uniform float maxLog2;

varying vec2 vUv;

void main() {
  vec3 sdrColor = texture2D(sdr, vUv).rgb;
  vec3 hdrColor = texture2D(hdr, vUv).rgb;

  vec3 pixelGain = (hdrColor + offsetHdr) / (sdrColor + offsetSdr);
  vec3 logRecovery = (log2(pixelGain) - minLog2) / (maxLog2 - minLog2);
  vec3 clampedRecovery = saturate(logRecovery);
  gl_FragColor = vec4(pow(clampedRecovery, gamma), 1.0);
}
`;class a8 extends t1{constructor({sdr:e,hdr:t,offsetSdr:r,offsetHdr:n,maxContentBoost:i,minContentBoost:a,gamma:o}){if(!i)throw Error("maxContentBoost is required");if(!e)throw Error("sdr is required");if(!t)throw Error("hdr is required");let s=o||[1,1,1],l=r||[1/64,1/64,1/64],h=n||[1/64,1/64,1/64],u=a||1,c=Math.max(i,1.0001);super({name:"GainMapEncoderMaterial",vertexShader:a5,fragmentShader:a6,uniforms:{sdr:{value:e},hdr:{value:t},gamma:{value:new er().fromArray(s)},offsetSdr:{value:new er().fromArray(l)},offsetHdr:{value:new er().fromArray(h)},minLog2:{value:Math.log2(u)},maxLog2:{value:Math.log2(c)}},blending:0,depthTest:!1,depthWrite:!1}),this._minContentBoost=u,this._maxContentBoost=c,this._offsetSdr=l,this._offsetHdr=h,this._gamma=s,this.needsUpdate=!0,this.uniformsNeedUpdate=!0}get gamma(){return this._gamma}set gamma(e){this._gamma=e,this.uniforms.gamma.value=new er().fromArray(e)}get offsetHdr(){return this._offsetHdr}set offsetHdr(e){this._offsetHdr=e,this.uniforms.offsetHdr.value=new er().fromArray(e)}get offsetSdr(){return this._offsetSdr}set offsetSdr(e){this._offsetSdr=e,this.uniforms.offsetSdr.value=new er().fromArray(e)}get minContentBoost(){return this._minContentBoost}set minContentBoost(e){this._minContentBoost=e,this.uniforms.minLog2.value=Math.log2(e)}get maxContentBoost(){return this._maxContentBoost}set maxContentBoost(e){this._maxContentBoost=e,this.uniforms.maxLog2.value=Math.log2(e)}get gainMapMin(){return[Math.log2(this._minContentBoost),Math.log2(this._minContentBoost),Math.log2(this._minContentBoost)]}get gainMapMax(){return[Math.log2(this._maxContentBoost),Math.log2(this._maxContentBoost),Math.log2(this._maxContentBoost)]}get hdrCapacityMin(){return Math.min(Math.max(0,this.gainMapMin[0]),Math.max(0,this.gainMapMin[1]),Math.max(0,this.gainMapMin[2]))}get hdrCapacityMax(){return Math.max(Math.max(0,this.gainMapMax[0]),Math.max(0,this.gainMapMax[1]),Math.max(0,this.gainMapMax[2]))}}const a7=e=>{let{image:t,sdr:r,renderer:n}=e,i=a4(t),a=new a8({...e,sdr:r.renderTarget.texture,hdr:i}),o=new a3({width:i.image.width,height:i.image.height,type:1009,colorSpace:_,material:a,renderer:n,renderTargetOptions:e.renderTargetOptions});try{o.render()}catch(e){throw o.disposeOnDemandRenderer(),e}return o},a9=`
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,oe=`
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif

uniform sampler2D map;
uniform float brightness;
uniform float contrast;
uniform float saturation;
uniform float exposure;

varying vec2 vUv;

mat4 brightnessMatrix( float brightness ) {
  return mat4(
    1, 0, 0, 0,
    0, 1, 0, 0,
    0, 0, 1, 0,
    brightness, brightness, brightness, 1
  );
}

mat4 contrastMatrix( float contrast ) {
  float t = ( 1.0 - contrast ) / 2.0;
  return mat4(
    contrast, 0, 0, 0,
    0, contrast, 0, 0,
    0, 0, contrast, 0,
    t, t, t, 1
  );
}

mat4 saturationMatrix( float saturation ) {
  vec3 luminance = vec3( 0.3086, 0.6094, 0.0820 );
  float oneMinusSat = 1.0 - saturation;
  vec3 red = vec3( luminance.x * oneMinusSat );
  red+= vec3( saturation, 0, 0 );
  vec3 green = vec3( luminance.y * oneMinusSat );
  green += vec3( 0, saturation, 0 );
  vec3 blue = vec3( luminance.z * oneMinusSat );
  blue += vec3( 0, 0, saturation );
  return mat4(
    red,     0,
    green,   0,
    blue,    0,
    0, 0, 0, 1
  );
}

vec3 RRTAndODTFit( vec3 v ) {
  vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
  vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
  return a / b;
}

vec3 ACESFilmicToneMapping( vec3 color ) {
  // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT
  const mat3 ACESInputMat = mat3(
    vec3( 0.59719, 0.07600, 0.02840 ), // transposed from source
    vec3( 0.35458, 0.90834, 0.13383 ),
    vec3( 0.04823, 0.01566, 0.83777 )
  );
  // ODT_SAT => XYZ => D60_2_D65 => sRGB
  const mat3 ACESOutputMat = mat3(
    vec3(  1.60475, -0.10208, -0.00327 ), // transposed from source
    vec3( -0.53108,  1.10813, -0.07276 ),
    vec3( -0.07367, -0.00605,  1.07602 )
  );
  color = ACESInputMat * color;
  // Apply RRT and ODT
  color = RRTAndODTFit( color );
  color = ACESOutputMat * color;
  // Clamp to [0, 1]
  return saturate( color );
}

// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf
vec3 ReinhardToneMapping( vec3 color ) {
  return saturate( color / ( vec3( 1.0 ) + color ) );
}

// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/
vec3 CineonToneMapping( vec3 color ) {
  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson
  color = max( vec3( 0.0 ), color - 0.004 );
  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}

// nothing
vec3 LinearToneMapping ( vec3 color ) {
  return color;
}


void main() {
  vec4 color = texture2D(map, vUv);

  vec4 exposed = vec4(exposure * color.rgb, color.a);

  vec4 tonemapped = vec4(TONEMAPPING_FUNCTION(exposed.rgb), color.a);

  vec4 adjusted =
    brightnessMatrix( brightness ) *
    contrastMatrix( contrast ) *
    saturationMatrix( saturation ) *
    tonemapped;

  gl_FragColor = adjusted;
}
`;class ot extends t1{constructor({map:e,toneMapping:t}){super({name:"SDRMaterial",vertexShader:a9,fragmentShader:oe,uniforms:{map:{value:e},brightness:{value:0},contrast:{value:1},saturation:{value:1},exposure:{value:1}},blending:0,depthTest:!1,depthWrite:!1}),this._brightness=0,this._contrast=1,this._saturation=1,this._exposure=1,this._map=e,this.toneMapping=this._toneMapping=t||4,this.needsUpdate=!0,this.uniformsNeedUpdate=!0}get toneMapping(){return this._toneMapping}set toneMapping(e){let t=!1;switch(e){case 4:this.defines.TONEMAPPING_FUNCTION="ACESFilmicToneMapping",t=!0;break;case 2:this.defines.TONEMAPPING_FUNCTION="ReinhardToneMapping",t=!0;break;case 3:this.defines.TONEMAPPING_FUNCTION="CineonToneMapping",t=!0;break;case 1:this.defines.TONEMAPPING_FUNCTION="LinearToneMapping",t=!0;break;default:console.error(`Unsupported toneMapping: ${e}. Using LinearToneMapping.`),this.defines.TONEMAPPING_FUNCTION="LinearToneMapping",this._toneMapping=1}t&&(this._toneMapping=e),this.needsUpdate=!0}get brightness(){return this._brightness}set brightness(e){this._brightness=e,this.uniforms.brightness.value=e}get contrast(){return this._contrast}set contrast(e){this._contrast=e,this.uniforms.contrast.value=e}get saturation(){return this._saturation}set saturation(e){this._saturation=e,this.uniforms.saturation.value=e}get exposure(){return this._exposure}set exposure(e){this._exposure=e,this.uniforms.exposure.value=e}get map(){return this._map}set map(e){this._map=e,this.uniforms.map.value=e}}const or=(e,t,r,n)=>{e.needsUpdate=!0;let i=new a3({width:e.image.width,height:e.image.height,type:1009,colorSpace:g,material:new ot({map:e,toneMapping:r}),renderer:t,renderTargetOptions:n});try{i.render()}catch(e){throw i.disposeOnDemandRenderer(),e}return i},on=e=>{let{image:t,renderer:r}=e,n=a4(t),i=or(n,r,e.toneMapping,e.renderTargetOptions),a=a7({...e,image:n,sdr:i,renderer:i.renderer});return{sdr:i,gainMap:a,hdr:n,getMetadata:()=>({gainMapMax:a.material.gainMapMax,gainMapMin:a.material.gainMapMin,gamma:a.material.gamma,hdrCapacityMax:a.material.hdrCapacityMax,hdrCapacityMin:a.material.hdrCapacityMin,offsetHdr:a.material.offsetHdr,offsetSdr:a.material.offsetSdr})}},oi=`
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,oa=`
precision mediump float;

#ifndef CELL_SIZE
  #define CELL_SIZE 2
#endif

#ifndef COMPARE_FUNCTION
  #define COMPARE_FUNCTION max
#endif

#ifndef INITIAL_VALUE
  #define INITIAL_VALUE 0
#endif

uniform sampler2D map;
uniform vec2 u_srcResolution;

varying vec2 vUv;

void main() {
  // compute the first pixel the source cell
  vec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);

  // one pixel in source
  vec2 onePixel = vec2(1) / u_srcResolution;

  // uv for first pixel in cell. +0.5 for center of pixel
  vec2 uv = (srcPixel + 0.5) * onePixel;

  vec4 resultColor = vec4(INITIAL_VALUE);

  for (int y = 0; y < CELL_SIZE; ++y) {
    for (int x = 0; x < CELL_SIZE; ++x) {
      resultColor = COMPARE_FUNCTION(resultColor, texture2D(map, uv + vec2(x, y) * onePixel));
    }
  }

  gl_FragColor = resultColor;
}
`,oo=(e,t="max",r)=>{let n=a4(e),i=new t1({vertexShader:oi,fragmentShader:oa,uniforms:{u_srcResolution:{value:new N(n.image.width,n.image.height)},map:{value:n}},defines:{CELL_SIZE:2,COMPARE_FUNCTION:t,INITIAL_VALUE:"max"===t?0:65504}});n.needsUpdate=!0,i.needsUpdate=!0;let a=n.image.width,o=n.image.height,s=new a3({width:a,height:o,type:n.type,colorSpace:n.colorSpace,material:i,renderer:r}),l=[];for(;a>1||o>1;){let e=new Q(a=Math.max(1,(a+2-1)/2|0),o=Math.max(1,(o+2-1)/2|0),{type:s.type,format:n.format,colorSpace:s.colorSpace,minFilter:1003,magFilter:1003,wrapS:1001,wrapT:1001,generateMipmaps:!1,depthBuffer:!1,stencilBuffer:!1});l.push(e)}a=n.image.width,o=n.image.height,l.forEach(e=>{a=Math.max(1,(a+2-1)/2|0),o=Math.max(1,(o+2-1)/2|0),s.renderTarget=e,s.render(),i.uniforms.map.value=e.texture,i.uniforms.u_srcResolution.value.x=a,i.uniforms.u_srcResolution.value.y=o});let h=s.toArray();return s.dispose(),l.forEach(e=>e.dispose()),[1015===s.type?h[0]:tg.fromHalfFloat(h[0]),1015===s.type?h[1]:tg.fromHalfFloat(h[1]),1015===s.type?h[2]:tg.fromHalfFloat(h[2])]};var os={},ol=os={};function oh(){throw Error("setTimeout has not been defined")}function ou(){throw Error("clearTimeout has not been defined")}function oc(e){if(i===setTimeout)return setTimeout(e,0);if((i===oh||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:oh}catch(e){i=oh}try{a="function"==typeof clearTimeout?clearTimeout:ou}catch(e){a=ou}}();var od=[],op=!1,of=-1;function om(){op&&o&&(op=!1,o.length?od=o.concat(od):of=-1,od.length&&og())}function og(){if(!op){var e=oc(om);op=!0;for(var t=od.length;t;){for(o=od,od=[];++of<t;)o&&o[of].run();of=-1,t=od.length}o=null,op=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===ou||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function o_(e,t){this.fun=e,this.array=t}function ov(){}ol.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];od.push(new o_(e,t)),1!==od.length||op||oc(og)},o_.prototype.run=function(){this.fun.apply(null,this.array)},ol.title="browser",ol.browser=!0,ol.env={},ol.argv=[],ol.version="",ol.versions={},ol.on=ov,ol.addListener=ov,ol.once=ov,ol.off=ov,ol.removeListener=ov,ol.removeAllListeners=ov,ol.emit=ov,ol.prependListener=ov,ol.prependOnceListener=ov,ol.listeners=function(e){return[]},ol.binding=function(e){throw Error("process.binding is not supported")},ol.cwd=function(){return"/"},ol.chdir=function(e){throw Error("process.chdir is not supported")},ol.umask=function(){return 0},s=function(e){var t,r,n=function(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");-1===r&&(r=t);var n=r===t?0:4-r%4;return[r,n]}(e),i=n[0],a=n[1],o=new oE((i+a)*3/4-a),s=0,l=a>0?i-4:i;for(r=0;r<l;r+=4)t=ox[e.charCodeAt(r)]<<18|ox[e.charCodeAt(r+1)]<<12|ox[e.charCodeAt(r+2)]<<6|ox[e.charCodeAt(r+3)],o[s++]=t>>16&255,o[s++]=t>>8&255,o[s++]=255&t;return 2===a&&(t=ox[e.charCodeAt(r)]<<2|ox[e.charCodeAt(r+1)]>>4,o[s++]=255&t),1===a&&(t=ox[e.charCodeAt(r)]<<10|ox[e.charCodeAt(r+1)]<<4|ox[e.charCodeAt(r+2)]>>2,o[s++]=t>>8&255,o[s++]=255&t),o},l=function(e){for(var t,r=e.length,n=r%3,i=[],a=0,o=r-n;a<o;a+=16383)i.push(function(e,t,r){for(var n,i=[],a=t;a<r;a+=3)i.push(oy[(n=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]))>>18&63]+oy[n>>12&63]+oy[n>>6&63]+oy[63&n]);return i.join("")}(e,a,a+16383>o?o:a+16383));return 1===n?i.push(oy[(t=e[r-1])>>2]+oy[t<<4&63]+"=="):2===n&&i.push(oy[(t=(e[r-2]<<8)+e[r-1])>>10]+oy[t>>4&63]+oy[t<<2&63]+"="),i.join("")};for(var oy=[],ox=[],oE="undefined"!=typeof Uint8Array?Uint8Array:Array,oM="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",oS=0,ob=oM.length;oS<ob;++oS)oy[oS]=oM[oS],ox[oM.charCodeAt(oS)]=oS;ox["-".charCodeAt(0)]=62,ox["_".charCodeAt(0)]=63,h=function(e,t,r,n,i){var a,o,s=8*i-n-1,l=(1<<s)-1,h=l>>1,u=-7,c=r?i-1:0,d=r?-1:1,p=e[t+c];for(c+=d,a=p&(1<<-u)-1,p>>=-u,u+=s;u>0;a=256*a+e[t+c],c+=d,u-=8);for(o=a&(1<<-u)-1,a>>=-u,u+=n;u>0;o=256*o+e[t+c],c+=d,u-=8);if(0===a)a=1-h;else{if(a===l)return o?NaN:1/0*(p?-1:1);o+=Math.pow(2,n),a-=h}return(p?-1:1)*o*Math.pow(2,a-n)},u=function(e,t,r,n,i,a){var o,s,l,h=8*a-i-1,u=(1<<h)-1,c=u>>1,d=23===i?5960464477539062e-23:0,p=n?0:a-1,f=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(isNaN(t=Math.abs(t))||t===1/0?(s=isNaN(t)?1:0,o=u):(o=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-o))<1&&(o--,l*=2),o+c>=1?t+=d/l:t+=d*Math.pow(2,1-c),t*l>=2&&(o++,l/=2),o+c>=u?(s=0,o=u):o+c>=1?(s=(t*l-1)*Math.pow(2,i),o+=c):(s=t*Math.pow(2,c-1)*Math.pow(2,i),o=0));i>=8;e[r+p]=255&s,p+=f,s/=256,i-=8);for(o=o<<i|s,h+=i;h>0;e[r+p]=255&o,p+=f,o/=256,h-=8);e[r+p-f]|=128*m};const oT="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function ow(e){if(e>2147483647)throw RangeError('The value "'+e+'" is invalid for option "size"');let t=new Uint8Array(e);return Object.setPrototypeOf(t,oA.prototype),t}function oA(e,t,r){if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return oP(e)}return oR(e,t,r)}function oR(e,t,r){if("string"==typeof e)return function(e,t){if(("string"!=typeof t||""===t)&&(t="utf8"),!oA.isEncoding(t))throw TypeError("Unknown encoding: "+t);let r=0|oI(e,t),n=ow(r),i=n.write(e,t);return i!==r&&(n=n.slice(0,i)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(o3(e,Uint8Array)){let t=new Uint8Array(e);return oN(t.buffer,t.byteOffset,t.byteLength)}return oL(e)}(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(o3(e,ArrayBuffer)||e&&o3(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(o3(e,SharedArrayBuffer)||e&&o3(e.buffer,SharedArrayBuffer)))return oN(e,t,r);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');let n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return oA.from(n,t,r);let i=function(e){var t;if(oA.isBuffer(e)){let t=0|oU(e.length),r=ow(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||(t=e.length)!=t?ow(0):oL(e):"Buffer"===e.type&&Array.isArray(e.data)?oL(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return oA.from(e[Symbol.toPrimitive]("string"),t,r);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function oC(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function oP(e){return oC(e),ow(e<0?0:0|oU(e))}function oL(e){let t=e.length<0?0:0|oU(e.length),r=ow(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function oN(e,t,r){let n;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),oA.prototype),n}function oU(e){if(e>=2147483647)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function oI(e,t){if(oA.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||o3(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);let r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return o0(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return o1(e).length;default:if(i)return n?-1:o0(e).length;t=(""+t).toLowerCase(),i=!0}}function oD(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===r||r>this.length)&&(r=this.length),r<=0||(r>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,r){let n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let i="";for(let n=t;n<r;++n)i+=o4[e[n]];return i}(this,t,r);case"utf8":case"utf-8":return oz(this,t,r);case"ascii":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}(this,t,r);case"latin1":case"binary":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}(this,t,r);case"base64":var i,a;return i=t,a=r,0===i&&a===this.length?l(this):l(this.slice(i,a));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,r){let n=e.slice(t,r),i="";for(let e=0;e<n.length-1;e+=2)i+=String.fromCharCode(n[e]+256*n[e+1]);return i}(this,t,r);default:if(n)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function oO(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function oF(e,t,r,n,i){var a;if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),(a=r=+r)!=a&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return -1;r=e.length-1}else if(r<0){if(!i)return -1;r=0}if("string"==typeof t&&(t=oA.from(t,n)),oA.isBuffer(t))return 0===t.length?-1:oB(e,t,r,n,i);if("number"==typeof t)return(t&=255,"function"==typeof Uint8Array.prototype.indexOf)?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):oB(e,[t],r,n,i);throw TypeError("val must be string, number or Buffer")}function oB(e,t,r,n,i){let a,o=1,s=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;o=2,s/=2,l/=2,r/=2}function h(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(i){let n=-1;for(a=r;a<s;a++)if(h(e,a)===h(t,-1===n?0:a-n)){if(-1===n&&(n=a),a-n+1===l)return n*o}else -1!==n&&(a-=a-n),n=-1}else for(r+l>s&&(r=s-l),a=r;a>=0;a--){let r=!0;for(let n=0;n<l;n++)if(h(e,a+n)!==h(t,n)){r=!1;break}if(r)return a}return -1}function oz(e,t,r){r=Math.min(e.length,r);let n=[],i=t;for(;i<r;){let t=e[i],a=null,o=t>239?4:t>223?3:t>191?2:1;if(i+o<=r){let r,n,s,l;switch(o){case 1:t<128&&(a=t);break;case 2:(192&(r=e[i+1]))==128&&(l=(31&t)<<6|63&r)>127&&(a=l);break;case 3:r=e[i+1],n=e[i+2],(192&r)==128&&(192&n)==128&&(l=(15&t)<<12|(63&r)<<6|63&n)>2047&&(l<55296||l>57343)&&(a=l);break;case 4:r=e[i+1],n=e[i+2],s=e[i+3],(192&r)==128&&(192&n)==128&&(192&s)==128&&(l=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&s)>65535&&l<1114112&&(a=l)}}null===a?(a=65533,o=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),i+=o}return function(e){let t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}function ok(e,t,r){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>r)throw RangeError("Trying to access beyond buffer length")}function oH(e,t,r,n,i,a){if(!oA.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<a)throw RangeError('"value" argument is out of bounds');if(r+n>e.length)throw RangeError("Index out of range")}function oV(e,t,r,n,i){o$(t,n,i,e,r,7);let a=Number(t&BigInt(4294967295));e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a,a>>=8,e[r++]=a;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,r}function oG(e,t,r,n,i){o$(t,n,i,e,r,7);let a=Number(t&BigInt(4294967295));e[r+7]=a,a>>=8,e[r+6]=a,a>>=8,e[r+5]=a,a>>=8,e[r+4]=a;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=o,o>>=8,e[r+2]=o,o>>=8,e[r+1]=o,o>>=8,e[r]=o,r+8}function oW(e,t,r,n,i,a){if(r+n>e.length||r<0)throw RangeError("Index out of range")}function oX(e,t,r,n,i){return t=+t,r>>>=0,i||oW(e,t,r,4,34028234663852886e22,-34028234663852886e22),u(e,t,r,n,23,4),r+4}function oj(e,t,r,n,i){return t=+t,r>>>=0,i||oW(e,t,r,8,17976931348623157e292,-17976931348623157e292),u(e,t,r,n,52,8),r+8}oA.TYPED_ARRAY_SUPPORT=function(){try{let e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),oA.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(oA.prototype,"parent",{enumerable:!0,get:function(){if(oA.isBuffer(this))return this.buffer}}),Object.defineProperty(oA.prototype,"offset",{enumerable:!0,get:function(){if(oA.isBuffer(this))return this.byteOffset}}),oA.poolSize=8192,oA.from=function(e,t,r){return oR(e,t,r)},Object.setPrototypeOf(oA.prototype,Uint8Array.prototype),Object.setPrototypeOf(oA,Uint8Array),oA.alloc=function(e,t,r){return(oC(e),e<=0)?ow(e):void 0!==t?"string"==typeof r?ow(e).fill(t,r):ow(e).fill(t):ow(e)},oA.allocUnsafe=function(e){return oP(e)},oA.allocUnsafeSlow=function(e){return oP(e)},oA.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==oA.prototype},oA.compare=function(e,t){if(o3(e,Uint8Array)&&(e=oA.from(e,e.offset,e.byteLength)),o3(t,Uint8Array)&&(t=oA.from(t,t.offset,t.byteLength)),!oA.isBuffer(e)||!oA.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let i=0,a=Math.min(r,n);i<a;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},oA.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},oA.concat=function(e,t){let r;if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return oA.alloc(0);if(void 0===t)for(r=0,t=0;r<e.length;++r)t+=e[r].length;let n=oA.allocUnsafe(t),i=0;for(r=0;r<e.length;++r){let t=e[r];if(o3(t,Uint8Array))i+t.length>n.length?(oA.isBuffer(t)||(t=oA.from(t)),t.copy(n,i)):Uint8Array.prototype.set.call(n,t,i);else if(oA.isBuffer(t))t.copy(n,i);else throw TypeError('"list" argument must be an Array of Buffers');i+=t.length}return n},oA.byteLength=oI,oA.prototype._isBuffer=!0,oA.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)oO(this,t,t+1);return this},oA.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)oO(this,t,t+3),oO(this,t+1,t+2);return this},oA.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)oO(this,t,t+7),oO(this,t+1,t+6),oO(this,t+2,t+5),oO(this,t+3,t+4);return this},oA.prototype.toString=function(){let e=this.length;return 0===e?"":0==arguments.length?oz(this,0,e):oD.apply(this,arguments)},oA.prototype.toLocaleString=oA.prototype.toString,oA.prototype.equals=function(e){if(!oA.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===oA.compare(this,e)},oA.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},oT&&(oA.prototype[oT]=oA.prototype.inspect),oA.prototype.compare=function(e,t,r,n,i){if(o3(e,Uint8Array)&&(e=oA.from(e,e.offset,e.byteLength)),!oA.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return -1;if(t>=r)return 1;if(t>>>=0,r>>>=0,n>>>=0,i>>>=0,this===e)return 0;let a=i-n,o=r-t,s=Math.min(a,o),l=this.slice(n,i),h=e.slice(t,r);for(let e=0;e<s;++e)if(l[e]!==h[e]){a=l[e],o=h[e];break}return a<o?-1:o<a?1:0},oA.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},oA.prototype.indexOf=function(e,t,r){return oF(this,e,t,r,!0)},oA.prototype.lastIndexOf=function(e,t,r){return oF(this,e,t,r,!1)},oA.prototype.write=function(e,t,r,n){var i,a,o,s,l,h,u,c;if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let d=this.length-t;if((void 0===r||r>d)&&(r=d),e.length>0&&(r<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let p=!1;for(;;)switch(n){case"hex":return function(e,t,r,n){let i;r=Number(r)||0;let a=e.length-r;n?(n=Number(n))>a&&(n=a):n=a;let o=t.length;for(n>o/2&&(n=o/2),i=0;i<n;++i){let n=parseInt(t.substr(2*i,2),16);if(n!=n)break;e[r+i]=n}return i}(this,e,t,r);case"utf8":case"utf-8":return i=t,a=r,o2(o0(e,this.length-i),this,i,a);case"ascii":case"latin1":case"binary":return o=t,s=r,o2(function(e){let t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(e),this,o,s);case"base64":return l=t,h=r,o2(o1(e),this,l,h);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return u=t,c=r,o2(function(e,t){let r,n;let i=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=(r=e.charCodeAt(a))>>8,i.push(r%256),i.push(n);return i}(e,this.length-u),this,u,c);default:if(p)throw TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),p=!0}},oA.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},oA.prototype.slice=function(e,t){let r=this.length;e=~~e,t=void 0===t?r:~~t,e<0?(e+=r)<0&&(e=0):e>r&&(e=r),t<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);let n=this.subarray(e,t);return Object.setPrototypeOf(n,oA.prototype),n},oA.prototype.readUintLE=oA.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||ok(e,t,this.length);let n=this[e],i=1,a=0;for(;++a<t&&(i*=256);)n+=this[e+a]*i;return n},oA.prototype.readUintBE=oA.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||ok(e,t,this.length);let n=this[e+--t],i=1;for(;t>0&&(i*=256);)n+=this[e+--t]*i;return n},oA.prototype.readUint8=oA.prototype.readUInt8=function(e,t){return e>>>=0,t||ok(e,1,this.length),this[e]},oA.prototype.readUint16LE=oA.prototype.readUInt16LE=function(e,t){return e>>>=0,t||ok(e,2,this.length),this[e]|this[e+1]<<8},oA.prototype.readUint16BE=oA.prototype.readUInt16BE=function(e,t){return e>>>=0,t||ok(e,2,this.length),this[e]<<8|this[e+1]},oA.prototype.readUint32LE=oA.prototype.readUInt32LE=function(e,t){return e>>>=0,t||ok(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},oA.prototype.readUint32BE=oA.prototype.readUInt32BE=function(e,t){return e>>>=0,t||ok(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},oA.prototype.readBigUInt64LE=o5(function(e){oZ(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&oK(e,this.length-8);let n=t+256*this[++e]+65536*this[++e]+16777216*this[++e],i=this[++e]+256*this[++e]+65536*this[++e]+16777216*r;return BigInt(n)+(BigInt(i)<<BigInt(32))}),oA.prototype.readBigUInt64BE=o5(function(e){oZ(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&oK(e,this.length-8);let n=16777216*t+65536*this[++e]+256*this[++e]+this[++e],i=16777216*this[++e]+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)}),oA.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||ok(e,t,this.length);let n=this[e],i=1,a=0;for(;++a<t&&(i*=256);)n+=this[e+a]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},oA.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||ok(e,t,this.length);let n=t,i=1,a=this[e+--n];for(;n>0&&(i*=256);)a+=this[e+--n]*i;return a>=(i*=128)&&(a-=Math.pow(2,8*t)),a},oA.prototype.readInt8=function(e,t){return(e>>>=0,t||ok(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},oA.prototype.readInt16LE=function(e,t){e>>>=0,t||ok(e,2,this.length);let r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},oA.prototype.readInt16BE=function(e,t){e>>>=0,t||ok(e,2,this.length);let r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},oA.prototype.readInt32LE=function(e,t){return e>>>=0,t||ok(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},oA.prototype.readInt32BE=function(e,t){return e>>>=0,t||ok(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},oA.prototype.readBigInt64LE=o5(function(e){oZ(e>>>=0,"offset");let t=this[e],r=this[e+7];return(void 0===t||void 0===r)&&oK(e,this.length-8),(BigInt(this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24))<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+16777216*this[++e])}),oA.prototype.readBigInt64BE=o5(function(e){oZ(e>>>=0,"offset");let t=this[e],r=this[e+7];return(void 0===t||void 0===r)&&oK(e,this.length-8),(BigInt((t<<24)+65536*this[++e]+256*this[++e]+this[++e])<<BigInt(32))+BigInt(16777216*this[++e]+65536*this[++e]+256*this[++e]+r)}),oA.prototype.readFloatLE=function(e,t){return e>>>=0,t||ok(e,4,this.length),h(this,e,!0,23,4)},oA.prototype.readFloatBE=function(e,t){return e>>>=0,t||ok(e,4,this.length),h(this,e,!1,23,4)},oA.prototype.readDoubleLE=function(e,t){return e>>>=0,t||ok(e,8,this.length),h(this,e,!0,52,8)},oA.prototype.readDoubleBE=function(e,t){return e>>>=0,t||ok(e,8,this.length),h(this,e,!1,52,8)},oA.prototype.writeUintLE=oA.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;oH(this,e,t,r,n,0)}let i=1,a=0;for(this[t]=255&e;++a<r&&(i*=256);)this[t+a]=e/i&255;return t+r},oA.prototype.writeUintBE=oA.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;oH(this,e,t,r,n,0)}let i=r-1,a=1;for(this[t+i]=255&e;--i>=0&&(a*=256);)this[t+i]=e/a&255;return t+r},oA.prototype.writeUint8=oA.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,1,255,0),this[t]=255&e,t+1},oA.prototype.writeUint16LE=oA.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},oA.prototype.writeUint16BE=oA.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},oA.prototype.writeUint32LE=oA.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},oA.prototype.writeUint32BE=oA.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},oA.prototype.writeBigUInt64LE=o5(function(e,t=0){return oV(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),oA.prototype.writeBigUInt64BE=o5(function(e,t=0){return oG(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),oA.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);oH(this,e,t,r,n-1,-n)}let i=0,a=1,o=0;for(this[t]=255&e;++i<r&&(a*=256);)e<0&&0===o&&0!==this[t+i-1]&&(o=1),this[t+i]=(e/a>>0)-o&255;return t+r},oA.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);oH(this,e,t,r,n-1,-n)}let i=r-1,a=1,o=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===o&&0!==this[t+i+1]&&(o=1),this[t+i]=(e/a>>0)-o&255;return t+r},oA.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},oA.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},oA.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},oA.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},oA.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||oH(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},oA.prototype.writeBigInt64LE=o5(function(e,t=0){return oV(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),oA.prototype.writeBigInt64BE=o5(function(e,t=0){return oG(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),oA.prototype.writeFloatLE=function(e,t,r){return oX(this,e,t,!0,r)},oA.prototype.writeFloatBE=function(e,t,r){return oX(this,e,t,!1,r)},oA.prototype.writeDoubleLE=function(e,t,r){return oj(this,e,t,!0,r)},oA.prototype.writeDoubleBE=function(e,t,r){return oj(this,e,t,!1,r)},oA.prototype.copy=function(e,t,r,n){if(!oA.isBuffer(e))throw TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r||0===e.length||0===this.length)return 0;if(t<0)throw RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw RangeError("Index out of range");if(n<0)throw RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);let i=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),i},oA.prototype.fill=function(e,t,r,n){let i;if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw TypeError("encoding must be a string");if("string"==typeof n&&!oA.isEncoding(n))throw TypeError("Unknown encoding: "+n);if(1===e.length){let t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw RangeError("Out of range index");if(r<=t)return this;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{let a=oA.isBuffer(e)?e:oA.from(e,n),o=a.length;if(0===o)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=a[i%o]}return this};const oq={};function oY(e,t,r){oq[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function oJ(e){let t="",r=e.length,n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function o$(e,t,r,n,i,a){if(e>r||e<t){let n;let i="bigint"==typeof t?"n":"";throw n=a>3?0===t||t===BigInt(0)?`>= 0${i} and < 2${i} ** ${(a+1)*8}${i}`:`>= -(2${i} ** ${(a+1)*8-1}${i}) and < 2 ** ${(a+1)*8-1}${i}`:`>= ${t}${i} and <= ${r}${i}`,new oq.ERR_OUT_OF_RANGE("value",n,e)}oZ(i,"offset"),(void 0===n[i]||void 0===n[i+a])&&oK(i,n.length-(a+1))}function oZ(e,t){if("number"!=typeof e)throw new oq.ERR_INVALID_ARG_TYPE(t,"number",e)}function oK(e,t,r){if(Math.floor(e)!==e)throw oZ(e,r),new oq.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new oq.ERR_BUFFER_OUT_OF_BOUNDS;throw new oq.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}oY("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),oY("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),oY("ERR_OUT_OF_RANGE",function(e,t,r){let n=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>4294967296?i=oJ(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=oJ(i)),i+="n"),n+=` It must be ${t}. Received ${i}`},RangeError);const oQ=/[^+/0-9A-Za-z-_]/g;function o0(e,t){let r;t=t||1/0;let n=e.length,i=null,a=[];for(let o=0;o<n;++o){if((r=e.charCodeAt(o))>55295&&r<57344){if(!i){if(r>56319||o+1===n){(t-=3)>-1&&a.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&a.push(239,191,189),i=r;continue}r=(i-55296<<10|r-56320)+65536}else i&&(t-=3)>-1&&a.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;a.push(r)}else if(r<2048){if((t-=2)<0)break;a.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;a.push(r>>12|224,r>>6&63|128,63&r|128)}else if(r<1114112){if((t-=4)<0)break;a.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}else throw Error("Invalid code point")}return a}function o1(e){return s(function(e){if((e=(e=e.split("=")[0]).trim().replace(oQ,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function o2(e,t,r,n){let i;for(i=0;i<n&&!(i+r>=t.length)&&!(i>=e.length);++i)t[i+r]=e[i];return i}function o3(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}const o4=function(){let e="0123456789abcdef",t=Array(256);for(let r=0;r<16;++r){let n=16*r;for(let i=0;i<16;++i)t[n+i]=e[r]+e[i]}return t}();function o5(e){return"undefined"==typeof BigInt?o6:e}function o6(){throw Error("BigInt not supported")}var o8={};o8=new URL("libultrahdr-esm.5502015a.wasm",import.meta.url).toString();var o7=(n="file:///src/libs/libultrahdr.js",async function(e={}){e.ready=new Promise((e,t)=>{r=e,i=t}),["_main","_memory","___indirect_function_table","__embind_initialize_bindings","_fflush","onRuntimeInitialized"].forEach(t=>{Object.getOwnPropertyDescriptor(e.ready,t)||Object.defineProperty(e.ready,t,{get:()=>eu("You are getting "+t+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>eu("You are setting "+t+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})});var t,r,i,a,o,s,l,h,u,c,d,p,m,g,_,v,y,x,E,M,S,b,T,w,A,R,C,P,L,N,U=Object.assign({},e),I="./this.program",D=(e,t)=>{throw t},O="object"==typeof window,F="function"==typeof importScripts,B="object"==typeof os&&"object"==typeof os.versions&&"string"==typeof os.versions.node,z=!O&&!B&&!F;if(e.ENVIRONMENT)throw Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");var k="";if(B){if(void 0===os||!os.release||"node"!==os.release.name)throw Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var H=os.versions.node,V=H.split(".").slice(0,3);if((V=1e4*V[0]+100*V[1]+1*V[2].split("-")[0])<16e4)throw Error("This emscripten-generated code requires node v16.0.0 (detected v"+H+")");let{createRequire:t}=await f("2haic");var G=t("file:///src/libs/libultrahdr.js"),W=G("fs"),X=G("path");F&&(k=X.dirname(k)+"/"),a=(e,t)=>(e=ed(e)?new URL(e):X.normalize(e),W.readFileSync(e,t?void 0:"utf8")),s=e=>{var t=a(e,!0);return t.buffer||(t=new Uint8Array(t)),J(t.buffer),t},o=(e,t,r,n=!0)=>{e=ed(e)?new URL(e):X.normalize(e),W.readFile(e,n?void 0:"utf8",(e,i)=>{e?r(e):t(n?i.buffer:i)})},!e.thisProgram&&os.argv.length>1&&(I=os.argv[1].replace(/\\/g,"/")),os.argv.slice(2),D=(e,t)=>{throw os.exitCode=e,t},e.inspect=()=>"[Emscripten Module object]"}else if(z){if("object"==typeof os&&"function"==typeof G||"object"==typeof window||"function"==typeof importScripts)throw Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");"undefined"!=typeof read&&(a=read),s=e=>{if("function"==typeof readbuffer)return new Uint8Array(readbuffer(e));let t=read(e,"binary");return J("object"==typeof t),t},o=(e,t,r)=>{setTimeout(()=>t(s(e)))},"undefined"==typeof clearTimeout&&(globalThis.clearTimeout=e=>{}),"undefined"==typeof setTimeout&&(globalThis.setTimeout=e=>"function"==typeof e?e():eu()),"undefined"!=typeof scriptArgs&&scriptArgs,"function"==typeof quit&&(D=(e,t)=>{throw setTimeout(()=>{if(!(t instanceof ex)){let e=t;t&&"object"==typeof t&&t.stack&&(e=[t,t.stack]),q(`exiting due to exception: ${e}`)}quit(e)}),t}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)}else if(O||F){if(F?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),n&&(k=n),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",!("object"==typeof window||"function"==typeof importScripts))throw Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");a=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},F&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{if(200==n.status||0==n.status&&n.response){t(n.response);return}r()},n.onerror=r,n.send(null)}}else throw Error("environment detection error");var j=e.print||console.log.bind(console),q=e.printErr||console.error.bind(console);Object.assign(e,U),U=null,Object.getOwnPropertyDescriptor(e,t="fetchSettings")&&eu(`\`Module.${t}\` was supplied but \`${t}\` not included in INCOMING_MODULE_JS_API`),e.arguments&&e.arguments,eg("arguments","arguments_"),e.thisProgram&&(I=e.thisProgram),eg("thisProgram","thisProgram"),e.quit&&(D=e.quit),eg("quit","quit_"),J(void 0===e.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),J(void 0===e.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),J(void 0===e.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),J(void 0===e.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),J(void 0===e.read,"Module.read option was removed (modify read_ in JS)"),J(void 0===e.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),J(void 0===e.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),J(void 0===e.setWindowTitle,"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)"),J(void 0===e.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),eg("asm","wasmExports"),eg("read","read_"),eg("readAsync","readAsync"),eg("readBinary","readBinary"),eg("setWindowTitle","setWindowTitle"),J(!z,"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable."),e.wasmBinary&&(l=e.wasmBinary),eg("wasmBinary","wasmBinary"),"object"!=typeof WebAssembly&&eu("no native wasm support detected");var Y=!1;function J(e,t){e||eu("Assertion failed"+(t?": "+t:""))}function $(){var t=h.buffer;e.HEAP8=c=new Int8Array(t),e.HEAP16=p=new Int16Array(t),e.HEAPU8=d=new Uint8Array(t),e.HEAPU16=m=new Uint16Array(t),e.HEAP32=g=new Int32Array(t),e.HEAPU32=_=new Uint32Array(t),e.HEAPF32=v=new Float32Array(t),e.HEAPF64=y=new Float64Array(t)}function Z(){if(!Y){var e=rt();0==e&&(e+=4);var t=_[e>>2],r=_[e+4>>2];(34821223!=t||2310721022!=r)&&eu(`Stack overflow! Stack cookie has been overwritten at ${eS(e)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${eS(r)} ${eS(t)}`),1668509029!=_[0]&&eu("Runtime error: The application has corrupted its heap memory area (address zero)!")}}J(!e.STACK_SIZE,"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),J("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&void 0!=Int32Array.prototype.subarray&&void 0!=Int32Array.prototype.set,"JS engine does not provide full typed array support"),J(!e.wasmMemory,"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),J(!e.INITIAL_MEMORY,"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically"),function(){var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,115!==t[0]||99!==t[1])throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"}();var K=[],Q=[],ee=[],et=[],er=!1;J(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),J(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),J(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),J(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var en=0,ei=null,ea=null,eo={};function es(e){for(var t=e;;){if(!eo[e])return e;e=t+Math.random()}}function el(t){en++,e.monitorRunDependencies&&e.monitorRunDependencies(en),t?(J(!eo[t]),eo[t]=1,null===ei&&"undefined"!=typeof setInterval&&(ei=setInterval(()=>{if(Y){clearInterval(ei),ei=null;return}var e=!1;for(var t in eo)e||(e=!0,q("still waiting on run dependencies:")),q(`dependency: ${t}`);e&&q("(end of list)")},1e4))):q("warning: run dependency added without ID")}function eh(t){if(en--,e.monitorRunDependencies&&e.monitorRunDependencies(en),t?(J(eo[t]),delete eo[t]):q("warning: run dependency removed without ID"),0==en&&(null!==ei&&(clearInterval(ei),ei=null),ea)){var r=ea;ea=null,r()}}function eu(t){e.onAbort&&e.onAbort(t),q(t="Aborted("+t+")"),Y=!0,u=1;var r=new WebAssembly.RuntimeError(t);throw i(r),r}var ec=e=>e.startsWith("data:application/octet-stream;base64,"),ed=e=>e.startsWith("file://");function ep(e){return function(){J(er,`native function \`${e}\` called before runtime initialization`);var t=t3[e];return J(t,`exported native function \`${e}\` not found`),t.apply(null,arguments)}}function ef(e){if(e==x&&l)return new Uint8Array(l);if(s)return s(e);throw"both async and sync fetching of the wasm failed"}function em(e,t,r){return(function(e){if(!l&&(O||F)){if("function"==typeof fetch&&!ed(e))return fetch(e,{credentials:"same-origin"}).then(t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()}).catch(()=>ef(e));if(o)return new Promise((t,r)=>{o(e,e=>t(new Uint8Array(e)),r)})}return Promise.resolve().then(function(){return f("2haic")}).then(t=>ef(e))})(e).then(e=>WebAssembly.instantiate(e,t)).then(e=>e).then(r,e=>{q(`failed to asynchronously prepare wasm: ${e}`),ed(x)&&q(`warning: Loading from a file URI (${x}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`),eu(e)})}function eg(t,r,n=!0){Object.getOwnPropertyDescriptor(e,t)||Object.defineProperty(e,t,{configurable:!0,get(){eu(`\`Module.${t}\` has been replaced by \`${r}\``+(n?" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)":""))}})}function e_(e){return"FS_createPath"===e||"FS_createDataFile"===e||"FS_createPreloadedFile"===e||"FS_unlink"===e||"addRunDependency"===e||"FS_createLazyFile"===e||"FS_createDevice"===e||"removeRunDependency"===e}function ev(e,t){"undefined"!=typeof globalThis&&Object.defineProperty(globalThis,e,{configurable:!0,get(){eb("`"+e+"` is not longer defined by emscripten. "+t)}})}function ey(t){Object.getOwnPropertyDescriptor(e,t)||Object.defineProperty(e,t,{configurable:!0,get(){var e="'"+t+"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)";e_(t)&&(e+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),eu(e)}})}function ex(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}e.locateFile?ec(x="libultrahdr-esm.wasm")||(C=x,x=e.locateFile?e.locateFile(C,k):k+C):x=new URL(o8).href,ev("buffer","Please use HEAP8.buffer or wasmMemory.buffer"),ev("asm","Please use wasmExports instead");var eE=t=>{for(;t.length>0;)t.shift()(e)},eM=e.noExitRuntime||!0,eS=e=>(J("number"==typeof e),"0x"+(e>>>=0).toString(16).padStart(8,"0")),eb=e=>{eb.shown||(eb.shown={}),eb.shown[e]||(eb.shown[e]=1,B&&(e="warning: "+e),q(e))};function eT(e){this.excPtr=e,this.ptr=e-24,this.set_type=function(e){_[this.ptr+4>>2]=e},this.get_type=function(){return _[this.ptr+4>>2]},this.set_destructor=function(e){_[this.ptr+8>>2]=e},this.get_destructor=function(){return _[this.ptr+8>>2]},this.set_caught=function(e){e=e?1:0,c[this.ptr+12>>0]=e},this.get_caught=function(){return 0!=c[this.ptr+12>>0]},this.set_rethrown=function(e){e=e?1:0,c[this.ptr+13>>0]=e},this.get_rethrown=function(){return 0!=c[this.ptr+13>>0]},this.init=function(e,t){this.set_adjusted_ptr(0),this.set_type(e),this.set_destructor(t)},this.set_adjusted_ptr=function(e){_[this.ptr+16>>2]=e},this.get_adjusted_ptr=function(){return _[this.ptr+16>>2]},this.get_exception_ptr=function(){if(ra(this.get_type()))return _[this.excPtr>>2];var e=this.get_adjusted_ptr();return 0!==e?e:this.excPtr}}var ew={},eA=e=>{for(;e.length;){var t=e.pop();e.pop()(t)}};function eR(e){return this.fromWireType(g[e>>2])}var eC={},eP={},eL={},eN=e=>{throw new S(e)},eU=(e,t,r)=>{function n(t){var n=r(t);n.length!==e.length&&eN("Mismatched type converter count");for(var i=0;i<e.length;++i)eO(e[i],n[i])}e.forEach(function(e){eL[e]=t});var i=Array(t.length),a=[],o=0;t.forEach((e,t)=>{eP.hasOwnProperty(e)?i[t]=eP[e]:(a.push(e),eC.hasOwnProperty(e)||(eC[e]=[]),eC[e].push(()=>{i[t]=eP[e],++o===a.length&&n(i)}))}),0===a.length&&n(i)},eI=e=>{for(var t="",r=e;d[r];)t+=b[d[r++]];return t},eD=e=>{throw new T(e)};function eO(e,t,r={}){if(!("argPackAdvance"in t))throw TypeError("registerType registeredInstance requires argPackAdvance");return function(e,t,r={}){var n=t.name;if(e||eD(`type "${n}" must have a positive integer typeid pointer`),eP.hasOwnProperty(e)){if(r.ignoreDuplicateRegistrations)return;eD(`Cannot register type '${n}' twice`)}if(eP[e]=t,delete eL[e],eC.hasOwnProperty(e)){var i=eC[e];delete eC[e],i.forEach(e=>e())}}(e,t,r)}function eF(){this.allocated=[void 0],this.freelist=[]}var eB=new eF,ez=e=>{e>=eB.reserved&&0==--eB.get(e).refcount&&eB.free(e)},ek=e=>(e||eD("Cannot use deleted val. handle = "+e),eB.get(e).value),eH=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return eB.allocate({refcount:1,value:e})}},eV=e=>{if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e},eG=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(v[e>>2])};case 8:return function(e){return this.fromWireType(y[e>>3])};default:throw TypeError(`invalid float width (${t}): ${e}`)}},eW=e=>{if(void 0===e)return"_unknown";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return t>=48&&t<=57?`_${e}`:e};function eX(e,t){return({[e=eW(e)]:function(){return t.apply(this,arguments)}})[e]}var ej=(e,t,r)=>{if(void 0===e[t].overloadTable){var n=e[t];e[t]=function(){return e[t].overloadTable.hasOwnProperty(arguments.length)||eD(`Function '${r}' called with an invalid number of arguments (${arguments.length}) - expects one of (${e[t].overloadTable})!`),e[t].overloadTable[arguments.length].apply(this,arguments)},e[t].overloadTable=[],e[t].overloadTable[n.argCount]=n}},eq=(t,r,n)=>{e.hasOwnProperty(t)?((void 0===n||void 0!==e[t].overloadTable&&void 0!==e[t].overloadTable[n])&&eD(`Cannot register public name '${t}' twice`),ej(e,t,t),e.hasOwnProperty(n)&&eD(`Cannot register multiple overloads of a function with the same number of arguments (${n})!`),e[t].overloadTable[n]=r):(e[t]=r,void 0!==n&&(e[t].numArguments=n))},eY=(e,t)=>{for(var r=[],n=0;n<e;n++)r.push(_[t+4*n>>2]);return r},eJ=(t,r,n)=>{e.hasOwnProperty(t)||eN("Replacing nonexistant public symbol"),void 0!==e[t].overloadTable&&void 0!==n?e[t].overloadTable[n]=r:(e[t]=r,e[t].argCount=n)},e$=(t,r,n)=>{J("dynCall_"+t in e,`bad function pointer type - dynCall function not found for sig '${t}'`),n&&n.length?J(n.length===t.substring(1).replace(/j/g,"--").length):J(1==t.length);var i=e["dynCall_"+t];return n&&n.length?i.apply(null,[r].concat(n)):i.call(null,r)},eZ=[],eK=e=>{var t=eZ[e];return t||(e>=eZ.length&&(eZ.length=e+1),eZ[e]=t=w.get(e)),J(w.get(e)==t,"JavaScript-side Wasm function table mirror is out of date!"),t},eQ=(e,t,r)=>e.includes("j")?e$(e,t,r):(J(eK(t),`missing table entry in dynCall: ${t}`),eK(t).apply(null,r)),e0=(e,t)=>{J(e.includes("j")||e.includes("p"),"getDynCaller should only be called with i64 sigs");var r=[];return function(){return r.length=0,Object.assign(r,arguments),eQ(e,t,r)}},e1=(e,t)=>{var r=(e=eI(e)).includes("j")?e0(e,t):eK(t);return"function"!=typeof r&&eD(`unknown function pointer with signature ${e}: ${t}`),r},e2=e=>{var t=t8(e),r=eI(t);return t6(t),r},e3=(e,t)=>{var r=[],n={};throw t.forEach(function e(t){if(!n[t]&&!eP[t]){if(eL[t]){eL[t].forEach(e);return}r.push(t),n[t]=!0}}),new A(`${e}: `+r.map(e2).join([", "]))},e4=e=>{let t=(e=e.trim()).indexOf("(");return -1!==t?(J(")"==e[e.length-1],"Parentheses for argument names should match."),e.substr(0,t)):e},e5=(e,t,r)=>{switch(t){case 1:return r?e=>c[e>>0]:e=>d[e>>0];case 2:return r?e=>p[e>>1]:e=>m[e>>1];case 4:return r?e=>g[e>>2]:e=>_[e>>2];default:throw TypeError(`invalid integer width (${t}): ${e}`)}};function e6(e){return this.fromWireType(_[e>>2])}var e8=(e,t,r,n)=>{if(J("string"==typeof e),!(n>0))return 0;for(var i=r,a=r+n-1,o=0;o<e.length;++o){var s=e.charCodeAt(o);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++o)),s<=127){if(r>=a)break;t[r++]=s}else if(s<=2047){if(r+1>=a)break;t[r++]=192|s>>6,t[r++]=128|63&s}else if(s<=65535){if(r+2>=a)break;t[r++]=224|s>>12,t[r++]=128|s>>6&63,t[r++]=128|63&s}else{if(r+3>=a)break;s>1114111&&eb("Invalid Unicode code point "+eS(s)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),t[r++]=240|s>>18,t[r++]=128|s>>12&63,t[r++]=128|s>>6&63,t[r++]=128|63&s}}return t[r]=0,r-i},e7=(e,t,r)=>(J("number"==typeof r,"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),e8(e,d,t,r)),e9=e=>{for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n<=127?t++:n<=2047?t+=2:n>=55296&&n<=57343?(t+=4,++r):t+=3}return t},te="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0,tt=(e,t,r)=>{for(var n=t+r,i=t;e[i]&&!(i>=n);)++i;if(i-t>16&&e.buffer&&te)return te.decode(e.subarray(t,i));for(var a="";t<i;){var o=e[t++];if(!(128&o)){a+=String.fromCharCode(o);continue}var s=63&e[t++];if((224&o)==192){a+=String.fromCharCode((31&o)<<6|s);continue}var l=63&e[t++];if((240&o)==224?o=(15&o)<<12|s<<6|l:((248&o)!=240&&eb("Invalid UTF-8 leading byte "+eS(o)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),o=(7&o)<<18|s<<12|l<<6|63&e[t++]),o<65536)a+=String.fromCharCode(o);else{var h=o-65536;a+=String.fromCharCode(55296|h>>10,56320|1023&h)}}return a},tr=(e,t)=>(J("number"==typeof e),e?tt(d,e,t):""),tn="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,ti=(e,t)=>{J(e%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");for(var r=e,n=r>>1,i=n+t/2;!(n>=i)&&m[n];)++n;if((r=n<<1)-e>32&&tn)return tn.decode(d.subarray(e,r));for(var a="",o=0;!(o>=t/2);++o){var s=p[e+2*o>>1];if(0==s)break;a+=String.fromCharCode(s)}return a},ta=(e,t,r)=>{if(J(t%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!"),J("number"==typeof r,"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===r&&(r=2147483647),r<2)return 0;for(var n=t,i=(r-=2)<2*e.length?r/2:e.length,a=0;a<i;++a){var o=e.charCodeAt(a);p[t>>1]=o,t+=2}return p[t>>1]=0,t-n},to=e=>2*e.length,ts=(e,t)=>{J(e%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");for(var r=0,n="";!(r>=t/4);){var i=g[e+4*r>>2];if(0==i)break;if(++r,i>=65536){var a=i-65536;n+=String.fromCharCode(55296|a>>10,56320|1023&a)}else n+=String.fromCharCode(i)}return n},tl=(e,t,r)=>{if(J(t%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!"),J("number"==typeof r,"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),void 0===r&&(r=2147483647),r<4)return 0;for(var n=t,i=n+r-4,a=0;a<e.length;++a){var o=e.charCodeAt(a);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),g[t>>2]=o,(t+=4)+4>i)break}return g[t>>2]=0,t-n},th=e=>{for(var t=0,r=0;r<e.length;++r){var n=e.charCodeAt(r);n>=55296&&n<=57343&&++r,t+=4}return t},tu={},tc=e=>{var t=tu[e];return void 0===t?eI(e):t},td=(e,t)=>{var r=eP[e];return void 0===r&&eD(t+" has unknown type "+e2(e)),r},tp=()=>2147483648,tf=e=>{var t=h.buffer,r=(e-t.byteLength+65535)/65536;try{return h.grow(r),$(),1}catch(r){q(`growMemory: Attempted to grow heap from ${t.byteLength} bytes to ${e} bytes, but got error: ${r}`)}},tm={},tg=()=>I||"./this.program",t_=()=>{if(!t_.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:tg()};for(var t in tm)void 0===tm[t]?delete e[t]:e[t]=tm[t];var r=[];for(var t in e)r.push(`${t}=${e[t]}`);t_.strings=r}return t_.strings},tv=(e,t)=>{for(var r=0;r<e.length;++r)J(e.charCodeAt(r)===(255&e.charCodeAt(r))),c[t++>>0]=e.charCodeAt(r);c[t>>0]=0},ty={isAbs:e=>"/"===e.charAt(0),splitPath:e=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1),normalizeArray:(e,t)=>{for(var r=0,n=e.length-1;n>=0;n--){var i=e[n];"."===i?e.splice(n,1):".."===i?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}if(t)for(;r;r--)e.unshift("..");return e},normalize:e=>{var t=ty.isAbs(e),r="/"===e.substr(-1);return(e=ty.normalizeArray(e.split("/").filter(e=>!!e),!t).join("/"))||t||(e="."),e&&r&&(e+="/"),(t?"/":"")+e},dirname:e=>{var t=ty.splitPath(e),r=t[0],n=t[1];return r||n?(n&&(n=n.substr(0,n.length-1)),r+n):"."},basename:e=>{if("/"===e)return"/";var t=(e=(e=ty.normalize(e)).replace(/\/$/,"")).lastIndexOf("/");return -1===t?e:e.substr(t+1)},join:function(){var e=Array.prototype.slice.call(arguments);return ty.normalize(e.join("/"))},join2:(e,t)=>ty.normalize(e+"/"+t)},tx=()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return e=>crypto.getRandomValues(e);if(B)try{var e=G("crypto");if(e.randomFillSync)return t=>e.randomFillSync(t);var t=e.randomBytes;return e=>(e.set(t(e.byteLength)),e)}catch(e){}eu("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")},tE=e=>(tE=tx())(e),tM={resolve:function(){for(var e="",t=!1,r=arguments.length-1;r>=-1&&!t;r--){var n=r>=0?arguments[r]:tz.cwd();if("string"!=typeof n)throw TypeError("Arguments to path.resolve must be strings");if(!n)return"";e=n+"/"+e,t=ty.isAbs(n)}return e=ty.normalizeArray(e.split("/").filter(e=>!!e),!t).join("/"),(t?"/":"")+e||"."},relative:(e,t)=>{function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;r>=0&&""===e[r];r--);return t>r?[]:e.slice(t,r-t+1)}e=tM.resolve(e).substr(1),t=tM.resolve(t).substr(1);for(var n=r(e.split("/")),i=r(t.split("/")),a=Math.min(n.length,i.length),o=a,s=0;s<a;s++)if(n[s]!==i[s]){o=s;break}for(var l=[],s=o;s<n.length;s++)l.push("..");return(l=l.concat(i.slice(o))).join("/")}},tS=[];function tb(e,t,r){var n=Array(r>0?r:e9(e)+1),i=e8(e,n,0,n.length);return t&&(n.length=i),n}var tT=()=>{if(!tS.length){var e=null;if(B){var t=oA.alloc(256),r=0,n=os.stdin.fd;try{r=W.readSync(n,t)}catch(e){if(e.toString().includes("EOF"))r=0;else throw e}e=r>0?t.slice(0,r).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(e=window.prompt("Input: "))&&(e+="\n"):"function"==typeof readline&&null!==(e=readline())&&(e+="\n");if(!e)return null;tS=tb(e,!0)}return tS.shift()},tw={ttys:[],init(){},shutdown(){},register(e,t){tw.ttys[e]={input:[],output:[],ops:t},tz.registerDevice(e,tw.stream_ops)},stream_ops:{open(e){var t=tw.ttys[e.node.rdev];if(!t)throw new tz.ErrnoError(43);e.tty=t,e.seekable=!1},close(e){e.tty.ops.fsync(e.tty)},fsync(e){e.tty.ops.fsync(e.tty)},read(e,t,r,n,i){if(!e.tty||!e.tty.ops.get_char)throw new tz.ErrnoError(60);for(var a,o=0,s=0;s<n;s++){try{a=e.tty.ops.get_char(e.tty)}catch(e){throw new tz.ErrnoError(29)}if(void 0===a&&0===o)throw new tz.ErrnoError(6);if(null==a)break;o++,t[r+s]=a}return o&&(e.node.timestamp=Date.now()),o},write(e,t,r,n,i){if(!e.tty||!e.tty.ops.put_char)throw new tz.ErrnoError(60);try{for(var a=0;a<n;a++)e.tty.ops.put_char(e.tty,t[r+a])}catch(e){throw new tz.ErrnoError(29)}return n&&(e.node.timestamp=Date.now()),a}},default_tty_ops:{get_char:e=>tT(),put_char(e,t){null===t||10===t?(j(tt(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},fsync(e){e.output&&e.output.length>0&&(j(tt(e.output,0)),e.output=[])},ioctl_tcgets:e=>({c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}),ioctl_tcsets:(e,t,r)=>0,ioctl_tiocgwinsz:e=>[24,80]},default_tty1_ops:{put_char(e,t){null===t||10===t?(q(tt(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},fsync(e){e.output&&e.output.length>0&&(q(tt(e.output,0)),e.output=[])}}},tA=e=>{eu("internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported")},tR={ops_table:null,mount:e=>tR.createNode(null,"/",16895,0),createNode(e,t,r,n){if(tz.isBlkdev(r)||tz.isFIFO(r))throw new tz.ErrnoError(63);tR.ops_table||(tR.ops_table={dir:{node:{getattr:tR.node_ops.getattr,setattr:tR.node_ops.setattr,lookup:tR.node_ops.lookup,mknod:tR.node_ops.mknod,rename:tR.node_ops.rename,unlink:tR.node_ops.unlink,rmdir:tR.node_ops.rmdir,readdir:tR.node_ops.readdir,symlink:tR.node_ops.symlink},stream:{llseek:tR.stream_ops.llseek}},file:{node:{getattr:tR.node_ops.getattr,setattr:tR.node_ops.setattr},stream:{llseek:tR.stream_ops.llseek,read:tR.stream_ops.read,write:tR.stream_ops.write,allocate:tR.stream_ops.allocate,mmap:tR.stream_ops.mmap,msync:tR.stream_ops.msync}},link:{node:{getattr:tR.node_ops.getattr,setattr:tR.node_ops.setattr,readlink:tR.node_ops.readlink},stream:{}},chrdev:{node:{getattr:tR.node_ops.getattr,setattr:tR.node_ops.setattr},stream:tz.chrdev_stream_ops}});var i=tz.createNode(e,t,r,n);return tz.isDir(i.mode)?(i.node_ops=tR.ops_table.dir.node,i.stream_ops=tR.ops_table.dir.stream,i.contents={}):tz.isFile(i.mode)?(i.node_ops=tR.ops_table.file.node,i.stream_ops=tR.ops_table.file.stream,i.usedBytes=0,i.contents=null):tz.isLink(i.mode)?(i.node_ops=tR.ops_table.link.node,i.stream_ops=tR.ops_table.link.stream):tz.isChrdev(i.mode)&&(i.node_ops=tR.ops_table.chrdev.node,i.stream_ops=tR.ops_table.chrdev.stream),i.timestamp=Date.now(),e&&(e.contents[t]=i,e.timestamp=i.timestamp),i},getFileDataAsTypedArray:e=>e.contents?e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents):new Uint8Array(0),expandFileStorage(e,t){var r=e.contents?e.contents.length:0;if(!(r>=t)){t=Math.max(t,r*(r<1048576?2:1.125)>>>0),0!=r&&(t=Math.max(t,256));var n=e.contents;e.contents=new Uint8Array(t),e.usedBytes>0&&e.contents.set(n.subarray(0,e.usedBytes),0)}},resizeFileStorage(e,t){if(e.usedBytes!=t){if(0==t)e.contents=null,e.usedBytes=0;else{var r=e.contents;e.contents=new Uint8Array(t),r&&e.contents.set(r.subarray(0,Math.min(t,e.usedBytes))),e.usedBytes=t}}},node_ops:{getattr(e){var t={};return t.dev=tz.isChrdev(e.mode)?e.id:1,t.ino=e.id,t.mode=e.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=e.rdev,tz.isDir(e.mode)?t.size=4096:tz.isFile(e.mode)?t.size=e.usedBytes:tz.isLink(e.mode)?t.size=e.link.length:t.size=0,t.atime=new Date(e.timestamp),t.mtime=new Date(e.timestamp),t.ctime=new Date(e.timestamp),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},setattr(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp),void 0!==t.size&&tR.resizeFileStorage(e,t.size)},lookup(e,t){throw tz.genericErrors[44]},mknod:(e,t,r,n)=>tR.createNode(e,t,r,n),rename(e,t,r){if(tz.isDir(e.mode)){var n;try{n=tz.lookupNode(t,r)}catch(e){}if(n)for(var i in n.contents)throw new tz.ErrnoError(55)}delete e.parent.contents[e.name],e.parent.timestamp=Date.now(),e.name=r,t.contents[r]=e,t.timestamp=e.parent.timestamp,e.parent=t},unlink(e,t){delete e.contents[t],e.timestamp=Date.now()},rmdir(e,t){var r=tz.lookupNode(e,t);for(var n in r.contents)throw new tz.ErrnoError(55);delete e.contents[t],e.timestamp=Date.now()},readdir(e){var t=[".",".."];for(var r in e.contents)e.contents.hasOwnProperty(r)&&t.push(r);return t},symlink(e,t,r){var n=tR.createNode(e,t,41471,0);return n.link=r,n},readlink(e){if(!tz.isLink(e.mode))throw new tz.ErrnoError(28);return e.link}},stream_ops:{read(e,t,r,n,i){var a=e.node.contents;if(i>=e.node.usedBytes)return 0;var o=Math.min(e.node.usedBytes-i,n);if(J(o>=0),o>8&&a.subarray)t.set(a.subarray(i,i+o),r);else for(var s=0;s<o;s++)t[r+s]=a[i+s];return o},write(e,t,r,n,i,a){if(J(!(t instanceof ArrayBuffer)),t.buffer===c.buffer&&(a=!1),!n)return 0;var o=e.node;if(o.timestamp=Date.now(),t.subarray&&(!o.contents||o.contents.subarray)){if(a)return J(0===i,"canOwn must imply no weird position inside the file"),o.contents=t.subarray(r,r+n),o.usedBytes=n,n;if(0===o.usedBytes&&0===i)return o.contents=t.slice(r,r+n),o.usedBytes=n,n;if(i+n<=o.usedBytes)return o.contents.set(t.subarray(r,r+n),i),n}if(tR.expandFileStorage(o,i+n),o.contents.subarray&&t.subarray)o.contents.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)o.contents[i+s]=t[r+s];return o.usedBytes=Math.max(o.usedBytes,i+n),n},llseek(e,t,r){var n=t;if(1===r?n+=e.position:2===r&&tz.isFile(e.node.mode)&&(n+=e.node.usedBytes),n<0)throw new tz.ErrnoError(28);return n},allocate(e,t,r){tR.expandFileStorage(e.node,t+r),e.node.usedBytes=Math.max(e.node.usedBytes,t+r)},mmap(e,t,r,n,i){if(!tz.isFile(e.node.mode))throw new tz.ErrnoError(43);var a,o,s=e.node.contents;if(2&i||s.buffer!==c.buffer){if((r>0||r+t<s.length)&&(s=s.subarray?s.subarray(r,r+t):Array.prototype.slice.call(s,r,r+t)),o=!0,!(a=tA()))throw new tz.ErrnoError(48);c.set(s,a)}else o=!1,a=s.byteOffset;return{ptr:a,allocated:o}},msync:(e,t,r,n,i)=>(tR.stream_ops.write(e,t,0,n,r,!1),0)}},tC=(e,t,r,n)=>{var i=n?"":es(`al ${e}`);o(e,r=>{J(r,`Loading data file "${e}" failed (no arrayBuffer).`),t(new Uint8Array(r)),i&&eh(i)},t=>{if(r)r();else throw`Loading data file "${e}" failed.`}),i&&el(i)},tP=(e,t,r,n,i,a)=>tz.createDataFile(e,t,r,n,i,a),tL=e.preloadPlugins||[],tN=(e,t,r,n)=>{"undefined"!=typeof Browser&&Browser.init();var i=!1;return tL.forEach(a=>{!i&&a.canHandle(t)&&(a.handle(e,t,r,n),i=!0)}),i},tU=e=>{var t={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[e];if(void 0===t)throw Error(`Unknown file open mode: ${e}`);return t},tI=(e,t)=>{var r=0;return e&&(r|=365),t&&(r|=146),r},tD={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"},tO={},tF=e=>(eb("warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling"),e),tB=e=>e.replace(/\b_Z[\w\d_]+/g,function(e){var t=tF(e);return e===t?e:t+" ["+e+"]"}),tz={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(e,t={}){if(!(e=tM.resolve(e)))return{path:"",node:null};if((t=Object.assign({follow_mount:!0,recurse_count:0},t)).recurse_count>8)throw new tz.ErrnoError(32);for(var r=e.split("/").filter(e=>!!e),n=tz.root,i="/",a=0;a<r.length;a++){var o=a===r.length-1;if(o&&t.parent)break;if(n=tz.lookupNode(n,r[a]),i=ty.join2(i,r[a]),tz.isMountpoint(n)&&(!o||o&&t.follow_mount)&&(n=n.mounted.root),!o||t.follow)for(var s=0;tz.isLink(n.mode);){var l=tz.readlink(i);if(i=tM.resolve(ty.dirname(i),l),n=tz.lookupPath(i,{recurse_count:t.recurse_count+1}).node,s++>40)throw new tz.ErrnoError(32)}}return{path:i,node:n}},getPath(e){for(var t;;){if(tz.isRoot(e)){var r=e.mount.mountpoint;if(!t)return r;return"/"!==r[r.length-1]?`${r}/${t}`:r+t}t=t?`${e.name}/${t}`:e.name,e=e.parent}},hashName(e,t){for(var r=0,n=0;n<t.length;n++)r=(r<<5)-r+t.charCodeAt(n)|0;return(e+r>>>0)%tz.nameTable.length},hashAddNode(e){var t=tz.hashName(e.parent.id,e.name);e.name_next=tz.nameTable[t],tz.nameTable[t]=e},hashRemoveNode(e){var t=tz.hashName(e.parent.id,e.name);if(tz.nameTable[t]===e)tz.nameTable[t]=e.name_next;else for(var r=tz.nameTable[t];r;){if(r.name_next===e){r.name_next=e.name_next;break}r=r.name_next}},lookupNode(e,t){var r=tz.mayLookup(e);if(r)throw new tz.ErrnoError(r,e);for(var n=tz.hashName(e.id,t),i=tz.nameTable[n];i;i=i.name_next){var a=i.name;if(i.parent.id===e.id&&a===t)return i}return tz.lookup(e,t)},createNode(e,t,r,n){J("object"==typeof e);var i=new tz.FSNode(e,t,r,n);return tz.hashAddNode(i),i},destroyNode(e){tz.hashRemoveNode(e)},isRoot:e=>e===e.parent,isMountpoint:e=>!!e.mounted,isFile:e=>(61440&e)==32768,isDir:e=>(61440&e)==16384,isLink:e=>(61440&e)==40960,isChrdev:e=>(61440&e)==8192,isBlkdev:e=>(61440&e)==24576,isFIFO:e=>(61440&e)==4096,isSocket:e=>(49152&e)==49152,flagsToPermissionString(e){var t=["r","w","rw"][3&e];return 512&e&&(t+="w"),t},nodePermissions:(e,t)=>tz.ignorePermissions?0:t.includes("r")&&!(292&e.mode)||t.includes("w")&&!(146&e.mode)||t.includes("x")&&!(73&e.mode)?2:0,mayLookup:e=>tz.nodePermissions(e,"x")||(e.node_ops.lookup?0:2),mayCreate(e,t){try{return tz.lookupNode(e,t),20}catch(e){}return tz.nodePermissions(e,"wx")},mayDelete(e,t,r){try{n=tz.lookupNode(e,t)}catch(e){return e.errno}var n,i=tz.nodePermissions(e,"wx");if(i)return i;if(r){if(!tz.isDir(n.mode))return 54;if(tz.isRoot(n)||tz.getPath(n)===tz.cwd())return 10}else if(tz.isDir(n.mode))return 31;return 0},mayOpen:(e,t)=>e?tz.isLink(e.mode)?32:tz.isDir(e.mode)&&("r"!==tz.flagsToPermissionString(t)||512&t)?31:tz.nodePermissions(e,tz.flagsToPermissionString(t)):44,MAX_OPEN_FDS:4096,nextfd(){for(var e=0;e<=tz.MAX_OPEN_FDS;e++)if(!tz.streams[e])return e;throw new tz.ErrnoError(33)},getStreamChecked(e){var t=tz.getStream(e);if(!t)throw new tz.ErrnoError(8);return t},getStream:e=>tz.streams[e],createStream:(e,t=-1)=>(tz.FSStream||(tz.FSStream=function(){this.shared={}},tz.FSStream.prototype={},Object.defineProperties(tz.FSStream.prototype,{object:{get(){return this.node},set(e){this.node=e}},isRead:{get(){return(2097155&this.flags)!=1}},isWrite:{get(){return(2097155&this.flags)!=0}},isAppend:{get(){return 1024&this.flags}},flags:{get(){return this.shared.flags},set(e){this.shared.flags=e}},position:{get(){return this.shared.position},set(e){this.shared.position=e}}})),e=Object.assign(new tz.FSStream,e),-1==t&&(t=tz.nextfd()),e.fd=t,tz.streams[t]=e,e),closeStream(e){tz.streams[e]=null},chrdev_stream_ops:{open(e){var t=tz.getDevice(e.node.rdev);e.stream_ops=t.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek(){throw new tz.ErrnoError(70)}},major:e=>e>>8,minor:e=>255&e,makedev:(e,t)=>e<<8|t,registerDevice(e,t){tz.devices[e]={stream_ops:t}},getDevice:e=>tz.devices[e],getMounts(e){for(var t=[],r=[e];r.length;){var n=r.pop();t.push(n),r.push.apply(r,n.mounts)}return t},syncfs(e,t){"function"==typeof e&&(t=e,e=!1),tz.syncFSRequests++,tz.syncFSRequests>1&&q(`warning: ${tz.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var r=tz.getMounts(tz.root.mount),n=0;function i(e){return J(tz.syncFSRequests>0),tz.syncFSRequests--,t(e)}function a(e){if(e)return a.errored?void 0:(a.errored=!0,i(e));++n>=r.length&&i(null)}r.forEach(t=>{if(!t.type.syncfs)return a(null);t.type.syncfs(t,e,a)})},mount(e,t,r){if("string"==typeof e)throw e;var n,i="/"===r,a=!r;if(i&&tz.root)throw new tz.ErrnoError(10);if(!i&&!a){var o=tz.lookupPath(r,{follow_mount:!1});if(r=o.path,n=o.node,tz.isMountpoint(n))throw new tz.ErrnoError(10);if(!tz.isDir(n.mode))throw new tz.ErrnoError(54)}var s={type:e,opts:t,mountpoint:r,mounts:[]},l=e.mount(s);return l.mount=s,s.root=l,i?tz.root=l:n&&(n.mounted=s,n.mount&&n.mount.mounts.push(s)),l},unmount(e){var t=tz.lookupPath(e,{follow_mount:!1});if(!tz.isMountpoint(t.node))throw new tz.ErrnoError(28);var r=t.node,n=r.mounted,i=tz.getMounts(n);Object.keys(tz.nameTable).forEach(e=>{for(var t=tz.nameTable[e];t;){var r=t.name_next;i.includes(t.mount)&&tz.destroyNode(t),t=r}}),r.mounted=null;var a=r.mount.mounts.indexOf(n);J(-1!==a),r.mount.mounts.splice(a,1)},lookup:(e,t)=>e.node_ops.lookup(e,t),mknod(e,t,r){var n=tz.lookupPath(e,{parent:!0}).node,i=ty.basename(e);if(!i||"."===i||".."===i)throw new tz.ErrnoError(28);var a=tz.mayCreate(n,i);if(a)throw new tz.ErrnoError(a);if(!n.node_ops.mknod)throw new tz.ErrnoError(63);return n.node_ops.mknod(n,i,t,r)},create:(e,t)=>(t=(void 0!==t?t:438)&4095|32768,tz.mknod(e,t,0)),mkdir:(e,t)=>(t=(void 0!==t?t:511)&1023|16384,tz.mknod(e,t,0)),mkdirTree(e,t){for(var r=e.split("/"),n="",i=0;i<r.length;++i)if(r[i]){n+="/"+r[i];try{tz.mkdir(n,t)}catch(e){if(20!=e.errno)throw e}}},mkdev:(e,t,r)=>(void 0===r&&(r=t,t=438),t|=8192,tz.mknod(e,t,r)),symlink(e,t){if(!tM.resolve(e))throw new tz.ErrnoError(44);var r=tz.lookupPath(t,{parent:!0}).node;if(!r)throw new tz.ErrnoError(44);var n=ty.basename(t),i=tz.mayCreate(r,n);if(i)throw new tz.ErrnoError(i);if(!r.node_ops.symlink)throw new tz.ErrnoError(63);return r.node_ops.symlink(r,n,e)},rename(e,t){var r,n,i,a=ty.dirname(e),o=ty.dirname(t),s=ty.basename(e),l=ty.basename(t);if(r=tz.lookupPath(e,{parent:!0}).node,n=tz.lookupPath(t,{parent:!0}).node,!r||!n)throw new tz.ErrnoError(44);if(r.mount!==n.mount)throw new tz.ErrnoError(75);var h=tz.lookupNode(r,s),u=tM.relative(e,o);if("."!==u.charAt(0))throw new tz.ErrnoError(28);if("."!==(u=tM.relative(t,a)).charAt(0))throw new tz.ErrnoError(55);try{i=tz.lookupNode(n,l)}catch(e){}if(h!==i){var c=tz.isDir(h.mode),d=tz.mayDelete(r,s,c);if(d||(d=i?tz.mayDelete(n,l,c):tz.mayCreate(n,l)))throw new tz.ErrnoError(d);if(!r.node_ops.rename)throw new tz.ErrnoError(63);if(tz.isMountpoint(h)||i&&tz.isMountpoint(i))throw new tz.ErrnoError(10);if(n!==r&&(d=tz.nodePermissions(r,"w")))throw new tz.ErrnoError(d);tz.hashRemoveNode(h);try{r.node_ops.rename(h,n,l)}catch(e){throw e}finally{tz.hashAddNode(h)}}},rmdir(e){var t=tz.lookupPath(e,{parent:!0}).node,r=ty.basename(e),n=tz.lookupNode(t,r),i=tz.mayDelete(t,r,!0);if(i)throw new tz.ErrnoError(i);if(!t.node_ops.rmdir)throw new tz.ErrnoError(63);if(tz.isMountpoint(n))throw new tz.ErrnoError(10);t.node_ops.rmdir(t,r),tz.destroyNode(n)},readdir(e){var t=tz.lookupPath(e,{follow:!0}).node;if(!t.node_ops.readdir)throw new tz.ErrnoError(54);return t.node_ops.readdir(t)},unlink(e){var t=tz.lookupPath(e,{parent:!0}).node;if(!t)throw new tz.ErrnoError(44);var r=ty.basename(e),n=tz.lookupNode(t,r),i=tz.mayDelete(t,r,!1);if(i)throw new tz.ErrnoError(i);if(!t.node_ops.unlink)throw new tz.ErrnoError(63);if(tz.isMountpoint(n))throw new tz.ErrnoError(10);t.node_ops.unlink(t,r),tz.destroyNode(n)},readlink(e){var t=tz.lookupPath(e).node;if(!t)throw new tz.ErrnoError(44);if(!t.node_ops.readlink)throw new tz.ErrnoError(28);return tM.resolve(tz.getPath(t.parent),t.node_ops.readlink(t))},stat(e,t){var r=tz.lookupPath(e,{follow:!t}).node;if(!r)throw new tz.ErrnoError(44);if(!r.node_ops.getattr)throw new tz.ErrnoError(63);return r.node_ops.getattr(r)},lstat:e=>tz.stat(e,!0),chmod(e,t,r){var n;if(!(n="string"==typeof e?tz.lookupPath(e,{follow:!r}).node:e).node_ops.setattr)throw new tz.ErrnoError(63);n.node_ops.setattr(n,{mode:4095&t|-4096&n.mode,timestamp:Date.now()})},lchmod(e,t){tz.chmod(e,t,!0)},fchmod(e,t){var r=tz.getStreamChecked(e);tz.chmod(r.node,t)},chown(e,t,r,n){var i;if(!(i="string"==typeof e?tz.lookupPath(e,{follow:!n}).node:e).node_ops.setattr)throw new tz.ErrnoError(63);i.node_ops.setattr(i,{timestamp:Date.now()})},lchown(e,t,r){tz.chown(e,t,r,!0)},fchown(e,t,r){var n=tz.getStreamChecked(e);tz.chown(n.node,t,r)},truncate(e,t){if(t<0)throw new tz.ErrnoError(28);if("string"==typeof e){var r;r=tz.lookupPath(e,{follow:!0}).node}else r=e;if(!r.node_ops.setattr)throw new tz.ErrnoError(63);if(tz.isDir(r.mode))throw new tz.ErrnoError(31);if(!tz.isFile(r.mode))throw new tz.ErrnoError(28);var n=tz.nodePermissions(r,"w");if(n)throw new tz.ErrnoError(n);r.node_ops.setattr(r,{size:t,timestamp:Date.now()})},ftruncate(e,t){var r=tz.getStreamChecked(e);if((2097155&r.flags)==0)throw new tz.ErrnoError(28);tz.truncate(r.node,t)},utime(e,t,r){var n=tz.lookupPath(e,{follow:!0}).node;n.node_ops.setattr(n,{timestamp:Math.max(t,r)})},open(t,r,n){if(""===t)throw new tz.ErrnoError(44);if(r="string"==typeof r?tU(r):r,n=void 0===n?438:n,n=64&r?4095&n|32768:0,"object"==typeof t)i=t;else{t=ty.normalize(t);try{var i;i=tz.lookupPath(t,{follow:!(131072&r)}).node}catch(e){}}var a=!1;if(64&r){if(i){if(128&r)throw new tz.ErrnoError(20)}else i=tz.mknod(t,n,0),a=!0}if(!i)throw new tz.ErrnoError(44);if(tz.isChrdev(i.mode)&&(r&=-513),65536&r&&!tz.isDir(i.mode))throw new tz.ErrnoError(54);if(!a){var o=tz.mayOpen(i,r);if(o)throw new tz.ErrnoError(o)}512&r&&!a&&tz.truncate(i,0),r&=-131713;var s=tz.createStream({node:i,path:tz.getPath(i),flags:r,seekable:!0,position:0,stream_ops:i.stream_ops,ungotten:[],error:!1});return s.stream_ops.open&&s.stream_ops.open(s),!e.logReadFiles||1&r||(tz.readFiles||(tz.readFiles={}),t in tz.readFiles||(tz.readFiles[t]=1)),s},close(e){if(tz.isClosed(e))throw new tz.ErrnoError(8);e.getdents&&(e.getdents=null);try{e.stream_ops.close&&e.stream_ops.close(e)}catch(e){throw e}finally{tz.closeStream(e.fd)}e.fd=null},isClosed:e=>null===e.fd,llseek(e,t,r){if(tz.isClosed(e))throw new tz.ErrnoError(8);if(!e.seekable||!e.stream_ops.llseek)throw new tz.ErrnoError(70);if(0!=r&&1!=r&&2!=r)throw new tz.ErrnoError(28);return e.position=e.stream_ops.llseek(e,t,r),e.ungotten=[],e.position},read(e,t,r,n,i){if(J(r>=0),n<0||i<0)throw new tz.ErrnoError(28);if(tz.isClosed(e)||(2097155&e.flags)==1)throw new tz.ErrnoError(8);if(tz.isDir(e.node.mode))throw new tz.ErrnoError(31);if(!e.stream_ops.read)throw new tz.ErrnoError(28);var a=void 0!==i;if(a){if(!e.seekable)throw new tz.ErrnoError(70)}else i=e.position;var o=e.stream_ops.read(e,t,r,n,i);return a||(e.position+=o),o},write(e,t,r,n,i,a){if(J(r>=0),n<0||i<0)throw new tz.ErrnoError(28);if(tz.isClosed(e)||(2097155&e.flags)==0)throw new tz.ErrnoError(8);if(tz.isDir(e.node.mode))throw new tz.ErrnoError(31);if(!e.stream_ops.write)throw new tz.ErrnoError(28);e.seekable&&1024&e.flags&&tz.llseek(e,0,2);var o=void 0!==i;if(o){if(!e.seekable)throw new tz.ErrnoError(70)}else i=e.position;var s=e.stream_ops.write(e,t,r,n,i,a);return o||(e.position+=s),s},allocate(e,t,r){if(tz.isClosed(e))throw new tz.ErrnoError(8);if(t<0||r<=0)throw new tz.ErrnoError(28);if((2097155&e.flags)==0)throw new tz.ErrnoError(8);if(!tz.isFile(e.node.mode)&&!tz.isDir(e.node.mode))throw new tz.ErrnoError(43);if(!e.stream_ops.allocate)throw new tz.ErrnoError(138);e.stream_ops.allocate(e,t,r)},mmap(e,t,r,n,i){if((2&n)!=0&&(2&i)==0&&(2097155&e.flags)!=2||(2097155&e.flags)==1)throw new tz.ErrnoError(2);if(!e.stream_ops.mmap)throw new tz.ErrnoError(43);return e.stream_ops.mmap(e,t,r,n,i)},msync:(e,t,r,n,i)=>(J(r>=0),e.stream_ops.msync)?e.stream_ops.msync(e,t,r,n,i):0,munmap:e=>0,ioctl(e,t,r){if(!e.stream_ops.ioctl)throw new tz.ErrnoError(59);return e.stream_ops.ioctl(e,t,r)},readFile(e,t={}){if(t.flags=t.flags||0,t.encoding=t.encoding||"binary","utf8"!==t.encoding&&"binary"!==t.encoding)throw Error(`Invalid encoding type "${t.encoding}"`);var r,n=tz.open(e,t.flags),i=tz.stat(e).size,a=new Uint8Array(i);return tz.read(n,a,0,i,0),"utf8"===t.encoding?r=tt(a,0):"binary"===t.encoding&&(r=a),tz.close(n),r},writeFile(e,t,r={}){r.flags=r.flags||577;var n=tz.open(e,r.flags,r.mode);if("string"==typeof t){var i=new Uint8Array(e9(t)+1),a=e8(t,i,0,i.length);tz.write(n,i,0,a,void 0,r.canOwn)}else if(ArrayBuffer.isView(t))tz.write(n,t,0,t.byteLength,void 0,r.canOwn);else throw Error("Unsupported data type");tz.close(n)},cwd:()=>tz.currentPath,chdir(e){var t=tz.lookupPath(e,{follow:!0});if(null===t.node)throw new tz.ErrnoError(44);if(!tz.isDir(t.node.mode))throw new tz.ErrnoError(54);var r=tz.nodePermissions(t.node,"x");if(r)throw new tz.ErrnoError(r);tz.currentPath=t.path},createDefaultDirectories(){tz.mkdir("/tmp"),tz.mkdir("/home"),tz.mkdir("/home/web_user")},createDefaultDevices(){tz.mkdir("/dev"),tz.registerDevice(tz.makedev(1,3),{read:()=>0,write:(e,t,r,n,i)=>n}),tz.mkdev("/dev/null",tz.makedev(1,3)),tw.register(tz.makedev(5,0),tw.default_tty_ops),tw.register(tz.makedev(6,0),tw.default_tty1_ops),tz.mkdev("/dev/tty",tz.makedev(5,0)),tz.mkdev("/dev/tty1",tz.makedev(6,0));var e=new Uint8Array(1024),t=0,r=()=>(0===t&&(t=tE(e).byteLength),e[--t]);tz.createDevice("/dev","random",r),tz.createDevice("/dev","urandom",r),tz.mkdir("/dev/shm"),tz.mkdir("/dev/shm/tmp")},createSpecialDirectories(){tz.mkdir("/proc");var e=tz.mkdir("/proc/self");tz.mkdir("/proc/self/fd"),tz.mount({mount(){var t=tz.createNode(e,"fd",16895,73);return t.node_ops={lookup(e,t){var r=tz.getStreamChecked(+t),n={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>r.path}};return n.parent=n,n}},t}},{},"/proc/self/fd")},createStandardStreams(){e.stdin?tz.createDevice("/dev","stdin",e.stdin):tz.symlink("/dev/tty","/dev/stdin"),e.stdout?tz.createDevice("/dev","stdout",null,e.stdout):tz.symlink("/dev/tty","/dev/stdout"),e.stderr?tz.createDevice("/dev","stderr",null,e.stderr):tz.symlink("/dev/tty1","/dev/stderr");var t=tz.open("/dev/stdin",0),r=tz.open("/dev/stdout",1),n=tz.open("/dev/stderr",1);J(0===t.fd,`invalid handle for stdin (${t.fd})`),J(1===r.fd,`invalid handle for stdout (${r.fd})`),J(2===n.fd,`invalid handle for stderr (${n.fd})`)},ensureErrnoError(){tz.ErrnoError||(tz.ErrnoError=function(e,t){this.name="ErrnoError",this.node=t,this.setErrno=function(e){for(var t in this.errno=e,tO)if(tO[t]===e){this.code=t;break}},this.setErrno(e),this.message=tD[e],this.stack&&(Object.defineProperty(this,"stack",{value:Error().stack,writable:!0}),this.stack=tB(this.stack))},tz.ErrnoError.prototype=Error(),tz.ErrnoError.prototype.constructor=tz.ErrnoError,[44].forEach(e=>{tz.genericErrors[e]=new tz.ErrnoError(e),tz.genericErrors[e].stack="<generic error, no stack>"}))},staticInit(){tz.ensureErrnoError(),tz.nameTable=Array(4096),tz.mount(tR,{},"/"),tz.createDefaultDirectories(),tz.createDefaultDevices(),tz.createSpecialDirectories(),tz.filesystems={MEMFS:tR}},init(t,r,n){J(!tz.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),tz.init.initialized=!0,tz.ensureErrnoError(),e.stdin=t||e.stdin,e.stdout=r||e.stdout,e.stderr=n||e.stderr,tz.createStandardStreams()},quit(){tz.init.initialized=!1,t7(0);for(var e=0;e<tz.streams.length;e++){var t=tz.streams[e];t&&tz.close(t)}},findObject(e,t){var r=tz.analyzePath(e,t);return r.exists?r.object:null},analyzePath(e,t){try{var r=tz.lookupPath(e,{follow:!t});e=r.path}catch(e){}var n={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var r=tz.lookupPath(e,{parent:!0});n.parentExists=!0,n.parentPath=r.path,n.parentObject=r.node,n.name=ty.basename(e),r=tz.lookupPath(e,{follow:!t}),n.exists=!0,n.path=r.path,n.object=r.node,n.name=r.node.name,n.isRoot="/"===r.path}catch(e){n.error=e.errno}return n},createPath(e,t,r,n){e="string"==typeof e?e:tz.getPath(e);for(var i=t.split("/").reverse();i.length;){var a=i.pop();if(a){var o=ty.join2(e,a);try{tz.mkdir(o)}catch(e){}e=o}}return o},createFile(e,t,r,n,i){var a=ty.join2("string"==typeof e?e:tz.getPath(e),t),o=tI(n,i);return tz.create(a,o)},createDataFile(e,t,r,n,i,a){var o=t;e&&(e="string"==typeof e?e:tz.getPath(e),o=t?ty.join2(e,t):e);var s=tI(n,i),l=tz.create(o,s);if(r){if("string"==typeof r){for(var h=Array(r.length),u=0,c=r.length;u<c;++u)h[u]=r.charCodeAt(u);r=h}tz.chmod(l,146|s);var d=tz.open(l,577);tz.write(d,r,0,r.length,0,a),tz.close(d),tz.chmod(l,s)}return l},createDevice(e,t,r,n){var i=ty.join2("string"==typeof e?e:tz.getPath(e),t),a=tI(!!r,!!n);tz.createDevice.major||(tz.createDevice.major=64);var o=tz.makedev(tz.createDevice.major++,0);return tz.registerDevice(o,{open(e){e.seekable=!1},close(e){n&&n.buffer&&n.buffer.length&&n(10)},read(e,t,n,i,a){for(var o,s=0,l=0;l<i;l++){try{o=r()}catch(e){throw new tz.ErrnoError(29)}if(void 0===o&&0===s)throw new tz.ErrnoError(6);if(null==o)break;s++,t[n+l]=o}return s&&(e.node.timestamp=Date.now()),s},write(e,t,r,i,a){for(var o=0;o<i;o++)try{n(t[r+o])}catch(e){throw new tz.ErrnoError(29)}return i&&(e.node.timestamp=Date.now()),o}}),tz.mkdev(i,a,o)},forceLoadFile(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(a)try{e.contents=tb(a(e.url),!0),e.usedBytes=e.contents.length}catch(e){throw new tz.ErrnoError(29)}else throw Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile(e,t,r,n,i){function a(){this.lengthKnown=!1,this.chunks=[]}if(a.prototype.get=function(e){if(!(e>this.length-1)&&!(e<0)){var t=e%this.chunkSize,r=e/this.chunkSize|0;return this.getter(r)[t]}},a.prototype.setDataGetter=function(e){this.getter=e},a.prototype.cacheLength=function(){var e,t=new XMLHttpRequest;if(t.open("HEAD",r,!1),t.send(null),!(t.status>=200&&t.status<300||304===t.status))throw Error("Couldn't load "+r+". Status: "+t.status);var n=Number(t.getResponseHeader("Content-length")),i=(e=t.getResponseHeader("Accept-Ranges"))&&"bytes"===e,a=(e=t.getResponseHeader("Content-Encoding"))&&"gzip"===e,o=1048576;i||(o=n);var s=(e,t)=>{if(e>t)throw Error("invalid range ("+e+", "+t+") or no bytes requested!");if(t>n-1)throw Error("only "+n+" bytes available! programmer error!");var i=new XMLHttpRequest;if(i.open("GET",r,!1),n!==o&&i.setRequestHeader("Range","bytes="+e+"-"+t),i.responseType="arraybuffer",i.overrideMimeType&&i.overrideMimeType("text/plain; charset=x-user-defined"),i.send(null),!(i.status>=200&&i.status<300||304===i.status))throw Error("Couldn't load "+r+". Status: "+i.status);return void 0!==i.response?new Uint8Array(i.response||[]):tb(i.responseText||"",!0)},l=this;l.setDataGetter(e=>{var t=e*o,r=(e+1)*o-1;if(r=Math.min(r,n-1),void 0===l.chunks[e]&&(l.chunks[e]=s(t,r)),void 0===l.chunks[e])throw Error("doXHR failed!");return l.chunks[e]}),(a||!n)&&(o=n=1,o=n=this.getter(0).length,j("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=n,this._chunkSize=o,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!F)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var o=new a;Object.defineProperties(o,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var s={isDevice:!1,contents:o}}else var s={isDevice:!1,url:r};var l=tz.createFile(e,t,s,n,i);s.contents?l.contents=s.contents:s.url&&(l.contents=null,l.url=s.url),Object.defineProperties(l,{usedBytes:{get:function(){return this.contents.length}}});var h={};function u(e,t,r,n,i){var a=e.node.contents;if(i>=a.length)return 0;var o=Math.min(a.length-i,n);if(J(o>=0),a.slice)for(var s=0;s<o;s++)t[r+s]=a[i+s];else for(var s=0;s<o;s++)t[r+s]=a.get(i+s);return o}return Object.keys(l.stream_ops).forEach(e=>{var t=l.stream_ops[e];h[e]=function(){return tz.forceLoadFile(l),t.apply(null,arguments)}}),h.read=(e,t,r,n,i)=>(tz.forceLoadFile(l),u(e,t,r,n,i)),h.mmap=(e,t,r,n,i)=>{tz.forceLoadFile(l);var a=tA();if(!a)throw new tz.ErrnoError(48);return u(e,c,a,t,r),{ptr:a,allocated:!0}},l.stream_ops=h,l},absolutePath(){eu("FS.absolutePath has been removed; use PATH_FS.resolve instead")},createFolder(){eu("FS.createFolder has been removed; use FS.mkdir instead")},createLink(){eu("FS.createLink has been removed; use FS.symlink instead")},joinPath(){eu("FS.joinPath has been removed; use PATH.join instead")},mmapAlloc(){eu("FS.mmapAlloc has been replaced by the top level function mmapAlloc")},standardizePath(){eu("FS.standardizePath has been removed; use PATH.normalize instead")}},tk={DEFAULT_POLLMASK:5,calculateAt(e,t,r){if(ty.isAbs(t))return t;if(-100===e)n=tz.cwd();else{var n;n=tk.getStreamFromFD(e).path}if(0==t.length){if(!r)throw new tz.ErrnoError(44);return n}return ty.join2(n,t)},doStat(e,t,r){try{var n=e(t)}catch(e){if(e&&e.node&&ty.normalize(t)!==ty.normalize(tz.getPath(e.node)))return -54;throw e}g[r>>2]=n.dev,g[r+4>>2]=n.mode,_[r+8>>2]=n.nlink,g[r+12>>2]=n.uid,g[r+16>>2]=n.gid,g[r+20>>2]=n.rdev,M=[n.size>>>0,+Math.abs(E=n.size)>=1?E>0?+Math.floor(E/4294967296)>>>0:~~+Math.ceil((E-+(~~E>>>0))/4294967296)>>>0:0],g[r+24>>2]=M[0],g[r+28>>2]=M[1],g[r+32>>2]=4096,g[r+36>>2]=n.blocks;var i=n.atime.getTime(),a=n.mtime.getTime(),o=n.ctime.getTime();return M=[Math.floor(i/1e3)>>>0,+Math.abs(E=Math.floor(i/1e3))>=1?E>0?+Math.floor(E/4294967296)>>>0:~~+Math.ceil((E-+(~~E>>>0))/4294967296)>>>0:0],g[r+40>>2]=M[0],g[r+44>>2]=M[1],_[r+48>>2]=i%1e3*1e3,M=[Math.floor(a/1e3)>>>0,+Math.abs(E=Math.floor(a/1e3))>=1?E>0?+Math.floor(E/4294967296)>>>0:~~+Math.ceil((E-+(~~E>>>0))/4294967296)>>>0:0],g[r+56>>2]=M[0],g[r+60>>2]=M[1],_[r+64>>2]=a%1e3*1e3,M=[Math.floor(o/1e3)>>>0,+Math.abs(E=Math.floor(o/1e3))>=1?E>0?+Math.floor(E/4294967296)>>>0:~~+Math.ceil((E-+(~~E>>>0))/4294967296)>>>0:0],g[r+72>>2]=M[0],g[r+76>>2]=M[1],_[r+80>>2]=o%1e3*1e3,M=[n.ino>>>0,+Math.abs(E=n.ino)>=1?E>0?+Math.floor(E/4294967296)>>>0:~~+Math.ceil((E-+(~~E>>>0))/4294967296)>>>0:0],g[r+88>>2]=M[0],g[r+92>>2]=M[1],0},doMsync(e,t,r,n,i){if(!tz.isFile(t.node.mode))throw new tz.ErrnoError(43);if(2&n)return 0;var a=d.slice(e,e+r);tz.msync(t,a,i,r,n)},varargs:void 0,get(){J(void 0!=tk.varargs);var e=g[+tk.varargs>>2];return tk.varargs+=4,e},getp:()=>tk.get(),getStr:e=>tr(e),getStreamFromFD:e=>tz.getStreamChecked(e)},tH=()=>eM||!1,tV=t=>{u=t,tH()||(e.onExit&&e.onExit(t),Y=!0),D(t,new ex(t))},tG=(e,t)=>{if(u=e,function(){var e=j,t=q,r=!1;j=q=e=>{r=!0};try{t7(0),["stdout","stderr"].forEach(function(e){var t=tz.analyzePath("/dev/"+e);if(t){var n=t.object.rdev,i=tw.ttys[n];i&&i.output&&i.output.length&&(r=!0)}})}catch(e){}j=e,q=t,r&&eb("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.")}(),tH()&&!t){var r=`program exited (with status: ${e}), but keepRuntimeAlive() is set (counter=0) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;i(r),q(r)}tV(e)},tW=(e,t,r,n)=>{for(var i=0,a=0;a<r;a++){var o=_[t>>2],s=_[t+4>>2];t+=8;var l=tz.read(e,c,o,s,n);if(l<0)return -1;if(i+=l,l<s)break;void 0!==n&&(n+=l)}return i},tX=(e,t)=>(J(e==e>>>0||e==(0|e)),J(t===(0|t)),t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN),tj=(e,t,r,n)=>{for(var i=0,a=0;a<r;a++){var o=_[t>>2],s=_[t+4>>2];t+=8;var l=tz.write(e,c,o,s,n);if(l<0)return -1;i+=l,void 0!==n&&(n+=l)}return i},tq=e=>e%4==0&&(e%100!=0||e%400==0),tY=(e,t)=>{for(var r=0,n=0;n<=t;r+=e[n++]);return r},tJ=[31,29,31,30,31,30,31,31,30,31,30,31],t$=[31,28,31,30,31,30,31,31,30,31,30,31],tZ=(e,t)=>{for(var r=new Date(e.getTime());t>0;){var n=tq(r.getFullYear()),i=r.getMonth(),a=(n?tJ:t$)[i];if(t>a-r.getDate())t-=a-r.getDate()+1,r.setDate(1),i<11?r.setMonth(i+1):(r.setMonth(0),r.setFullYear(r.getFullYear()+1));else{r.setDate(r.getDate()+t);break}}return r},tK=(e,t)=>{J(e.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),c.set(e,t)},tQ=(e,t,r,n)=>{var i=_[n+40>>2],a={tm_sec:g[n>>2],tm_min:g[n+4>>2],tm_hour:g[n+8>>2],tm_mday:g[n+12>>2],tm_mon:g[n+16>>2],tm_year:g[n+20>>2],tm_wday:g[n+24>>2],tm_yday:g[n+28>>2],tm_isdst:g[n+32>>2],tm_gmtoff:g[n+36>>2],tm_zone:i?tr(i):""},o=tr(r),s={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var l in s)o=o.replace(RegExp(l,"g"),s[l]);var h=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],u=["January","February","March","April","May","June","July","August","September","October","November","December"];function c(e,t,r){for(var n="number"==typeof e?e.toString():e||"";n.length<t;)n=r[0]+n;return n}function d(e,t){return c(e,t,"0")}function p(e,t){var r;function n(e){return e<0?-1:e>0?1:0}return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function m(e){var t=tZ(new Date(e.tm_year+1900,0,1),e.tm_yday),r=new Date(t.getFullYear(),0,4),n=new Date(t.getFullYear()+1,0,4),i=f(r),a=f(n);return 0>=p(i,t)?0>=p(a,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var v={"%a":e=>h[e.tm_wday].substring(0,3),"%A":e=>h[e.tm_wday],"%b":e=>u[e.tm_mon].substring(0,3),"%B":e=>u[e.tm_mon],"%C":e=>d((e.tm_year+1900)/100|0,2),"%d":e=>d(e.tm_mday,2),"%e":e=>c(e.tm_mday,2," "),"%g":e=>m(e).toString().substring(2),"%G":e=>m(e),"%H":e=>d(e.tm_hour,2),"%I":e=>{var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),d(t,2)},"%j":e=>d(e.tm_mday+tY(tq(e.tm_year+1900)?tJ:t$,e.tm_mon-1),3),"%m":e=>d(e.tm_mon+1,2),"%M":e=>d(e.tm_min,2),"%n":()=>"\n","%p":e=>e.tm_hour>=0&&e.tm_hour<12?"AM":"PM","%S":e=>d(e.tm_sec,2),"%t":()=>"	","%u":e=>e.tm_wday||7,"%U":e=>d(Math.floor((e.tm_yday+7-e.tm_wday)/7),2),"%V":e=>{var t=Math.floor((e.tm_yday+7-(e.tm_wday+6)%7)/7);if((e.tm_wday+371-e.tm_yday-2)%7<=2&&t++,t){if(53==t){var r=(e.tm_wday+371-e.tm_yday)%7;4==r||3==r&&tq(e.tm_year)||(t=1)}}else{t=52;var n=(e.tm_wday+7-e.tm_yday-1)%7;(4==n||5==n&&tq(e.tm_year%400-1))&&t++}return d(t,2)},"%w":e=>e.tm_wday,"%W":e=>d(Math.floor((e.tm_yday+7-(e.tm_wday+6)%7)/7),2),"%y":e=>(e.tm_year+1900).toString().substring(2),"%Y":e=>e.tm_year+1900,"%z":e=>{var t=e.tm_gmtoff;return(t>=0?"+":"-")+String("0000"+(t=(t=Math.abs(t)/60)/60*100+t%60)).slice(-4)},"%Z":e=>e.tm_zone,"%%":()=>"%"};for(var l in o=o.replace(/%%/g,"\0\0"),v)o.includes(l)&&(o=o.replace(RegExp(l,"g"),v[l](a)));var y=tb(o=o.replace(/\0\0/g,"%"),!1);return y.length>t?0:(tK(y,e),y.length-1)},t0=e=>{if(e instanceof ex||"unwind"==e)return u;Z(),e instanceof WebAssembly.RuntimeError&&0>=ri()&&q("Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)"),D(1,e)};S=e.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},(()=>{for(var e=Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);b=e})(),T=e.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},Object.assign(eF.prototype,{get(e){return J(void 0!==this.allocated[e],`invalid handle: ${e}`),this.allocated[e]},has(e){return void 0!==this.allocated[e]},allocate(e){var t=this.freelist.pop()||this.allocated.length;return this.allocated[t]=e,t},free(e){J(void 0!==this.allocated[e]),this.allocated[e]=void 0,this.freelist.push(e)}}),eB.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),eB.reserved=eB.allocated.length,e.count_emval_handles=()=>{for(var e=0,t=eB.reserved;t<eB.allocated.length;++t)void 0!==eB.allocated[t]&&++e;return e},A=e.UnboundTypeError=(P=Error,(N=eX(L="UnboundTypeError",function(e){this.name=L,this.message=e;var t=Error(e).stack;void 0!==t&&(this.stack=this.toString()+"\n"+t.replace(/^Error(:[^\n]*)?\n/,""))})).prototype=Object.create(P.prototype),N.prototype.constructor=N,N.prototype.toString=function(){return void 0===this.message?this.name:`${this.name}: ${this.message}`},N);var t1=function(e,t,r,n){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=tz.nextInode++,this.name=t,this.mode=r,this.node_ops={},this.stream_ops={},this.rdev=n};Object.defineProperties(t1.prototype,{read:{get:function(){return(365&this.mode)==365},set:function(e){e?this.mode|=365:this.mode&=-366}},write:{get:function(){return(146&this.mode)==146},set:function(e){e?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return tz.isDir(this.mode)}},isDevice:{get:function(){return tz.isChrdev(this.mode)}}}),tz.FSNode=t1,tz.createPreloadedFile=(e,t,r,n,i,a,o,s,l,h)=>{var u=t?tM.resolve(ty.join2(e,t)):e,c=es(`cp ${u}`);function d(r){function d(r){h&&h(),s||tP(e,t,r,n,i,l),a&&a(),eh(c)}tN(r,u,d,()=>{o&&o(),eh(c)})||d(r)}el(c),"string"==typeof r?tC(r,e=>d(e),o):d(r)},tz.staticInit(),tO={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var t2={__cxa_throw:(e,t,r)=>{new eT(e).init(t,r),J(!1,"Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.")},_embind_finalize_value_object:e=>{var t=ew[e];delete ew[e];var r=t.rawConstructor,n=t.rawDestructor,i=t.fields;eU([e],i.map(e=>e.getterReturnType).concat(i.map(e=>e.setterArgumentType)),e=>{var a={};return i.forEach((t,r)=>{var n=t.fieldName,o=e[r],s=t.getter,l=t.getterContext,h=e[r+i.length],u=t.setter,c=t.setterContext;a[n]={read:e=>o.fromWireType(s(l,e)),write:(e,t)=>{var r=[];u(c,e,h.toWireType(r,t)),eA(r)}}}),[{name:t.name,fromWireType:e=>{var t={};for(var r in a)t[r]=a[r].read(e);return n(e),t},toWireType:(e,t)=>{for(var i in a)if(!(i in t))throw TypeError(`Missing field: "${i}"`);var o=r();for(i in a)a[i].write(o,t[i]);return null!==e&&e.push(n,o),o},argPackAdvance:8,readValueFromPointer:eR,destructorFunction:n}]})},_embind_register_bigint:(e,t,r,n,i)=>{},_embind_register_bool:(e,t,r,n)=>{eO(e,{name:t=eI(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:n},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(d[e])},destructorFunction:null})},_embind_register_emval:(e,t)=>{eO(e,{name:t=eI(t),fromWireType:e=>{var t=ek(e);return ez(e),t},toWireType:(e,t)=>eH(t),argPackAdvance:8,readValueFromPointer:eR,destructorFunction:null})},_embind_register_float:(e,t,r)=>{eO(e,{name:t=eI(t),fromWireType:e=>e,toWireType:(e,t)=>{if("number"!=typeof t&&"boolean"!=typeof t)throw TypeError(`Cannot convert ${eV(t)} to ${this.name}`);return t},argPackAdvance:8,readValueFromPointer:eG(t,r),destructorFunction:null})},_embind_register_function:(e,t,r,n,i,a,o)=>{var s=eY(t,r);e=e4(e=eI(e)),i=e1(n,i),eq(e,function(){e3(`Cannot call ${e} due to unbound types`,s)},t-1),eU([],s,function(r){var n=[r[0],null].concat(r.slice(1));return eJ(e,function(e,t,r,n,i,a){var o=t.length;o<2&&eD("argTypes array size mismatch! Must at least get return value and 'this' types!"),J(!a,"Async bindings are only supported with JSPI.");for(var s=null!==t[1]&&!1,l=!1,h=1;h<t.length;++h)if(null!==t[h]&&void 0===t[h].destructorFunction){l=!0;break}for(var u="void"!==t[0].name,c="",d="",h=0;h<o-2;++h)c+=(0!==h?", ":"")+"arg"+h,d+=(0!==h?", ":"")+"arg"+h+"Wired";var p=`
		  return function ${eW(e)}(${c}) {
		  if (arguments.length !== ${o-2}) {
			throwBindingError('function ${e} called with ' + arguments.length + ' arguments, expected ${o-2}');
		  }`;l&&(p+="var destructors = [];\n");var f=l?"destructors":"null",m=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],g=[eD,n,i,eA,t[0],t[1]];s&&(p+="var thisWired = classParam.toWireType("+f+", this);\n");for(var h=0;h<o-2;++h)p+="var arg"+h+"Wired = argType"+h+".toWireType("+f+", arg"+h+"); // "+t[h+2].name+"\n",m.push("argType"+h),g.push(t[h+2]);if(s&&(d="thisWired"+(d.length>0?", ":"")+d),p+=(u||a?"var rv = ":"")+"invoker(fn"+(d.length>0?", ":"")+d+");\n",l)p+="runDestructors(destructors);\n";else for(var h=s?1:2;h<t.length;++h){var _=1===h?"thisWired":"arg"+(h-2)+"Wired";null!==t[h].destructorFunction&&(p+=_+"_dtor("+_+"); // "+t[h].name+"\n",m.push(_+"_dtor"),g.push(t[h].destructorFunction))}return u&&(p+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),p+="}\n",m.push(p),(function(e,t){if(!(e instanceof Function))throw TypeError(`new_ called with constructor type ${typeof e} which is not a function`);var r=eX(e.name||"unknownFunctionName",function(){});r.prototype=e.prototype;var n=new r,i=e.apply(n,t);return i instanceof Object?i:n})(Function,m).apply(null,g)}(e,n,0,i,a,o),t-1),[]})},_embind_register_integer:(e,t,r,n,i)=>{t=eI(t),-1===i&&(i=4294967295);var a=e=>e;if(0===n){var o=32-8*r;a=e=>e<<o>>>o}var s=t.includes("unsigned"),l=(e,r)=>{if("number"!=typeof e&&"boolean"!=typeof e)throw TypeError(`Cannot convert "${eV(e)}" to ${r}`);if(e<n||e>i)throw TypeError(`Passing a number "${eV(e)}" from JS side to C/C++ side to an argument of type "${t}", which is outside the valid range [${n}, ${i}]!`)};eO(e,{name:t,fromWireType:a,toWireType:s?function(e,t){return l(t,this.name),t>>>0}:function(e,t){return l(t,this.name),t},argPackAdvance:8,readValueFromPointer:e5(t,r,0!==n),destructorFunction:null})},_embind_register_memory_view:(e,t,r)=>{var n=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function i(e){var t=_[e>>2],r=_[e+4>>2];return new n(c.buffer,r,t)}eO(e,{name:r=eI(r),fromWireType:i,argPackAdvance:8,readValueFromPointer:i},{ignoreDuplicateRegistrations:!0})},_embind_register_std_string:(e,t)=>{var r="std::string"===(t=eI(t));eO(e,{name:t,fromWireType(e){var t,n=_[e>>2],i=e+4;if(r)for(var a=i,o=0;o<=n;++o){var s=i+o;if(o==n||0==d[s]){var l=s-a,h=tr(a,l);void 0===t?t=h:t+="\0"+h,a=s+1}}else{for(var u=Array(n),o=0;o<n;++o)u[o]=String.fromCharCode(d[i+o]);t=u.join("")}return t6(e),t},toWireType(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var n,i="string"==typeof t;i||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||eD("Cannot pass non-string to std::string");var a=t4(4+(n=r&&i?e9(t):t.length)+1),o=a+4;if(_[a>>2]=n,r&&i)e7(t,o,n+1);else if(i)for(var s=0;s<n;++s){var l=t.charCodeAt(s);l>255&&(t6(o),eD("String has UTF-16 code units that do not fit in 8 bits")),d[o+s]=l}else for(var s=0;s<n;++s)d[o+s]=t[s];return null!==e&&e.push(t6,a),a},argPackAdvance:8,readValueFromPointer:e6,destructorFunction(e){t6(e)}})},_embind_register_std_wstring:(e,t,r)=>{var n,i,a,o,s;r=eI(r),2===t?(n=ti,i=ta,o=to,a=()=>m,s=1):4===t&&(n=ts,i=tl,o=th,a=()=>_,s=2),eO(e,{name:r,fromWireType:e=>{for(var r,i=_[e>>2],o=a(),l=e+4,h=0;h<=i;++h){var u=e+4+h*t;if(h==i||0==o[u>>s]){var c=u-l,d=n(l,c);void 0===r?r=d:r+="\0"+d,l=u+t}}return t6(e),r},toWireType:(e,n)=>{"string"!=typeof n&&eD(`Cannot pass non-string to C++ string type ${r}`);var a=o(n),l=t4(4+a+t);return _[l>>2]=a>>s,i(n,l+4,a+t),null!==e&&e.push(t6,l),l},argPackAdvance:8,readValueFromPointer:eR,destructorFunction(e){t6(e)}})},_embind_register_value_object:(e,t,r,n,i,a)=>{ew[e]={name:eI(t),rawConstructor:e1(r,n),rawDestructor:e1(i,a),fields:[]}},_embind_register_value_object_field:(e,t,r,n,i,a,o,s,l,h)=>{ew[e].fields.push({fieldName:eI(t),getterReturnType:r,getter:e1(n,i),getterContext:a,setterArgumentType:o,setter:e1(s,l),setterContext:h})},_embind_register_void:(e,t)=>{eO(e,{isVoid:!0,name:t=eI(t),argPackAdvance:0,fromWireType:()=>void 0,toWireType:(e,t)=>void 0})},_emscripten_throw_longjmp:()=>{throw 1/0},_emval_decref:ez,_emval_incref:e=>{e>4&&(eB.get(e).refcount+=1)},_emval_new_cstring:e=>eH(tc(e)),_emval_take_value:(e,t)=>eH((e=td(e,"_emval_take_value")).readValueFromPointer(t)),abort:()=>{eu("native code called abort()")},emscripten_memcpy_js:(e,t,r)=>d.copyWithin(e,t,t+r),emscripten_resize_heap:e=>{var t=d.length;J((e>>>=0)>t);var r=tp();if(e>r)return q(`Cannot enlarge memory, requested ${e} bytes, but the limit is ${r} bytes!`),!1;for(var n=(e,t)=>e+(t-e%t)%t,i=1;i<=4;i*=2){var a=t*(1+.2/i);a=Math.min(a,e+100663296);var o=Math.min(r,n(Math.max(e,a),65536));if(tf(o))return!0}return q(`Failed to grow the heap from ${t} bytes to ${o} bytes, not enough memory!`),!1},environ_get:(e,t)=>{var r=0;return t_().forEach((n,i)=>{var a=t+r;_[e+4*i>>2]=a,tv(n,a),r+=n.length+1}),0},environ_sizes_get:(e,t)=>{var r=t_();_[e>>2]=r.length;var n=0;return r.forEach(e=>n+=e.length+1),_[t>>2]=n,0},exit:tG,fd_close:function(e){try{var t=tk.getStreamFromFD(e);return tz.close(t),0}catch(e){if(void 0===tz||"ErrnoError"!==e.name)throw e;return e.errno}},fd_read:function(e,t,r,n){try{var i=tk.getStreamFromFD(e),a=tW(i,t,r);return _[n>>2]=a,0}catch(e){if(void 0===tz||"ErrnoError"!==e.name)throw e;return e.errno}},fd_seek:function(e,t,r,n,i){var a=tX(t,r);try{if(isNaN(a))return 61;var o=tk.getStreamFromFD(e);return tz.llseek(o,a,n),M=[o.position>>>0,(E=o.position,+Math.abs(E)>=1?E>0?+Math.floor(E/4294967296)>>>0:~~+Math.ceil((E-+(~~E>>>0))/4294967296)>>>0:0)],g[i>>2]=M[0],g[i+4>>2]=M[1],o.getdents&&0===a&&0===n&&(o.getdents=null),0}catch(e){if(void 0===tz||"ErrnoError"!==e.name)throw e;return e.errno}},fd_write:function(e,t,r,n){try{var i=tk.getStreamFromFD(e),a=tj(i,t,r);return _[n>>2]=a,0}catch(e){if(void 0===tz||"ErrnoError"!==e.name)throw e;return e.errno}},invoke_ii:function(e,t){var r=rr();try{return eK(e)(t)}catch(e){if(rn(r),e!==e+0)throw e;t9(1,0)}},invoke_iii:function(e,t,r){var n=rr();try{return eK(e)(t,r)}catch(e){if(rn(n),e!==e+0)throw e;t9(1,0)}},invoke_iiii:function(e,t,r,n){var i=rr();try{return eK(e)(t,r,n)}catch(e){if(rn(i),e!==e+0)throw e;t9(1,0)}},invoke_iiiii:function(e,t,r,n,i){var a=rr();try{return eK(e)(t,r,n,i)}catch(e){if(rn(a),e!==e+0)throw e;t9(1,0)}},invoke_vi:function(e,t){var r=rr();try{eK(e)(t)}catch(e){if(rn(r),e!==e+0)throw e;t9(1,0)}},invoke_viii:function(e,t,r,n){var i=rr();try{eK(e)(t,r,n)}catch(e){if(rn(i),e!==e+0)throw e;t9(1,0)}},strftime_l:(e,t,r,n,i)=>tQ(e,t,r,n)},t3=function(){var t,r,n,a={env:t2,wasi_snapshot_preview1:t2};function o(e,t){var r;return J(h=(t3=e.exports).memory,"memory not found in wasm exports"),$(),J(w=t3.__indirect_function_table,"table not found in wasm exports"),r=t3.__wasm_call_ctors,Q.unshift(r),eh("wasm-instantiate"),t3}el("wasm-instantiate");var s=e;if(e.instantiateWasm)try{return e.instantiateWasm(a,o)}catch(e){q(`Module.instantiateWasm callback failed with error: ${e}`),i(e)}return(t=l,r=x,n=function(t){J(e===s,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),s=null,o(t.instance)},t||"function"!=typeof WebAssembly.instantiateStreaming||ec(r)||ed(r)||B||"function"!=typeof fetch?em(r,a,n):fetch(r,{credentials:"same-origin"}).then(e=>WebAssembly.instantiateStreaming(e,a).then(n,function(e){return q(`wasm streaming compile failed: ${e}`),q("falling back to ArrayBuffer instantiation"),em(r,a,n)}))).catch(i),{}}(),t4=ep("malloc"),t5=e._main=ep("main"),t6=ep("free"),t8=ep("__getTypeName");e.__embind_initialize_bindings=ep("_embind_initialize_bindings");var t7=e._fflush=ep("fflush"),t9=ep("setThrew"),re=()=>(re=t3.emscripten_stack_init)(),rt=()=>(rt=t3.emscripten_stack_get_end)(),rr=ep("stackSave"),rn=ep("stackRestore"),ri=()=>(ri=t3.emscripten_stack_get_current)(),ra=ep("__cxa_is_pointer_type");function ro(){var t;function n(){!R&&(R=!0,e.calledRun=!0,Y||(J(!er),er=!0,Z(),e.noFSInit||tz.init.initialized||tz.init(),tz.ignorePermissions=!1,eE(Q),Z(),eE(ee),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),rs&&function(){J(0==en,'cannot call main when async dependencies remain! (listen on Module["onRuntimeInitialized"])'),J(0==K.length,"cannot call main when preRun functions remain to be called");try{var e=t5(0,0);tG(e,!0)}catch(e){return t0(e)}}(),function(){if(Z(),e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t;t=e.postRun.shift(),et.unshift(t)}eE(et)}()))}!(en>0)&&(re(),J((3&(t=rt()))==0),0==t&&(t+=4),_[t>>2]=34821223,_[t+4>>2]=2310721022,_[0]=1668509029,function(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;){var t;t=e.preRun.shift(),K.unshift(t)}eE(K)}(),en>0||(e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),n()},1)):n(),Z()))}if(e.dynCall_jiji=ep("dynCall_jiji"),e.dynCall_viijii=ep("dynCall_viijii"),e.dynCall_iiiiij=ep("dynCall_iiiiij"),e.dynCall_iiiiijj=ep("dynCall_iiiiijj"),e.dynCall_iiiiiijj=ep("dynCall_iiiiiijj"),["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertU32PairToI53","ydayFromDate","setErrNo","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","getHostByName","getCallstack","emscriptenLog","convertPCtoSourceLocation","readEmAsmArgs","jstoi_q","jstoi_s","listenOnce","autoResumeAudioContext","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asmjsMangle","getNativeTypeSize","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","getCFunc","ccall","cwrap","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayToString","AsciiToString","stringToNewUTF8","stringToUTF8OnStack","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","stackTrace","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","createDyncallWrapper","safeSetTimeout","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","getPromise","makePromise","idsToPromises","makePromiseCallback","findMatchingCatch","setMainLoop","getSocketFromFD","getSocketAddress","FS_unlink","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","__glGenObject","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","SDL_unicode","SDL_ttfContext","SDL_audio","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","getFunctionArgsName","init_embind","getBasestPointer","registerInheritedInstance","unregisterInheritedInstance","getInheritedInstance","getInheritedInstanceCount","getLiveInheritedInstances","enumReadValueFromPointer","genericPointerToWireType","constNoSmartPtrRawPointerToWireType","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","RegisteredPointer_fromWireType","runDestructor","releaseClassHandle","detachFinalizer","attachFinalizer","makeClassHandle","init_ClassHandle","ClassHandle","throwInstanceAlreadyDeleted","flushPendingDeletes","setDelayFunction","RegisteredClass","shallowCopyInternalPointer","downcastPointer","upcastPointer","validateThis","craftEmvalAllocator","emval_get_global","emval_lookupTypes","emval_addMethodCaller"].forEach(function(e){"undefined"==typeof globalThis||Object.getOwnPropertyDescriptor(globalThis,e)||Object.defineProperty(globalThis,e,{configurable:!0,get(){var t="`"+e+"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line",r=e;r.startsWith("_")||(r="$"+e),t+=" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='"+r+"')",e_(e)&&(t+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),eb(t)}}),ey(e)}),["run","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","addRunDependency","removeRunDependency","FS_createFolder","FS_createPath","FS_createLazyFile","FS_createLink","FS_createDevice","FS_readFile","out","err","callMain","abort","wasmMemory","wasmExports","stackAlloc","stackSave","stackRestore","getTempRet0","setTempRet0","writeStackCookie","checkStackCookie","convertI32PairToI53Checked","ptrToString","zeroMemory","exitJS","getHeapMax","growMemory","ENV","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","isLeapYear","arraySum","addDays","ERRNO_CODES","ERRNO_MESSAGES","DNS","Protocols","Sockets","initRandomFill","randomFill","timers","warnOnce","UNWIND_CACHE","readEmAsmArgsArray","getExecutableName","dynCallLegacy","getDynCaller","dynCall","handleException","keepRuntimeAlive","asyncLoad","alignMemory","mmapAlloc","handleAllocatorInit","HandleAllocator","wasmTable","noExitRuntime","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","intArrayFromString","stringToAscii","UTF16Decoder","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","writeArrayToMemory","JSEvents","specialHTMLTargets","currentFullscreenStrategy","restoreOldWindowedStyle","demangle","demangleAll","ExitStatus","getEnvStrings","doReadv","doWritev","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","Browser","wget","SYSCALLS","preloadPlugins","FS_createPreloadedFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar_buffer","FS_stdin_getChar","FS","FS_createDataFile","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","emscripten_webgl_power_preferences","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack","InternalError","BindingError","throwInternalError","throwBindingError","registeredTypes","awaitingDependencies","typeDependencies","tupleRegistrations","structRegistrations","sharedRegisterType","whenDependentTypesAreResolved","embind_charCodes","embind_init_charCodes","readLatin1String","getTypeName","getFunctionName","heap32VectorToArray","requireRegisteredType","UnboundTypeError","PureVirtualError","GenericWireTypeSize","throwUnboundTypeError","ensureOverloadTable","exposePublicSymbol","replacePublicSymbol","extendError","createNamedFunction","embindRepr","registeredInstances","registeredPointers","registerType","integerReadValueFromPointer","floatReadValueFromPointer","simpleReadValueFromPointer","readPointer","runDestructors","newFunc","craftInvokerFunction","embind__requireFunction","finalizationRegistry","detachFinalizer_deps","deletionQueue","delayFunction","char_0","char_9","makeLegalFunctionName","emval_handles","emval_symbols","init_emval","count_emval_handles","getStringOrSymbol","Emval","emval_newers","emval_methodCallers"].forEach(ey),ea=function e(){R||ro(),R||(ea=e)},e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();var rs=!0;return e.noInitialRun&&(rs=!1),ro(),e.ready});const o9=async()=>(r||(r=await o7()),r),se=async e=>{let t=await o9();if("image/jpeg"!==e.sdr.mimeType)throw Error("This function expects an SDR image compressed in jpeg");if("image/jpeg"!==e.gainMap.mimeType)throw Error("This function expects a GainMap image compressed in jpeg");return t.appendGainMap(e.sdr.width,e.sdr.height,e.sdr.data,e.sdr.data.length,e.gainMap.data,e.gainMap.data.length,e.gainMapMax.reduce((e,t)=>e+t,0)/e.gainMapMax.length,e.gainMapMin.reduce((e,t)=>e+t,0)/e.gainMapMin.length,e.gamma.reduce((e,t)=>e+t,0)/e.gamma.length,e.offsetSdr.reduce((e,t)=>e+t,0)/e.offsetSdr.length,e.offsetHdr.reduce((e,t)=>e+t,0)/e.offsetHdr.length,e.hdrCapacityMin,e.hdrCapacityMax)};async function st(e){let t=await oo(e),r=on({image:e,maxContentBoost:Math.max.apply(this,t)||1}),n=new ImageData(r.sdr.toArray(),r.sdr.width,r.sdr.height),i=new ImageData(r.gainMap.toArray(),r.gainMap.width,r.gainMap.height),a="image/jpeg",[o,s]=await Promise.all([a0({source:n,mimeType:a,quality:.9,flipY:!0}),a0({source:i,mimeType:a,quality:.9,flipY:!0})]),l=r.getMetadata();return await se({...r,...l,sdr:o,gainMap:s})}const sr=new URL(location.href).searchParams,sn=parseFloat(sr.get("boost"))||1,si=parseInt(sr.get("image"))||0,sa=["../images/FLF_0016_0668369736_116RZS_N0030578FHAZ02003_0M0195J06.IMG","../images/FLF_0036_0670143894_633RZS_N0031392FHAZ00201_0A0295J03.IMG","../images/FLF_0396_0702101051_786ECM_N0180000FHAZ02220_01_195J01.IMG","../images/FLF_0991_0754919119_440EDR_N0470094FHAZ02418_01_295J02.IMG","../images/FLF_1004_0756083744_221TDR_N0480748FHAZ02418_01_295J01.IMG","../images/NLF_0014_0668187059_196RZS_N0030038NCAM00111_0A00LLJ04.IMG","../images/NLF_0029_0669530684_574RZS_N0030828NCAM03029_0A0295J02.IMG","../images/NLM_0033_0669876745_349RZS_N0031374SAPP00601_0A02LLJ02.IMG","../images/NRF_0009_0667755959_167RZS_N0030000NCAM05000_0A30LLJ03.IMG","../images/RLF_0015_0668286987_788RZS_N0030386RHAZ02000_0A0295J05.IMG","../images/RRF_0029_0669530400_036RZS_N0030828RHAZ02000_0A0295J02.IMG","../images/ZLF_0011_0667929820_098RZS_N0030000ZCAM00015_034085J01.IMG","../images/ZLF_0036_0670134061_081RAD_N0031392ZCAM03107_1100LUJ01.IMG","../images/ZR6_0036_0670134141_081RAD_N0031392ZCAM03107_1100LUJ01.IMG","../images/ZRF_0002_0667131500_647RZS_N0010052ZCAM00012_0630LUJ02.IMG","../images/ZRF_0004_0667303029_000RZS_N0010052AUT_04096_110085J03.IMG"],so=new class{constructor(){this.pagesStem="",this.targetStem="https://media.githubusercontent.com/media",this.branch="main",this.repo="",this.org=""}matchesPageStem(e){let{pagesStem:t}=this;return 0===e.href.indexOf(t)}resolve(e){if(e instanceof URL||(e=new URL(e,location.href)),!this.matchesPageStem(e))return e.toString();let{pagesStem:t,targetStem:r,branch:n,org:i,repo:a}=this,o=e.href.substring(t.length).split(/[\/]/g).filter(e=>!!e);return`${r}/${i}/${a}/${n}/${o.join("/")}`}};so.targetStem="https://media.githubusercontent.com/media",so.branch="main",so.repo="hdr-mars-imagery",so.org="gkjohnson",/github.io/g.test(location.origin)?so.pagesStem=location.origin+"/hdr-mars-imagery":so.pagesStem=location.origin;const ss=so.resolve(sa[si%sa.length]);(async()=>{let e=new aY;e.parsers.VICAR2=e=>new aJ().parse(e);let t=await e.load(ss),r=t.product.texture;r.minFilter=1003,r.magFilter=1003,window.PDS_IMAGE=t,console.log("PDS_IMAGE =",t),document.body.style.touchAction="none";let n=document.querySelector("#container"),i=t.product.height/t.product.width,a=new iA({alpha:!0});a.setPixelRatio(window.devicePixelRatio),a.setSize(750,750*i),a.domElement.style.borderRadius="10px",a.domElement.style.marginRight="5px",a.domElement.style.background="black",n.appendChild(a.domElement);let o=new aK(new tf({map:r}));o._mesh=new tY(new rh(2,2),o._mesh.material);let s=document.createElement("div");s.style.width="750px",s.style.height=`${750*i}px`,s.style.overflow="hidden",s.style.borderRadius="10px",s.style.background="black",n.appendChild(s);let l=r.image.data.slice();for(let e=0,t=l.length;e<t;e+=4)l[e+0]*=sn,l[e+1]*=sn,l[e+2]*=sn;let h={header:{},width:r.image.width,height:r.image.height,data:l,format:1023,colorSpace:_,type:1015};console.log(h);let u=document.createElement("img");s.appendChild(u),u.style.transform="scaleY(-1)",u.style.width="750px",u.style.pointerEvents="none",u.style.imageRendering="pixelated";let c=new Blob([await st(h)],{type:"octet/stream"}),d=URL.createObjectURL(c);u.src=d;let p=-1,f=-1,m=2;function g(e){let t;switch(e.deltaMode){case 2:t=100*e.deltaY;break;case 1:t=16*e.deltaY;break;case 0:t=e.deltaY}m-=Math.sign(t)*Math.log(Math.abs(t)+1)*.01,x()}function v(e){p=-1,f=-1,x()}function y(e){let t=e.target.getBoundingClientRect();p=e.clientX-t.left,f=e.clientY-t.top,x()}function x(){if(-1===p)u.style.transform="scale( 1, -1 )",o._mesh.scale.setScalar(1),o._mesh.position.setScalar(0);else{m=Math.max(m,1);let e=750*i,t=-p+375,r=f-e/2;u.style.transform=`scale( ${m}, -${m} ) translate( ${t}px, ${r}px )`;let n=o._mesh;n.scale.setScalar(m),n.position.set(2*t*m/750,2*r*m/e,0)}o.render(a)}s.addEventListener("mousemove",y),s.addEventListener("mouseleave",v),s.addEventListener("wheel",g),a.domElement.addEventListener("mousemove",y),a.domElement.addEventListener("mouseleave",v),a.domElement.addEventListener("wheel",g),x()})();
//# sourceMappingURL=index.9b744425.js.map
